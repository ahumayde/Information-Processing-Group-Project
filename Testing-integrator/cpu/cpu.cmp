	component cpu is
		port (
			clk_clk                                              : in    std_logic                     := 'X';             -- clk
			reset_reset_n                                        : in    std_logic                     := 'X';             -- reset_n
			new_sdram_controller_0_wire_addr                     : out   std_logic_vector(12 downto 0);                    -- addr
			new_sdram_controller_0_wire_ba                       : out   std_logic_vector(1 downto 0);                     -- ba
			new_sdram_controller_0_wire_cas_n                    : out   std_logic;                                        -- cas_n
			new_sdram_controller_0_wire_cke                      : out   std_logic;                                        -- cke
			new_sdram_controller_0_wire_cs_n                     : out   std_logic;                                        -- cs_n
			new_sdram_controller_0_wire_dq                       : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			new_sdram_controller_0_wire_dqm                      : out   std_logic_vector(1 downto 0);                     -- dqm
			new_sdram_controller_0_wire_ras_n                    : out   std_logic;                                        -- ras_n
			new_sdram_controller_0_wire_we_n                     : out   std_logic;                                        -- we_n
			sys_sdram_pll_0_sdram_clk_clk                        : out   std_logic;                                        -- clk
			accelerometer_spi_0_external_interface_I2C_SDAT      : inout std_logic                     := 'X';             -- I2C_SDAT
			accelerometer_spi_0_external_interface_I2C_SCLK      : out   std_logic;                                        -- I2C_SCLK
			accelerometer_spi_0_external_interface_G_SENSOR_CS_N : out   std_logic;                                        -- G_SENSOR_CS_N
			accelerometer_spi_0_external_interface_G_SENSOR_INT  : in    std_logic                     := 'X'              -- G_SENSOR_INT
		);
	end component cpu;

