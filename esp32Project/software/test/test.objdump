
test.elf:     file format elf32-littlenios2
test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0400023c

Program Header:
    LOAD off    0x00001000 vaddr 0x04000000 paddr 0x04000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04000020 paddr 0x04000020 align 2**12
         filesz 0x0000fd30 memsz 0x0000fd30 flags r-x
    LOAD off    0x00010d50 vaddr 0x0400fd50 paddr 0x04011954 align 2**12
         filesz 0x00001c04 memsz 0x00001c04 flags rw-
    LOAD off    0x00013558 vaddr 0x04013558 paddr 0x04013558 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04000000  04000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000021c  04000020  04000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f498  0400023c  0400023c  0000123c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000067c  0400f6d4  0400f6d4  000106d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c04  0400fd50  04011954  00010d50  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  04013558  04013558  00013558  2**2
                  ALLOC, SMALL_DATA
  6 .dram_controller 00000000  040136b0  040136b0  00012954  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  00012954  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001038  00000000  00000000  00012980  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0004c3aa  00000000  00000000  000139b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000f506  00000000  00000000  0005fd62  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00019ae2  00000000  00000000  0006f268  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002320  00000000  00000000  00088d4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000041b9  00000000  00000000  0008b06c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001d2e7  00000000  00000000  0008f225  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000ac50c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001d08  00000000  00000000  000ac540  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000b15ee  2**0
                  CONTENTS, READONLY
 18 .cpu          00000009  00000000  00000000  000b15f1  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000b15fa  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000b15fb  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000004  00000000  00000000  000b15fc  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000004  00000000  00000000  000b1600  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000004  00000000  00000000  000b1604  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000010  00000000  00000000  000b1608  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000051  00000000  00000000  000b1618  2**0
                  CONTENTS, READONLY
 26 .jdi          000051c7  00000000  00000000  000b1669  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     000501c7  00000000  00000000  000b6830  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04000000 l    d  .entry	00000000 .entry
04000020 l    d  .exceptions	00000000 .exceptions
0400023c l    d  .text	00000000 .text
0400f6d4 l    d  .rodata	00000000 .rodata
0400fd50 l    d  .rwdata	00000000 .rwdata
04013558 l    d  .bss	00000000 .bss
040136b0 l    d  .dram_controller	00000000 .dram_controller
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../test_bsp//obj/HAL/src/crt0.o
04000284 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
04002484 l     F .text	000000c0 __sbprintf
0400f754 l     O .rodata	00000010 blanks.5176
0400f744 l     O .rodata	00000010 zeroes.5177
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
040026a0 l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0400429c l     F .text	00000008 __fp_lock
040042b0 l     F .text	00000168 __sinit.part.0
04004418 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0400fd50 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0400f800 l     O .rodata	0000000c p05.3991
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
04006aa0 l     F .text	000000f4 __sprint_r.part.0
04007ecc l     F .text	000000c0 __sbprintf
0400f934 l     O .rodata	00000010 blanks.5153
0400f924 l     O .rodata	00000010 zeroes.5154
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
040095ec l     F .text	0000004c _init_signal_r.part.0
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0400cbcc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0400ccd8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0400cd3c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0400ce48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0400cf28 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0400d090 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0400d17c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0400d350 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
04011944 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0400d598 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0400d6cc l     F .text	00000034 alt_dev_reg
04010890 l     O .rwdata	00001060 jtag
040118f0 l     O .rwdata	0000002c accelerometer
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0400d9c4 l     F .text	00000210 altera_avalon_jtag_uart_irq
0400dbd4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0400e218 l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0400e860 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0400ead0 l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0400ed7c l     F .text	0000003c alt_get_errno
0400edb8 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
04013584 g     O .bss	00000004 alt_instruction_exception_handler
04006734 g     F .text	00000070 _mprec_log10
04006810 g     F .text	00000060 __any_on
040089f0 g     F .text	00000058 _isatty_r
0400f80c g     O .rodata	00000028 __mprec_tinytens
0400d28c g     F .text	0000007c alt_main
040135b0 g     O .bss	00000100 alt_irq
04008ae0 g     F .text	00000064 _lseek_r
04011954 g       *ABS*	00000000 __flash_rwdata_start
0400b754 g     F .text	00000080 .hidden __eqdf2
040136b0 g       *ABS*	00000000 __alt_heap_start
040098a0 g     F .text	00000060 _kill_r
04000354 g     F .text	00000038 printf
040094a4 g     F .text	0000006c _wcrtomb_r
0400964c g     F .text	00000084 _signal_r
040069a4 g     F .text	0000005c __sseek
04004598 g     F .text	00000010 __sinit
04009344 g     F .text	00000148 __swbuf_r
04008a48 g     F .text	00000074 _setlocale_r
04004420 g     F .text	00000068 __sfmoreglue
0400d32c g     F .text	00000024 __malloc_unlock
04000000 g       *ABS*	00000000 __alt_mem_dram_controller
04008b94 g     F .text	0000012c memmove
04004584 g     F .text	00000014 _cleanup
040057d4 g     F .text	000000a4 _Balloc
0400b7d4 g     F .text	000000f0 .hidden __gtdf2
0400f170 g     F .text	00000024 altera_nios2_gen2_irq_init
04000000 g     F .entry	0000001c __reset
04004b38 g     F .text	00000008 __localeconv_l
0400e464 g     F .text	000000d4 alt_up_accelerometer_spi_read_x_axis
04000020 g       *ABS*	00000000 __flash_exceptions_start
040084d4 g     F .text	00000060 _fstat_r
04013564 g     O .bss	00000004 errno
0400691c g     F .text	00000008 __seofread
04013570 g     O .bss	00000004 alt_argv
0401991c g       *ABS*	00000000 _gp
0400ce28 g     F .text	00000020 getpid
04010710 g     O .rwdata	00000180 alt_fd_list
0400ea0c g     F .text	00000090 alt_find_dev
040055e4 g     F .text	00000100 memcpy
040042a4 g     F .text	0000000c _cleanup_r
0400ca2c g     F .text	000000bc .hidden __floatsidf
0400eb80 g     F .text	0000007c alt_io_redirect
0400b8c4 g     F .text	000000f0 .hidden __ltdf2
0400f6d4 g       *ABS*	00000000 __DTOR_END__
0400f3cc g     F .text	00000098 alt_exception_cause_generated_bad_addr
0400668c g     F .text	000000a8 __ratio
04007eb0 g     F .text	0000001c __vfiprintf_internal
0400ddd0 g     F .text	00000220 altera_avalon_jtag_uart_read
04000324 g     F .text	00000030 _printf_r
0400a4bc g     F .text	00000064 .hidden __udivsi3
0400ce84 g     F .text	000000a4 isatty
040096d0 g     F .text	000000c4 _raise_r
04008048 g     F .text	00000064 __assert_func
0400f85c g     O .rodata	000000c8 __mprec_tens
0400f33c g     F .text	00000090 alt_icache_flush
04013560 g     O .bss	00000004 __malloc_top_pad
04009900 g     F .text	00000004 _getpid_r
04004b40 g     F .text	0000000c _localeconv_r
04008534 g     F .text	000004bc __sfvwrite_r
04005c20 g     F .text	00000054 __i2b
04009794 g     F .text	000000b8 __sigtramp_r
04006870 g     F .text	00000058 _sbrk_r
04008cc0 g     F .text	00000064 _read_r
0401193c g     O .rwdata	00000004 alt_max_fd
04008174 g     F .text	000000f8 _fclose_r
04004274 g     F .text	00000028 fflush
0401355c g     O .bss	00000004 __malloc_max_sbrked_mem
0400ebfc g     F .text	00000180 alt_irq_register
0400a57c g     F .text	00000978 .hidden __adddf3
04006424 g     F .text	00000104 __b2d
04009e94 g     F .text	00000534 .hidden __umoddi3
0400d1b8 g     F .text	000000d4 lseek
0401191c g     O .rwdata	00000004 _global_impure_ptr
04008d24 g     F .text	00000564 _realloc_r
040136b0 g       *ABS*	00000000 __bss_end
0400f068 g     F .text	00000108 alt_tick
04009904 g     F .text	00000590 .hidden __udivdi3
04008438 g     F .text	00000024 _fputwc_r
0400f834 g     O .rodata	00000028 __mprec_bigtens
040059d4 g     F .text	00000138 __s2b
040095d4 g     F .text	00000018 abort
0400cae8 g     F .text	00000090 .hidden __floatunsidf
04006144 g     F .text	00000058 __mcmp
040045b8 g     F .text	00000014 __fp_lock_all
0400efc4 g     F .text	000000a4 alt_alarm_stop
04013578 g     O .bss	00000004 alt_irq_active
040000fc g     F .exceptions	000000cc alt_irq_handler
040106e8 g     O .rwdata	00000028 alt_dev_null
0400e814 g     F .text	0000004c alt_dcache_flush_all
04005b0c g     F .text	00000064 __hi0bits
0400c9ac g     F .text	00000080 .hidden __fixdfsi
04011954 g       *ABS*	00000000 __ram_rwdata_end
04011934 g     O .rwdata	00000008 alt_dev_list
0400d5d4 g     F .text	000000f8 write
0400fd50 g       *ABS*	00000000 __ram_rodata_end
0400cd78 g     F .text	000000b0 fstat
0400cf64 g     F .text	0000012c kill
0400b8c4 g     F .text	000000f0 .hidden __ledf2
04005ea4 g     F .text	00000118 __pow5mult
04006bac g     F .text	00001304 ___vfiprintf_internal_r
0400a520 g     F .text	0000005c .hidden __umodsi3
040136b0 g       *ABS*	00000000 end
0400d910 g     F .text	000000b4 altera_avalon_jtag_uart_init
040001c8 g     F .exceptions	00000074 alt_instruction_exception_entry
0400f6d4 g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0400e298 g     F .text	0000007c alt_avalon_timer_sc_init
0400cb78 g     F .text	00000054 .hidden __clzsi2
0400dff0 g     F .text	00000228 altera_avalon_jtag_uart_write
040045a8 g     F .text	00000004 __sfp_lock_acquire
04005510 g     F .text	000000d4 memchr
0400038c g     F .text	000020dc ___vfprintf_internal_r
040046fc g     F .text	000002fc _free_r
0400fa98 g     O .rodata	00000180 _ctype_b
04008abc g     F .text	0000000c __locale_mb_cur_max
0400f5b4 g     F .text	00000120 __call_exitprocs
04011924 g     O .rwdata	00000004 __malloc_sbrk_base
0400023c g     F .text	0000004c _start
0401357c g     O .bss	00000004 _alt_tick_rate
04005fbc g     F .text	00000188 __lshift
04013580 g     O .bss	00000004 _alt_nticks
0400985c g     F .text	00000018 signal
0400d38c g     F .text	000000fc read
0400d73c g     F .text	00000070 alt_sys_init
0400e350 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
0400f524 g     F .text	00000090 __register_exitproc
04005c74 g     F .text	00000230 __multiply
0400dc74 g     F .text	00000068 altera_avalon_jtag_uart_close
0400fd50 g       *ABS*	00000000 __ram_rwdata_start
0400f6d4 g       *ABS*	00000000 __ram_rodata_start
04013588 g     O .bss	00000028 __malloc_current_mallinfo
04006528 g     F .text	00000164 __d2b
0400d7ac g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0400f29c g     F .text	000000a0 alt_get_fd
0400e538 g     F .text	000000d4 alt_up_accelerometer_spi_read_y_axis
04007ff0 g     F .text	00000058 _close_r
0400f4ac g     F .text	00000078 memcmp
0400d86c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
040136b0 g       *ABS*	00000000 __alt_stack_base
0400d8bc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04002544 g     F .text	0000015c __swsetup_r
0400aef4 g     F .text	00000860 .hidden __divdf3
04004488 g     F .text	000000fc __sfp
040067a4 g     F .text	0000006c __copybits
04010174 g     O .rwdata	00000408 __malloc_av_
040045b4 g     F .text	00000004 __sinit_lock_release
0400b9b4 g     F .text	00000670 .hidden __muldf3
040068c8 g     F .text	00000054 __sread
0400f194 g     F .text	00000108 alt_find_file
0400e89c g     F .text	000000a8 alt_dev_llist_insert
0400d308 g     F .text	00000024 __malloc_lock
0400d4e0 g     F .text	000000b8 sbrk
04004214 g     F .text	00000060 _fflush_r
040080c0 g     F .text	000000b4 _calloc_r
04013558 g       *ABS*	00000000 __bss_start
040056e4 g     F .text	000000f0 memset
04000288 g     F .text	0000009c main
04013574 g     O .bss	00000004 alt_envp
04013558 g     O .bss	00000004 __malloc_max_total_mem
0400d80c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0400948c g     F .text	00000018 __swbuf
04006a00 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
0400826c g     F .text	00000010 fclose
0400289c g     F .text	00001750 _dtoa_r
04004d30 g     F .text	000007e0 _malloc_r
040095a4 g     F .text	00000030 __ascii_wctomb
04011940 g     O .rwdata	00000004 alt_errno
0400827c g     F .text	00000020 _fiprintf_r
04009874 g     F .text	0000001c _init_signal
040049f8 g     F .text	00000098 _fwalk
04008b44 g     F .text	0000000c _mbtowc_r
0400a3c8 g     F .text	00000080 .hidden __divsi3
040045e0 g     F .text	0000011c _malloc_trim_r
0400f6d4 g       *ABS*	00000000 __CTOR_END__
04009288 g     F .text	000000b8 strcmp
0400f6d4 g       *ABS*	00000000 __flash_rodata_start
0400f6d4 g       *ABS*	00000000 __DTOR_LIST__
0400b754 g     F .text	00000080 .hidden __nedf2
0400d700 g     F .text	0000003c alt_irq_init
0400d488 g     F .text	00000058 alt_release_fd
0400fc18 g     O .rodata	00000100 .hidden __clz_tab
04013568 g     O .bss	00000004 _PathLocale
0400f464 g     F .text	00000014 atexit
04007f8c g     F .text	00000064 _write_r
04008ac8 g     F .text	00000018 setlocale
04011920 g     O .rwdata	00000004 _impure_ptr
0401356c g     O .bss	00000004 alt_argc
04003fec g     F .text	00000228 __sflush_r
0400e9a8 g     F .text	00000064 _do_dtors
04000020 g       .exceptions	00000000 alt_irq_entry
04008b50 g     F .text	00000044 __ascii_mbtowc
040063c8 g     F .text	0000005c __ulp
040045cc g     F .text	00000014 __fp_unlock_all
0401192c g     O .rwdata	00000008 alt_fs_list
04000020 g       *ABS*	00000000 __ram_exceptions_start
0400e314 g     F .text	0000003c alt_up_accelerometer_spi_open_dev
04004b4c g     F .text	0000000c localeconv
04004b58 g     F .text	00000098 __swhatbuf_r
04011954 g       *ABS*	00000000 _edata
040136b0 g       *ABS*	00000000 _end
040082d4 g     F .text	00000164 __fputwc
0400023c g       *ABS*	00000000 __ram_exceptions_end
0400dcdc g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
04006924 g     F .text	00000080 __swrite
04011928 g     O .rwdata	00000004 __malloc_trim_threshold
0400f478 g     F .text	00000034 exit
0400829c g     F .text	00000038 fiprintf
04009340 g     F .text	00000004 _vfiprintf_r
04004a90 g     F .text	000000a8 _fwalk_reent
0400619c g     F .text	0000022c __mdiff
0400a448 g     F .text	00000074 .hidden __modsi3
0400e60c g     F .text	000000d4 alt_up_accelerometer_spi_read_z_axis
08000000 g       *ABS*	00000000 __alt_data_end
04000020 g     F .exceptions	00000000 alt_exception
040045ac g     F .text	00000004 __sfp_lock_release
0400f994 g     O .rodata	00000101 _ctype_
0400c958 g     F .text	00000054 .hidden __unorddf2
0400cd04 g     F .text	00000038 _exit
0400e6e0 g     F .text	00000134 alt_alarm_start
0400e394 g     F .text	00000068 alt_up_accelerometer_spi_read
0400e3fc g     F .text	00000068 alt_up_accelerometer_spi_write
04004bf0 g     F .text	00000140 __smakebuf_r
04006a08 g     F .text	00000098 strlen
04009638 g     F .text	00000014 _init_signal_r
0400ee70 g     F .text	00000154 open
0400b7d4 g     F .text	000000f0 .hidden __gedf2
040080ac g     F .text	00000014 __assert
04006b94 g     F .text	00000018 __sprint_r
0400ea9c g     F .text	00000034 alt_icache_flush_all
04011948 g     O .rwdata	00000004 alt_priority_mask
04002468 g     F .text	0000001c __vfprintf_internal
04009598 g     F .text	0000000c _wctomb_r
0400c024 g     F .text	00000934 .hidden __subdf3
04005b70 g     F .text	000000b0 __lo0bits
0401194c g     O .rwdata	00000008 alt_alarm_list
0400e944 g     F .text	00000064 _do_ctors
04009890 g     F .text	00000010 __sigtramp
04009510 g     F .text	00000088 wcrtomb
0400cc08 g     F .text	000000d0 close
0401057c g     O .rwdata	0000016c __global_locale
0400d0f8 g     F .text	00000084 alt_load
0400845c g     F .text	00000078 fputwc
0400984c g     F .text	00000010 raise
040045b0 g     F .text	00000004 __sinit_lock_acquire
0400589c g     F .text	00000138 __multadd
04005878 g     F .text	00000024 _Bfree



Disassembly of section .entry:

04000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 4000000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
 4000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 4000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 400000c:	00bffd16 	blt	zero,r2,4000004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4000010:	00410034 	movhi	at,1024
    ori r1, r1, %lo(_start)
 4000014:	08408f14 	ori	at,at,572
    jmp r1
 4000018:	0800683a 	jmp	at
 400001c:	00000000 	call	0 <__alt_mem_dram_controller-0x4000000>

Disassembly of section .exceptions:

04000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 400002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 400003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 400004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 400005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 400006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 400007c:	10000326 	beq	r2,zero,400008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4000080:	20000226 	beq	r4,zero,400008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4000084:	40000fc0 	call	40000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4000088:	00000706 	br	40000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 400008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4000098:	40001c80 	call	40001c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 400009c:	1000021e 	bne	r2,zero,40000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40000f8:	ef80083a 	eret

040000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40000fc:	defff904 	addi	sp,sp,-28
 4000100:	dfc00615 	stw	ra,24(sp)
 4000104:	df000515 	stw	fp,20(sp)
 4000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 400010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4000110:	0005313a 	rdctl	r2,ipending
 4000114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 4000118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 400011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 4000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4000124:	00800044 	movi	r2,1
 4000128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 400012c:	e0ffff17 	ldw	r3,-4(fp)
 4000130:	e0bffe17 	ldw	r2,-8(fp)
 4000134:	1884703a 	and	r2,r3,r2
 4000138:	10001226 	beq	r2,zero,4000184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 400013c:	e0bffd17 	ldw	r2,-12(fp)
 4000140:	100690fa 	slli	r3,r2,3
 4000144:	00810074 	movhi	r2,1025
 4000148:	1885883a 	add	r2,r3,r2
 400014c:	10cd6c17 	ldw	r3,13744(r2)
 4000150:	e0bffd17 	ldw	r2,-12(fp)
 4000154:	100890fa 	slli	r4,r2,3
 4000158:	00810074 	movhi	r2,1025
 400015c:	2085883a 	add	r2,r4,r2
 4000160:	108d6d17 	ldw	r2,13748(r2)
 4000164:	e17ffd17 	ldw	r5,-12(fp)
 4000168:	1009883a 	mov	r4,r2
 400016c:	183ee83a 	callr	r3
#endif
        break;
 4000170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 4000174:	0005313a 	rdctl	r2,ipending
 4000178:	e0bffb15 	stw	r2,-20(fp)
  return active;
 400017c:	e0bffb17 	ldw	r2,-20(fp)
 4000180:	00000706 	br	40001a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
 4000184:	e0bffe17 	ldw	r2,-8(fp)
 4000188:	1085883a 	add	r2,r2,r2
 400018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 4000190:	e0bffd17 	ldw	r2,-12(fp)
 4000194:	10800044 	addi	r2,r2,1
 4000198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 400019c:	003fe306 	br	400012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 40001a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 40001a4:	e0bfff17 	ldw	r2,-4(fp)
 40001a8:	103fdd1e 	bne	r2,zero,4000120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40001ac:	0001883a 	nop
}
 40001b0:	0001883a 	nop
 40001b4:	e037883a 	mov	sp,fp
 40001b8:	dfc00117 	ldw	ra,4(sp)
 40001bc:	df000017 	ldw	fp,0(sp)
 40001c0:	dec00204 	addi	sp,sp,8
 40001c4:	f800283a 	ret

040001c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40001c8:	defffb04 	addi	sp,sp,-20
 40001cc:	dfc00415 	stw	ra,16(sp)
 40001d0:	df000315 	stw	fp,12(sp)
 40001d4:	df000304 	addi	fp,sp,12
 40001d8:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 40001dc:	000531fa 	rdctl	r2,exception
 40001e0:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 40001e4:	e0bfff17 	ldw	r2,-4(fp)
 40001e8:	1004d0ba 	srli	r2,r2,2
 40001ec:	108007cc 	andi	r2,r2,31
 40001f0:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 40001f4:	0005333a 	rdctl	r2,badaddr
 40001f8:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 40001fc:	d0a71a17 	ldw	r2,-25496(gp)
 4000200:	10000726 	beq	r2,zero,4000220 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 4000204:	d0a71a17 	ldw	r2,-25496(gp)
 4000208:	e0ffff17 	ldw	r3,-4(fp)
 400020c:	e1bffe17 	ldw	r6,-8(fp)
 4000210:	e17ffd17 	ldw	r5,-12(fp)
 4000214:	1809883a 	mov	r4,r3
 4000218:	103ee83a 	callr	r2
 400021c:	00000206 	br	4000228 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4000220:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 4000224:	0005883a 	mov	r2,zero
}
 4000228:	e037883a 	mov	sp,fp
 400022c:	dfc00117 	ldw	ra,4(sp)
 4000230:	df000017 	ldw	fp,0(sp)
 4000234:	dec00204 	addi	sp,sp,8
 4000238:	f800283a 	ret

Disassembly of section .text:

0400023c <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 400023c:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 4000240:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 4000244:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 4000248:	00bffd16 	blt	zero,r2,4000240 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 400024c:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
 4000250:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 4000254:	06810074 	movhi	gp,1025
    ori gp, gp, %lo(_gp)
 4000258:	d6a64714 	ori	gp,gp,39196
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 400025c:	00810074 	movhi	r2,1025
    ori r2, r2, %lo(__bss_start)
 4000260:	108d5614 	ori	r2,r2,13656

    movhi r3, %hi(__bss_end)
 4000264:	00c10074 	movhi	r3,1025
    ori r3, r3, %lo(__bss_end)
 4000268:	18cdac14 	ori	r3,r3,14000

    beq r2, r3, 1f
 400026c:	10c00326 	beq	r2,r3,400027c <_start+0x40>

0:
    stw zero, (r2)
 4000270:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4000274:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 4000278:	10fffd36 	bltu	r2,r3,4000270 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 400027c:	400d0f80 	call	400d0f8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4000280:	400d28c0 	call	400d28c <alt_main>

04000284 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4000284:	003fff06 	br	4000284 <alt_after_alt_main>

04000288 <main>:
#include <stdio.h>
#include <altera_up_avalon_accelerometer_spi.h>
#include "system.h"

int main()
{
 4000288:	defffa04 	addi	sp,sp,-24
 400028c:	dfc00515 	stw	ra,20(sp)
 4000290:	df000415 	stw	fp,16(sp)
 4000294:	df000404 	addi	fp,sp,16
  alt_32 xRead, zRead, yRead;
  alt_up_accelerometer_spi_dev *accDev;
  accDev = alt_up_accelerometer_spi_open_dev(ACCELEROMETER_NAME);
 4000298:	01010074 	movhi	r4,1025
 400029c:	213db504 	addi	r4,r4,-2348
 40002a0:	400e3140 	call	400e314 <alt_up_accelerometer_spi_open_dev>
 40002a4:	e0bfff15 	stw	r2,-4(fp)

  if ( accDev == NULL )
 40002a8:	e0bfff17 	ldw	r2,-4(fp)
 40002ac:	1000021e 	bne	r2,zero,40002b8 <main+0x30>
  {
    return 1;
 40002b0:	00800044 	movi	r2,1
 40002b4:	00001606 	br	4000310 <main+0x88>
  }

  while ( 1 )
  {
    alt_up_accelerometer_spi_read_x_axis(accDev, &xRead);
 40002b8:	e0bffe04 	addi	r2,fp,-8
 40002bc:	100b883a 	mov	r5,r2
 40002c0:	e13fff17 	ldw	r4,-4(fp)
 40002c4:	400e4640 	call	400e464 <alt_up_accelerometer_spi_read_x_axis>
    alt_up_accelerometer_spi_read_x_axis(accDev, &yRead);
 40002c8:	e0bffc04 	addi	r2,fp,-16
 40002cc:	100b883a 	mov	r5,r2
 40002d0:	e13fff17 	ldw	r4,-4(fp)
 40002d4:	400e4640 	call	400e464 <alt_up_accelerometer_spi_read_x_axis>
    alt_up_accelerometer_spi_read_x_axis(accDev, &zRead);
 40002d8:	e0bffd04 	addi	r2,fp,-12
 40002dc:	100b883a 	mov	r5,r2
 40002e0:	e13fff17 	ldw	r4,-4(fp)
 40002e4:	400e4640 	call	400e464 <alt_up_accelerometer_spi_read_x_axis>
    printf("sent: %ld, %ld, %ld\n", xRead, yRead, zRead);
 40002e8:	e0bffe17 	ldw	r2,-8(fp)
 40002ec:	e0fffc17 	ldw	r3,-16(fp)
 40002f0:	e13ffd17 	ldw	r4,-12(fp)
 40002f4:	200f883a 	mov	r7,r4
 40002f8:	180d883a 	mov	r6,r3
 40002fc:	100b883a 	mov	r5,r2
 4000300:	01010074 	movhi	r4,1025
 4000304:	213dba04 	addi	r4,r4,-2328
 4000308:	40003540 	call	4000354 <printf>
    alt_up_accelerometer_spi_read_x_axis(accDev, &xRead);
 400030c:	003fea06 	br	40002b8 <main+0x30>
  }


  return 0;
}
 4000310:	e037883a 	mov	sp,fp
 4000314:	dfc00117 	ldw	ra,4(sp)
 4000318:	df000017 	ldw	fp,0(sp)
 400031c:	dec00204 	addi	sp,sp,8
 4000320:	f800283a 	ret

04000324 <_printf_r>:
 4000324:	defffd04 	addi	sp,sp,-12
 4000328:	2805883a 	mov	r2,r5
 400032c:	dfc00015 	stw	ra,0(sp)
 4000330:	d9800115 	stw	r6,4(sp)
 4000334:	d9c00215 	stw	r7,8(sp)
 4000338:	21400217 	ldw	r5,8(r4)
 400033c:	d9c00104 	addi	r7,sp,4
 4000340:	100d883a 	mov	r6,r2
 4000344:	400038c0 	call	400038c <___vfprintf_internal_r>
 4000348:	dfc00017 	ldw	ra,0(sp)
 400034c:	dec00304 	addi	sp,sp,12
 4000350:	f800283a 	ret

04000354 <printf>:
 4000354:	defffc04 	addi	sp,sp,-16
 4000358:	dfc00015 	stw	ra,0(sp)
 400035c:	d9400115 	stw	r5,4(sp)
 4000360:	d9800215 	stw	r6,8(sp)
 4000364:	d9c00315 	stw	r7,12(sp)
 4000368:	00810074 	movhi	r2,1025
 400036c:	10864817 	ldw	r2,6432(r2)
 4000370:	200b883a 	mov	r5,r4
 4000374:	d9800104 	addi	r6,sp,4
 4000378:	11000217 	ldw	r4,8(r2)
 400037c:	40024680 	call	4002468 <__vfprintf_internal>
 4000380:	dfc00017 	ldw	ra,0(sp)
 4000384:	dec00404 	addi	sp,sp,16
 4000388:	f800283a 	ret

0400038c <___vfprintf_internal_r>:
 400038c:	deffbf04 	addi	sp,sp,-260
 4000390:	dfc04015 	stw	ra,256(sp)
 4000394:	dd803d15 	stw	r22,244(sp)
 4000398:	dcc03a15 	stw	r19,232(sp)
 400039c:	dc803915 	stw	r18,228(sp)
 40003a0:	2027883a 	mov	r19,r4
 40003a4:	2825883a 	mov	r18,r5
 40003a8:	302d883a 	mov	r22,r6
 40003ac:	d9c00615 	stw	r7,24(sp)
 40003b0:	df003f15 	stw	fp,252(sp)
 40003b4:	ddc03e15 	stw	r23,248(sp)
 40003b8:	dd403c15 	stw	r21,240(sp)
 40003bc:	dd003b15 	stw	r20,236(sp)
 40003c0:	dc403815 	stw	r17,224(sp)
 40003c4:	dc003715 	stw	r16,220(sp)
 40003c8:	4004b400 	call	4004b40 <_localeconv_r>
 40003cc:	10800017 	ldw	r2,0(r2)
 40003d0:	1009883a 	mov	r4,r2
 40003d4:	d8800d15 	stw	r2,52(sp)
 40003d8:	4006a080 	call	4006a08 <strlen>
 40003dc:	d8800b15 	stw	r2,44(sp)
 40003e0:	98000226 	beq	r19,zero,40003ec <___vfprintf_internal_r+0x60>
 40003e4:	98800e17 	ldw	r2,56(r19)
 40003e8:	1001d526 	beq	r2,zero,4000b40 <___vfprintf_internal_r+0x7b4>
 40003ec:	9080030b 	ldhu	r2,12(r18)
 40003f0:	10c8000c 	andi	r3,r2,8192
 40003f4:	1800061e 	bne	r3,zero,4000410 <___vfprintf_internal_r+0x84>
 40003f8:	90c01917 	ldw	r3,100(r18)
 40003fc:	0137ffc4 	movi	r4,-8193
 4000400:	10880014 	ori	r2,r2,8192
 4000404:	1906703a 	and	r3,r3,r4
 4000408:	9080030d 	sth	r2,12(r18)
 400040c:	90c01915 	stw	r3,100(r18)
 4000410:	10c0020c 	andi	r3,r2,8
 4000414:	1800fa26 	beq	r3,zero,4000800 <___vfprintf_internal_r+0x474>
 4000418:	90c00417 	ldw	r3,16(r18)
 400041c:	1800f826 	beq	r3,zero,4000800 <___vfprintf_internal_r+0x474>
 4000420:	1080068c 	andi	r2,r2,26
 4000424:	10800298 	cmpnei	r2,r2,10
 4000428:	1000fd26 	beq	r2,zero,4000820 <___vfprintf_internal_r+0x494>
 400042c:	d8802704 	addi	r2,sp,156
 4000430:	b02f883a 	mov	r23,r22
 4000434:	d8801a15 	stw	r2,104(sp)
 4000438:	d8001c15 	stw	zero,112(sp)
 400043c:	d8001b15 	stw	zero,108(sp)
 4000440:	d8000815 	stw	zero,32(sp)
 4000444:	d8000915 	stw	zero,36(sp)
 4000448:	d8000a15 	stw	zero,40(sp)
 400044c:	d8000c15 	stw	zero,48(sp)
 4000450:	d8001015 	stw	zero,64(sp)
 4000454:	d8000515 	stw	zero,20(sp)
 4000458:	102d883a 	mov	r22,r2
 400045c:	b8800007 	ldb	r2,0(r23)
 4000460:	1000d526 	beq	r2,zero,40007b8 <___vfprintf_internal_r+0x42c>
 4000464:	b821883a 	mov	r16,r23
 4000468:	00000306 	br	4000478 <___vfprintf_internal_r+0xec>
 400046c:	80800047 	ldb	r2,1(r16)
 4000470:	84000044 	addi	r16,r16,1
 4000474:	10011726 	beq	r2,zero,40008d4 <___vfprintf_internal_r+0x548>
 4000478:	10800958 	cmpnei	r2,r2,37
 400047c:	103ffb1e 	bne	r2,zero,400046c <___vfprintf_internal_r+0xe0>
 4000480:	85e3c83a 	sub	r17,r16,r23
 4000484:	85c1151e 	bne	r16,r23,40008dc <___vfprintf_internal_r+0x550>
 4000488:	80800003 	ldbu	r2,0(r16)
 400048c:	10803fcc 	andi	r2,r2,255
 4000490:	1080201c 	xori	r2,r2,128
 4000494:	10bfe004 	addi	r2,r2,-128
 4000498:	1000c726 	beq	r2,zero,40007b8 <___vfprintf_internal_r+0x42c>
 400049c:	82c00047 	ldb	r11,1(r16)
 40004a0:	85c00044 	addi	r23,r16,1
 40004a4:	d8001345 	stb	zero,77(sp)
 40004a8:	0009883a 	mov	r4,zero
 40004ac:	000b883a 	mov	r5,zero
 40004b0:	023fffc4 	movi	r8,-1
 40004b4:	0021883a 	mov	r16,zero
 40004b8:	0019883a 	mov	r12,zero
 40004bc:	bdc00044 	addi	r23,r23,1
 40004c0:	5839883a 	mov	fp,r11
 40004c4:	e0bff804 	addi	r2,fp,-32
 40004c8:	10c01668 	cmpgeui	r3,r2,89
 40004cc:	18006a1e 	bne	r3,zero,4000678 <___vfprintf_internal_r+0x2ec>
 40004d0:	100490ba 	slli	r2,r2,2
 40004d4:	00c10034 	movhi	r3,1024
 40004d8:	10c7883a 	add	r3,r2,r3
 40004dc:	18813917 	ldw	r2,1252(r3)
 40004e0:	1000683a 	jmp	r2
 40004e4:	04000ec0 	call	4000ec <__alt_mem_dram_controller-0x3bfff14>
 40004e8:	04000678 	rdprs	r16,zero,25
 40004ec:	04000678 	rdprs	r16,zero,25
 40004f0:	04000eb4 	movhi	r16,58
 40004f4:	04000678 	rdprs	r16,zero,25
 40004f8:	04000678 	rdprs	r16,zero,25
 40004fc:	04000678 	rdprs	r16,zero,25
 4000500:	04000678 	rdprs	r16,zero,25
 4000504:	04000678 	rdprs	r16,zero,25
 4000508:	04000678 	rdprs	r16,zero,25
 400050c:	04000e8c 	andi	r16,zero,58
 4000510:	04000e7c 	xorhi	r16,zero,57
 4000514:	04000678 	rdprs	r16,zero,25
 4000518:	04000e64 	muli	r16,zero,57
 400051c:	04000e20 	cmpeqi	r16,zero,56
 4000520:	04000678 	rdprs	r16,zero,25
 4000524:	04000e14 	movui	r16,56
 4000528:	04000648 	cmpgei	r16,zero,25
 400052c:	04000648 	cmpgei	r16,zero,25
 4000530:	04000648 	cmpgei	r16,zero,25
 4000534:	04000648 	cmpgei	r16,zero,25
 4000538:	04000648 	cmpgei	r16,zero,25
 400053c:	04000648 	cmpgei	r16,zero,25
 4000540:	04000648 	cmpgei	r16,zero,25
 4000544:	04000648 	cmpgei	r16,zero,25
 4000548:	04000648 	cmpgei	r16,zero,25
 400054c:	04000678 	rdprs	r16,zero,25
 4000550:	04000678 	rdprs	r16,zero,25
 4000554:	04000678 	rdprs	r16,zero,25
 4000558:	04000678 	rdprs	r16,zero,25
 400055c:	04000678 	rdprs	r16,zero,25
 4000560:	04000678 	rdprs	r16,zero,25
 4000564:	04000678 	rdprs	r16,zero,25
 4000568:	04000678 	rdprs	r16,zero,25
 400056c:	04000678 	rdprs	r16,zero,25
 4000570:	04000678 	rdprs	r16,zero,25
 4000574:	04000d08 	cmpgei	r16,zero,52
 4000578:	04000938 	rdprs	r16,zero,36
 400057c:	04000678 	rdprs	r16,zero,25
 4000580:	04000938 	rdprs	r16,zero,36
 4000584:	04000678 	rdprs	r16,zero,25
 4000588:	04000678 	rdprs	r16,zero,25
 400058c:	04000678 	rdprs	r16,zero,25
 4000590:	04000678 	rdprs	r16,zero,25
 4000594:	04000eec 	andhi	r16,zero,59
 4000598:	04000678 	rdprs	r16,zero,25
 400059c:	04000678 	rdprs	r16,zero,25
 40005a0:	0400086c 	andhi	r16,zero,33
 40005a4:	04000678 	rdprs	r16,zero,25
 40005a8:	04000678 	rdprs	r16,zero,25
 40005ac:	04000678 	rdprs	r16,zero,25
 40005b0:	04000678 	rdprs	r16,zero,25
 40005b4:	04000678 	rdprs	r16,zero,25
 40005b8:	04000844 	movi	r16,33
 40005bc:	04000678 	rdprs	r16,zero,25
 40005c0:	04000678 	rdprs	r16,zero,25
 40005c4:	04000f20 	cmpeqi	r16,zero,60
 40005c8:	04000678 	rdprs	r16,zero,25
 40005cc:	04000678 	rdprs	r16,zero,25
 40005d0:	04000678 	rdprs	r16,zero,25
 40005d4:	04000678 	rdprs	r16,zero,25
 40005d8:	04000678 	rdprs	r16,zero,25
 40005dc:	04000678 	rdprs	r16,zero,25
 40005e0:	04000678 	rdprs	r16,zero,25
 40005e4:	04000678 	rdprs	r16,zero,25
 40005e8:	04000678 	rdprs	r16,zero,25
 40005ec:	04000678 	rdprs	r16,zero,25
 40005f0:	04000ef8 	rdprs	r16,zero,59
 40005f4:	04000b4c 	andi	r16,zero,45
 40005f8:	04000938 	rdprs	r16,zero,36
 40005fc:	04000938 	rdprs	r16,zero,36
 4000600:	04000938 	rdprs	r16,zero,36
 4000604:	04000bc0 	call	4000bc <__alt_mem_dram_controller-0x3bfff44>
 4000608:	04000b4c 	andi	r16,zero,45
 400060c:	04000678 	rdprs	r16,zero,25
 4000610:	04000678 	rdprs	r16,zero,25
 4000614:	04000cf4 	movhi	r16,51
 4000618:	04000678 	rdprs	r16,zero,25
 400061c:	04000cb8 	rdprs	r16,zero,50
 4000620:	04000870 	cmpltui	r16,zero,33
 4000624:	04000c78 	rdprs	r16,zero,49
 4000628:	04000c6c 	andhi	r16,zero,49
 400062c:	04000678 	rdprs	r16,zero,25
 4000630:	04000c14 	movui	r16,48
 4000634:	04000678 	rdprs	r16,zero,25
 4000638:	04000848 	cmpgei	r16,zero,33
 400063c:	04000678 	rdprs	r16,zero,25
 4000640:	04000678 	rdprs	r16,zero,25
 4000644:	04000bcc 	andi	r16,zero,47
 4000648:	0021883a 	mov	r16,zero
 400064c:	e0bff404 	addi	r2,fp,-48
 4000650:	bf000007 	ldb	fp,0(r23)
 4000654:	840002a4 	muli	r16,r16,10
 4000658:	bdc00044 	addi	r23,r23,1
 400065c:	1421883a 	add	r16,r2,r16
 4000660:	e0bff404 	addi	r2,fp,-48
 4000664:	10c002b0 	cmpltui	r3,r2,10
 4000668:	183ff91e 	bne	r3,zero,4000650 <___vfprintf_internal_r+0x2c4>
 400066c:	e0bff804 	addi	r2,fp,-32
 4000670:	10c01668 	cmpgeui	r3,r2,89
 4000674:	183f9626 	beq	r3,zero,40004d0 <___vfprintf_internal_r+0x144>
 4000678:	21003fcc 	andi	r4,r4,255
 400067c:	20068d1e 	bne	r4,zero,40020b4 <___vfprintf_internal_r+0x1d28>
 4000680:	e0004d26 	beq	fp,zero,40007b8 <___vfprintf_internal_r+0x42c>
 4000684:	df001d05 	stb	fp,116(sp)
 4000688:	d8001345 	stb	zero,77(sp)
 400068c:	05000044 	movi	r20,1
 4000690:	05400044 	movi	r21,1
 4000694:	dc401d04 	addi	r17,sp,116
 4000698:	db000415 	stw	r12,16(sp)
 400069c:	0011883a 	mov	r8,zero
 40006a0:	d8000715 	stw	zero,28(sp)
 40006a4:	d8800417 	ldw	r2,16(sp)
 40006a8:	1380008c 	andi	r14,r2,2
 40006ac:	70000126 	beq	r14,zero,40006b4 <___vfprintf_internal_r+0x328>
 40006b0:	a5000084 	addi	r20,r20,2
 40006b4:	d8800417 	ldw	r2,16(sp)
 40006b8:	d8c01c17 	ldw	r3,112(sp)
 40006bc:	1340210c 	andi	r13,r2,132
 40006c0:	6800021e 	bne	r13,zero,40006cc <___vfprintf_internal_r+0x340>
 40006c4:	850fc83a 	sub	r7,r16,r20
 40006c8:	01c35e16 	blt	zero,r7,4001444 <___vfprintf_internal_r+0x10b8>
 40006cc:	d8801347 	ldb	r2,77(sp)
 40006d0:	10000c26 	beq	r2,zero,4000704 <___vfprintf_internal_r+0x378>
 40006d4:	d8801b17 	ldw	r2,108(sp)
 40006d8:	d9001344 	addi	r4,sp,77
 40006dc:	18c00044 	addi	r3,r3,1
 40006e0:	10800044 	addi	r2,r2,1
 40006e4:	b1000015 	stw	r4,0(r22)
 40006e8:	01000044 	movi	r4,1
 40006ec:	d8801b15 	stw	r2,108(sp)
 40006f0:	b1000115 	stw	r4,4(r22)
 40006f4:	d8c01c15 	stw	r3,112(sp)
 40006f8:	10800208 	cmpgei	r2,r2,8
 40006fc:	10039e1e 	bne	r2,zero,4001578 <___vfprintf_internal_r+0x11ec>
 4000700:	b5800204 	addi	r22,r22,8
 4000704:	70000c26 	beq	r14,zero,4000738 <___vfprintf_internal_r+0x3ac>
 4000708:	d8801b17 	ldw	r2,108(sp)
 400070c:	d9001384 	addi	r4,sp,78
 4000710:	18c00084 	addi	r3,r3,2
 4000714:	10800044 	addi	r2,r2,1
 4000718:	b1000015 	stw	r4,0(r22)
 400071c:	01000084 	movi	r4,2
 4000720:	d8801b15 	stw	r2,108(sp)
 4000724:	b1000115 	stw	r4,4(r22)
 4000728:	d8c01c15 	stw	r3,112(sp)
 400072c:	10800208 	cmpgei	r2,r2,8
 4000730:	1003851e 	bne	r2,zero,4001548 <___vfprintf_internal_r+0x11bc>
 4000734:	b5800204 	addi	r22,r22,8
 4000738:	6b402018 	cmpnei	r13,r13,128
 400073c:	68025026 	beq	r13,zero,4001080 <___vfprintf_internal_r+0xcf4>
 4000740:	4551c83a 	sub	r8,r8,r21
 4000744:	02028816 	blt	zero,r8,4001168 <___vfprintf_internal_r+0xddc>
 4000748:	d8800417 	ldw	r2,16(sp)
 400074c:	1080400c 	andi	r2,r2,256
 4000750:	1002051e 	bne	r2,zero,4000f68 <___vfprintf_internal_r+0xbdc>
 4000754:	d8801b17 	ldw	r2,108(sp)
 4000758:	1d47883a 	add	r3,r3,r21
 400075c:	b4400015 	stw	r17,0(r22)
 4000760:	10800044 	addi	r2,r2,1
 4000764:	b5400115 	stw	r21,4(r22)
 4000768:	d8801b15 	stw	r2,108(sp)
 400076c:	d8c01c15 	stw	r3,112(sp)
 4000770:	10800208 	cmpgei	r2,r2,8
 4000774:	1002ec1e 	bne	r2,zero,4001328 <___vfprintf_internal_r+0xf9c>
 4000778:	b5800204 	addi	r22,r22,8
 400077c:	d8800417 	ldw	r2,16(sp)
 4000780:	1440010c 	andi	r17,r2,4
 4000784:	88000226 	beq	r17,zero,4000790 <___vfprintf_internal_r+0x404>
 4000788:	8523c83a 	sub	r17,r16,r20
 400078c:	0440bd16 	blt	zero,r17,4000a84 <___vfprintf_internal_r+0x6f8>
 4000790:	8500010e 	bge	r16,r20,4000798 <___vfprintf_internal_r+0x40c>
 4000794:	a021883a 	mov	r16,r20
 4000798:	d8800517 	ldw	r2,20(sp)
 400079c:	1405883a 	add	r2,r2,r16
 40007a0:	d8800515 	stw	r2,20(sp)
 40007a4:	1802b71e 	bne	r3,zero,4001284 <___vfprintf_internal_r+0xef8>
 40007a8:	b8800007 	ldb	r2,0(r23)
 40007ac:	d8001b15 	stw	zero,108(sp)
 40007b0:	dd802704 	addi	r22,sp,156
 40007b4:	103f2b1e 	bne	r2,zero,4000464 <___vfprintf_internal_r+0xd8>
 40007b8:	d8801c17 	ldw	r2,112(sp)
 40007bc:	1006381e 	bne	r2,zero,40020a0 <___vfprintf_internal_r+0x1d14>
 40007c0:	9080030b 	ldhu	r2,12(r18)
 40007c4:	1080100c 	andi	r2,r2,64
 40007c8:	1006c71e 	bne	r2,zero,40022e8 <___vfprintf_internal_r+0x1f5c>
 40007cc:	d8800517 	ldw	r2,20(sp)
 40007d0:	dfc04017 	ldw	ra,256(sp)
 40007d4:	df003f17 	ldw	fp,252(sp)
 40007d8:	ddc03e17 	ldw	r23,248(sp)
 40007dc:	dd803d17 	ldw	r22,244(sp)
 40007e0:	dd403c17 	ldw	r21,240(sp)
 40007e4:	dd003b17 	ldw	r20,236(sp)
 40007e8:	dcc03a17 	ldw	r19,232(sp)
 40007ec:	dc803917 	ldw	r18,228(sp)
 40007f0:	dc403817 	ldw	r17,224(sp)
 40007f4:	dc003717 	ldw	r16,220(sp)
 40007f8:	dec04104 	addi	sp,sp,260
 40007fc:	f800283a 	ret
 4000800:	900b883a 	mov	r5,r18
 4000804:	9809883a 	mov	r4,r19
 4000808:	40025440 	call	4002544 <__swsetup_r>
 400080c:	1006b61e 	bne	r2,zero,40022e8 <___vfprintf_internal_r+0x1f5c>
 4000810:	9080030b 	ldhu	r2,12(r18)
 4000814:	1080068c 	andi	r2,r2,26
 4000818:	10800298 	cmpnei	r2,r2,10
 400081c:	103f031e 	bne	r2,zero,400042c <___vfprintf_internal_r+0xa0>
 4000820:	9080038f 	ldh	r2,14(r18)
 4000824:	103f0116 	blt	r2,zero,400042c <___vfprintf_internal_r+0xa0>
 4000828:	d9c00617 	ldw	r7,24(sp)
 400082c:	b00d883a 	mov	r6,r22
 4000830:	900b883a 	mov	r5,r18
 4000834:	9809883a 	mov	r4,r19
 4000838:	40024840 	call	4002484 <__sbprintf>
 400083c:	d8800515 	stw	r2,20(sp)
 4000840:	003fe206 	br	40007cc <___vfprintf_internal_r+0x440>
 4000844:	63000414 	ori	r12,r12,16
 4000848:	6080080c 	andi	r2,r12,32
 400084c:	10008126 	beq	r2,zero,4000a54 <___vfprintf_internal_r+0x6c8>
 4000850:	d8c00617 	ldw	r3,24(sp)
 4000854:	00800044 	movi	r2,1
 4000858:	1d000017 	ldw	r20,0(r3)
 400085c:	1d400117 	ldw	r21,4(r3)
 4000860:	18c00204 	addi	r3,r3,8
 4000864:	d8c00615 	stw	r3,24(sp)
 4000868:	00000906 	br	4000890 <___vfprintf_internal_r+0x504>
 400086c:	63000414 	ori	r12,r12,16
 4000870:	6080080c 	andi	r2,r12,32
 4000874:	10006b26 	beq	r2,zero,4000a24 <___vfprintf_internal_r+0x698>
 4000878:	d8c00617 	ldw	r3,24(sp)
 400087c:	0005883a 	mov	r2,zero
 4000880:	1d000017 	ldw	r20,0(r3)
 4000884:	1d400117 	ldw	r21,4(r3)
 4000888:	18c00204 	addi	r3,r3,8
 400088c:	d8c00615 	stw	r3,24(sp)
 4000890:	d8001345 	stb	zero,77(sp)
 4000894:	40ffffe0 	cmpeqi	r3,r8,-1
 4000898:	001b883a 	mov	r13,zero
 400089c:	1801351e 	bne	r3,zero,4000d74 <___vfprintf_internal_r+0x9e8>
 40008a0:	047fdfc4 	movi	r17,-129
 40008a4:	6448703a 	and	r4,r12,r17
 40008a8:	a546b03a 	or	r3,r20,r21
 40008ac:	d9000415 	stw	r4,16(sp)
 40008b0:	1802e21e 	bne	r3,zero,400143c <___vfprintf_internal_r+0x10b0>
 40008b4:	40025d1e 	bne	r8,zero,400122c <___vfprintf_internal_r+0xea0>
 40008b8:	1003a41e 	bne	r2,zero,400174c <___vfprintf_internal_r+0x13c0>
 40008bc:	6540004c 	andi	r21,r12,1
 40008c0:	a803d226 	beq	r21,zero,400180c <___vfprintf_internal_r+0x1480>
 40008c4:	00800c04 	movi	r2,48
 40008c8:	d88026c5 	stb	r2,155(sp)
 40008cc:	dc4026c4 	addi	r17,sp,155
 40008d0:	00014606 	br	4000dec <___vfprintf_internal_r+0xa60>
 40008d4:	85e3c83a 	sub	r17,r16,r23
 40008d8:	85ffb726 	beq	r16,r23,40007b8 <___vfprintf_internal_r+0x42c>
 40008dc:	d8c01c17 	ldw	r3,112(sp)
 40008e0:	d8801b17 	ldw	r2,108(sp)
 40008e4:	b5c00015 	stw	r23,0(r22)
 40008e8:	1c47883a 	add	r3,r3,r17
 40008ec:	10800044 	addi	r2,r2,1
 40008f0:	d8801b15 	stw	r2,108(sp)
 40008f4:	b4400115 	stw	r17,4(r22)
 40008f8:	d8c01c15 	stw	r3,112(sp)
 40008fc:	10800208 	cmpgei	r2,r2,8
 4000900:	1000061e 	bne	r2,zero,400091c <___vfprintf_internal_r+0x590>
 4000904:	b5800204 	addi	r22,r22,8
 4000908:	d8c00517 	ldw	r3,20(sp)
 400090c:	80800003 	ldbu	r2,0(r16)
 4000910:	1c47883a 	add	r3,r3,r17
 4000914:	d8c00515 	stw	r3,20(sp)
 4000918:	003edc06 	br	400048c <___vfprintf_internal_r+0x100>
 400091c:	d9801a04 	addi	r6,sp,104
 4000920:	900b883a 	mov	r5,r18
 4000924:	9809883a 	mov	r4,r19
 4000928:	4006b940 	call	4006b94 <__sprint_r>
 400092c:	103fa41e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4000930:	dd802704 	addi	r22,sp,156
 4000934:	003ff406 	br	4000908 <___vfprintf_internal_r+0x57c>
 4000938:	21003fcc 	andi	r4,r4,255
 400093c:	2006681e 	bne	r4,zero,40022e0 <___vfprintf_internal_r+0x1f54>
 4000940:	d8c00617 	ldw	r3,24(sp)
 4000944:	6080020c 	andi	r2,r12,8
 4000948:	19000204 	addi	r4,r3,8
 400094c:	d9000e15 	stw	r4,56(sp)
 4000950:	1003ce1e 	bne	r2,zero,400188c <___vfprintf_internal_r+0x1500>
 4000954:	d8800617 	ldw	r2,24(sp)
 4000958:	10c00017 	ldw	r3,0(r2)
 400095c:	10800117 	ldw	r2,4(r2)
 4000960:	d8c00915 	stw	r3,36(sp)
 4000964:	d8800a15 	stw	r2,40(sp)
 4000968:	dd400a17 	ldw	r21,40(sp)
 400096c:	dd000917 	ldw	r20,36(sp)
 4000970:	00a00034 	movhi	r2,32768
 4000974:	10bfffc4 	addi	r2,r2,-1
 4000978:	a8a2703a 	and	r17,r21,r2
 400097c:	01dffc34 	movhi	r7,32752
 4000980:	01bfffc4 	movi	r6,-1
 4000984:	39ffffc4 	addi	r7,r7,-1
 4000988:	a009883a 	mov	r4,r20
 400098c:	880b883a 	mov	r5,r17
 4000990:	da000615 	stw	r8,24(sp)
 4000994:	db000415 	stw	r12,16(sp)
 4000998:	400c9580 	call	400c958 <__unorddf2>
 400099c:	db000417 	ldw	r12,16(sp)
 40009a0:	da000617 	ldw	r8,24(sp)
 40009a4:	10046e1e 	bne	r2,zero,4001b60 <___vfprintf_internal_r+0x17d4>
 40009a8:	01dffc34 	movhi	r7,32752
 40009ac:	01bfffc4 	movi	r6,-1
 40009b0:	39ffffc4 	addi	r7,r7,-1
 40009b4:	a009883a 	mov	r4,r20
 40009b8:	880b883a 	mov	r5,r17
 40009bc:	400b8c40 	call	400b8c4 <__ledf2>
 40009c0:	db000417 	ldw	r12,16(sp)
 40009c4:	da000617 	ldw	r8,24(sp)
 40009c8:	0084650e 	bge	zero,r2,4001b60 <___vfprintf_internal_r+0x17d4>
 40009cc:	000d883a 	mov	r6,zero
 40009d0:	000f883a 	mov	r7,zero
 40009d4:	a009883a 	mov	r4,r20
 40009d8:	a80b883a 	mov	r5,r21
 40009dc:	400b8c40 	call	400b8c4 <__ledf2>
 40009e0:	db000417 	ldw	r12,16(sp)
 40009e4:	10059b16 	blt	r2,zero,4002054 <___vfprintf_internal_r+0x1cc8>
 40009e8:	db401343 	ldbu	r13,77(sp)
 40009ec:	e0801210 	cmplti	r2,fp,72
 40009f0:	1005721e 	bne	r2,zero,4001fbc <___vfprintf_internal_r+0x1c30>
 40009f4:	04410074 	movhi	r17,1025
 40009f8:	8c7dc104 	addi	r17,r17,-2300
 40009fc:	00bfdfc4 	movi	r2,-129
 4000a00:	6084703a 	and	r2,r12,r2
 4000a04:	d8800415 	stw	r2,16(sp)
 4000a08:	d8800e17 	ldw	r2,56(sp)
 4000a0c:	050000c4 	movi	r20,3
 4000a10:	054000c4 	movi	r21,3
 4000a14:	d8800615 	stw	r2,24(sp)
 4000a18:	0011883a 	mov	r8,zero
 4000a1c:	d8000715 	stw	zero,28(sp)
 4000a20:	0000f606 	br	4000dfc <___vfprintf_internal_r+0xa70>
 4000a24:	d9000617 	ldw	r4,24(sp)
 4000a28:	6080040c 	andi	r2,r12,16
 4000a2c:	20c00104 	addi	r3,r4,4
 4000a30:	1003871e 	bne	r2,zero,4001850 <___vfprintf_internal_r+0x14c4>
 4000a34:	6080100c 	andi	r2,r12,64
 4000a38:	10056926 	beq	r2,zero,4001fe0 <___vfprintf_internal_r+0x1c54>
 4000a3c:	d8800617 	ldw	r2,24(sp)
 4000a40:	002b883a 	mov	r21,zero
 4000a44:	d8c00615 	stw	r3,24(sp)
 4000a48:	1500000b 	ldhu	r20,0(r2)
 4000a4c:	0005883a 	mov	r2,zero
 4000a50:	003f8f06 	br	4000890 <___vfprintf_internal_r+0x504>
 4000a54:	d9000617 	ldw	r4,24(sp)
 4000a58:	6080040c 	andi	r2,r12,16
 4000a5c:	20c00104 	addi	r3,r4,4
 4000a60:	1003801e 	bne	r2,zero,4001864 <___vfprintf_internal_r+0x14d8>
 4000a64:	6080100c 	andi	r2,r12,64
 4000a68:	10056326 	beq	r2,zero,4001ff8 <___vfprintf_internal_r+0x1c6c>
 4000a6c:	d8800617 	ldw	r2,24(sp)
 4000a70:	002b883a 	mov	r21,zero
 4000a74:	d8c00615 	stw	r3,24(sp)
 4000a78:	1500000b 	ldhu	r20,0(r2)
 4000a7c:	00800044 	movi	r2,1
 4000a80:	003f8306 	br	4000890 <___vfprintf_internal_r+0x504>
 4000a84:	03010074 	movhi	r12,1025
 4000a88:	89000450 	cmplti	r4,r17,17
 4000a8c:	d8801b17 	ldw	r2,108(sp)
 4000a90:	633dd504 	addi	r12,r12,-2220
 4000a94:	20001b1e 	bne	r4,zero,4000b04 <___vfprintf_internal_r+0x778>
 4000a98:	05400404 	movi	r21,16
 4000a9c:	6039883a 	mov	fp,r12
 4000aa0:	00000406 	br	4000ab4 <___vfprintf_internal_r+0x728>
 4000aa4:	8c7ffc04 	addi	r17,r17,-16
 4000aa8:	89000448 	cmpgei	r4,r17,17
 4000aac:	b5800204 	addi	r22,r22,8
 4000ab0:	20001326 	beq	r4,zero,4000b00 <___vfprintf_internal_r+0x774>
 4000ab4:	10800044 	addi	r2,r2,1
 4000ab8:	18c00404 	addi	r3,r3,16
 4000abc:	b7000015 	stw	fp,0(r22)
 4000ac0:	b5400115 	stw	r21,4(r22)
 4000ac4:	d8c01c15 	stw	r3,112(sp)
 4000ac8:	d8801b15 	stw	r2,108(sp)
 4000acc:	11000208 	cmpgei	r4,r2,8
 4000ad0:	203ff426 	beq	r4,zero,4000aa4 <___vfprintf_internal_r+0x718>
 4000ad4:	d9801a04 	addi	r6,sp,104
 4000ad8:	900b883a 	mov	r5,r18
 4000adc:	9809883a 	mov	r4,r19
 4000ae0:	4006b940 	call	4006b94 <__sprint_r>
 4000ae4:	103f361e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4000ae8:	8c7ffc04 	addi	r17,r17,-16
 4000aec:	89000448 	cmpgei	r4,r17,17
 4000af0:	d8c01c17 	ldw	r3,112(sp)
 4000af4:	d8801b17 	ldw	r2,108(sp)
 4000af8:	dd802704 	addi	r22,sp,156
 4000afc:	203fed1e 	bne	r4,zero,4000ab4 <___vfprintf_internal_r+0x728>
 4000b00:	e019883a 	mov	r12,fp
 4000b04:	10800044 	addi	r2,r2,1
 4000b08:	1c47883a 	add	r3,r3,r17
 4000b0c:	d8801b15 	stw	r2,108(sp)
 4000b10:	b3000015 	stw	r12,0(r22)
 4000b14:	b4400115 	stw	r17,4(r22)
 4000b18:	d8c01c15 	stw	r3,112(sp)
 4000b1c:	10800210 	cmplti	r2,r2,8
 4000b20:	103f1b1e 	bne	r2,zero,4000790 <___vfprintf_internal_r+0x404>
 4000b24:	d9801a04 	addi	r6,sp,104
 4000b28:	900b883a 	mov	r5,r18
 4000b2c:	9809883a 	mov	r4,r19
 4000b30:	4006b940 	call	4006b94 <__sprint_r>
 4000b34:	103f221e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4000b38:	d8c01c17 	ldw	r3,112(sp)
 4000b3c:	003f1406 	br	4000790 <___vfprintf_internal_r+0x404>
 4000b40:	9809883a 	mov	r4,r19
 4000b44:	40045980 	call	4004598 <__sinit>
 4000b48:	003e2806 	br	40003ec <___vfprintf_internal_r+0x60>
 4000b4c:	21003fcc 	andi	r4,r4,255
 4000b50:	2005d91e 	bne	r4,zero,40022b8 <___vfprintf_internal_r+0x1f2c>
 4000b54:	6080080c 	andi	r2,r12,32
 4000b58:	10007026 	beq	r2,zero,4000d1c <___vfprintf_internal_r+0x990>
 4000b5c:	d8c00617 	ldw	r3,24(sp)
 4000b60:	18800117 	ldw	r2,4(r3)
 4000b64:	1d000017 	ldw	r20,0(r3)
 4000b68:	18c00204 	addi	r3,r3,8
 4000b6c:	d8c00615 	stw	r3,24(sp)
 4000b70:	102b883a 	mov	r21,r2
 4000b74:	10007516 	blt	r2,zero,4000d4c <___vfprintf_internal_r+0x9c0>
 4000b78:	40bfffd8 	cmpnei	r2,r8,-1
 4000b7c:	10034826 	beq	r2,zero,40018a0 <___vfprintf_internal_r+0x1514>
 4000b80:	047fdfc4 	movi	r17,-129
 4000b84:	6446703a 	and	r3,r12,r17
 4000b88:	a544b03a 	or	r2,r20,r21
 4000b8c:	d8c00415 	stw	r3,16(sp)
 4000b90:	db401343 	ldbu	r13,77(sp)
 4000b94:	1002ec26 	beq	r2,zero,4001748 <___vfprintf_internal_r+0x13bc>
 4000b98:	db000417 	ldw	r12,16(sp)
 4000b9c:	a803421e 	bne	r21,zero,40018a8 <___vfprintf_internal_r+0x151c>
 4000ba0:	a08002a8 	cmpgeui	r2,r20,10
 4000ba4:	1003401e 	bne	r2,zero,40018a8 <___vfprintf_internal_r+0x151c>
 4000ba8:	a5000c04 	addi	r20,r20,48
 4000bac:	dd0026c5 	stb	r20,155(sp)
 4000bb0:	db000415 	stw	r12,16(sp)
 4000bb4:	05400044 	movi	r21,1
 4000bb8:	dc4026c4 	addi	r17,sp,155
 4000bbc:	00008b06 	br	4000dec <___vfprintf_internal_r+0xa60>
 4000bc0:	bac00007 	ldb	r11,0(r23)
 4000bc4:	63001014 	ori	r12,r12,64
 4000bc8:	003e3c06 	br	40004bc <___vfprintf_internal_r+0x130>
 4000bcc:	21003fcc 	andi	r4,r4,255
 4000bd0:	2005bf1e 	bne	r4,zero,40022d0 <___vfprintf_internal_r+0x1f44>
 4000bd4:	00810074 	movhi	r2,1025
 4000bd8:	10bdc904 	addi	r2,r2,-2268
 4000bdc:	d8800c15 	stw	r2,48(sp)
 4000be0:	6080080c 	andi	r2,r12,32
 4000be4:	1000d526 	beq	r2,zero,4000f3c <___vfprintf_internal_r+0xbb0>
 4000be8:	d8800617 	ldw	r2,24(sp)
 4000bec:	15000017 	ldw	r20,0(r2)
 4000bf0:	15400117 	ldw	r21,4(r2)
 4000bf4:	10800204 	addi	r2,r2,8
 4000bf8:	d8800615 	stw	r2,24(sp)
 4000bfc:	6080004c 	andi	r2,r12,1
 4000c00:	10000226 	beq	r2,zero,4000c0c <___vfprintf_internal_r+0x880>
 4000c04:	a544b03a 	or	r2,r20,r21
 4000c08:	1003071e 	bne	r2,zero,4001828 <___vfprintf_internal_r+0x149c>
 4000c0c:	00800084 	movi	r2,2
 4000c10:	003f1f06 	br	4000890 <___vfprintf_internal_r+0x504>
 4000c14:	d8800617 	ldw	r2,24(sp)
 4000c18:	d8001345 	stb	zero,77(sp)
 4000c1c:	14400017 	ldw	r17,0(r2)
 4000c20:	10c00104 	addi	r3,r2,4
 4000c24:	88037526 	beq	r17,zero,40019fc <___vfprintf_internal_r+0x1670>
 4000c28:	40bfffe0 	cmpeqi	r2,r8,-1
 4000c2c:	1004641e 	bne	r2,zero,4001dc0 <___vfprintf_internal_r+0x1a34>
 4000c30:	400d883a 	mov	r6,r8
 4000c34:	000b883a 	mov	r5,zero
 4000c38:	8809883a 	mov	r4,r17
 4000c3c:	d8c00715 	stw	r3,28(sp)
 4000c40:	db000615 	stw	r12,24(sp)
 4000c44:	da000415 	stw	r8,16(sp)
 4000c48:	40055100 	call	4005510 <memchr>
 4000c4c:	da000417 	ldw	r8,16(sp)
 4000c50:	db000617 	ldw	r12,24(sp)
 4000c54:	d8c00717 	ldw	r3,28(sp)
 4000c58:	10058726 	beq	r2,zero,4002278 <___vfprintf_internal_r+0x1eec>
 4000c5c:	146bc83a 	sub	r21,r2,r17
 4000c60:	a829883a 	mov	r20,r21
 4000c64:	d8c00615 	stw	r3,24(sp)
 4000c68:	003e8b06 	br	4000698 <___vfprintf_internal_r+0x30c>
 4000c6c:	bac00007 	ldb	r11,0(r23)
 4000c70:	63000814 	ori	r12,r12,32
 4000c74:	003e1106 	br	40004bc <___vfprintf_internal_r+0x130>
 4000c78:	d8c00617 	ldw	r3,24(sp)
 4000c7c:	00800c04 	movi	r2,48
 4000c80:	d8801385 	stb	r2,78(sp)
 4000c84:	00801e04 	movi	r2,120
 4000c88:	01010074 	movhi	r4,1025
 4000c8c:	d88013c5 	stb	r2,79(sp)
 4000c90:	18800104 	addi	r2,r3,4
 4000c94:	d8800615 	stw	r2,24(sp)
 4000c98:	20bdc904 	addi	r2,r4,-2268
 4000c9c:	d8800c15 	stw	r2,48(sp)
 4000ca0:	1d000017 	ldw	r20,0(r3)
 4000ca4:	002b883a 	mov	r21,zero
 4000ca8:	63000094 	ori	r12,r12,2
 4000cac:	00800084 	movi	r2,2
 4000cb0:	07001e04 	movi	fp,120
 4000cb4:	003ef606 	br	4000890 <___vfprintf_internal_r+0x504>
 4000cb8:	21003fcc 	andi	r4,r4,255
 4000cbc:	2005861e 	bne	r4,zero,40022d8 <___vfprintf_internal_r+0x1f4c>
 4000cc0:	d9000617 	ldw	r4,24(sp)
 4000cc4:	6080080c 	andi	r2,r12,32
 4000cc8:	20c00017 	ldw	r3,0(r4)
 4000ccc:	21000104 	addi	r4,r4,4
 4000cd0:	d9000615 	stw	r4,24(sp)
 4000cd4:	1002cf1e 	bne	r2,zero,4001814 <___vfprintf_internal_r+0x1488>
 4000cd8:	6080040c 	andi	r2,r12,16
 4000cdc:	10036d1e 	bne	r2,zero,4001a94 <___vfprintf_internal_r+0x1708>
 4000ce0:	6300100c 	andi	r12,r12,64
 4000ce4:	60036b26 	beq	r12,zero,4001a94 <___vfprintf_internal_r+0x1708>
 4000ce8:	d8800517 	ldw	r2,20(sp)
 4000cec:	1880000d 	sth	r2,0(r3)
 4000cf0:	003dda06 	br	400045c <___vfprintf_internal_r+0xd0>
 4000cf4:	bac00007 	ldb	r11,0(r23)
 4000cf8:	58801b18 	cmpnei	r2,r11,108
 4000cfc:	10032e26 	beq	r2,zero,40019b8 <___vfprintf_internal_r+0x162c>
 4000d00:	63000414 	ori	r12,r12,16
 4000d04:	003ded06 	br	40004bc <___vfprintf_internal_r+0x130>
 4000d08:	21003fcc 	andi	r4,r4,255
 4000d0c:	20056e1e 	bne	r4,zero,40022c8 <___vfprintf_internal_r+0x1f3c>
 4000d10:	63000414 	ori	r12,r12,16
 4000d14:	6080080c 	andi	r2,r12,32
 4000d18:	103f901e 	bne	r2,zero,4000b5c <___vfprintf_internal_r+0x7d0>
 4000d1c:	d9000617 	ldw	r4,24(sp)
 4000d20:	6080040c 	andi	r2,r12,16
 4000d24:	20c00104 	addi	r3,r4,4
 4000d28:	1002d31e 	bne	r2,zero,4001878 <___vfprintf_internal_r+0x14ec>
 4000d2c:	6080100c 	andi	r2,r12,64
 4000d30:	1004a526 	beq	r2,zero,4001fc8 <___vfprintf_internal_r+0x1c3c>
 4000d34:	d8800617 	ldw	r2,24(sp)
 4000d38:	d8c00615 	stw	r3,24(sp)
 4000d3c:	1500000f 	ldh	r20,0(r2)
 4000d40:	a02bd7fa 	srai	r21,r20,31
 4000d44:	a805883a 	mov	r2,r21
 4000d48:	103f8b0e 	bge	r2,zero,4000b78 <___vfprintf_internal_r+0x7ec>
 4000d4c:	a004c03a 	cmpne	r2,r20,zero
 4000d50:	056bc83a 	sub	r21,zero,r21
 4000d54:	a8abc83a 	sub	r21,r21,r2
 4000d58:	00800b44 	movi	r2,45
 4000d5c:	d8801345 	stb	r2,77(sp)
 4000d60:	40ffffe0 	cmpeqi	r3,r8,-1
 4000d64:	0529c83a 	sub	r20,zero,r20
 4000d68:	03400b44 	movi	r13,45
 4000d6c:	00800044 	movi	r2,1
 4000d70:	183ecb26 	beq	r3,zero,40008a0 <___vfprintf_internal_r+0x514>
 4000d74:	10c00060 	cmpeqi	r3,r2,1
 4000d78:	183f881e 	bne	r3,zero,4000b9c <___vfprintf_internal_r+0x810>
 4000d7c:	108000a0 	cmpeqi	r2,r2,2
 4000d80:	10012f1e 	bne	r2,zero,4001240 <___vfprintf_internal_r+0xeb4>
 4000d84:	dc402704 	addi	r17,sp,156
 4000d88:	a004d0fa 	srli	r2,r20,3
 4000d8c:	a806977a 	slli	r3,r21,29
 4000d90:	a82ad0fa 	srli	r21,r21,3
 4000d94:	a50001cc 	andi	r20,r20,7
 4000d98:	a1000c04 	addi	r4,r20,48
 4000d9c:	18a8b03a 	or	r20,r3,r2
 4000da0:	893fffc5 	stb	r4,-1(r17)
 4000da4:	a544b03a 	or	r2,r20,r21
 4000da8:	880b883a 	mov	r5,r17
 4000dac:	8c7fffc4 	addi	r17,r17,-1
 4000db0:	103ff51e 	bne	r2,zero,4000d88 <___vfprintf_internal_r+0x9fc>
 4000db4:	6080004c 	andi	r2,r12,1
 4000db8:	10012e26 	beq	r2,zero,4001274 <___vfprintf_internal_r+0xee8>
 4000dbc:	21003fcc 	andi	r4,r4,255
 4000dc0:	2100201c 	xori	r4,r4,128
 4000dc4:	213fe004 	addi	r4,r4,-128
 4000dc8:	20800c18 	cmpnei	r2,r4,48
 4000dcc:	10012926 	beq	r2,zero,4001274 <___vfprintf_internal_r+0xee8>
 4000dd0:	00800c04 	movi	r2,48
 4000dd4:	297fff84 	addi	r5,r5,-2
 4000dd8:	88bfffc5 	stb	r2,-1(r17)
 4000ddc:	d8802704 	addi	r2,sp,156
 4000de0:	116bc83a 	sub	r21,r2,r5
 4000de4:	db000415 	stw	r12,16(sp)
 4000de8:	2823883a 	mov	r17,r5
 4000dec:	4029883a 	mov	r20,r8
 4000df0:	4540010e 	bge	r8,r21,4000df8 <___vfprintf_internal_r+0xa6c>
 4000df4:	a829883a 	mov	r20,r21
 4000df8:	d8000715 	stw	zero,28(sp)
 4000dfc:	6b403fcc 	andi	r13,r13,255
 4000e00:	6b40201c 	xori	r13,r13,128
 4000e04:	6b7fe004 	addi	r13,r13,-128
 4000e08:	683e2626 	beq	r13,zero,40006a4 <___vfprintf_internal_r+0x318>
 4000e0c:	a5000044 	addi	r20,r20,1
 4000e10:	003e2406 	br	40006a4 <___vfprintf_internal_r+0x318>
 4000e14:	bac00007 	ldb	r11,0(r23)
 4000e18:	63002014 	ori	r12,r12,128
 4000e1c:	003da706 	br	40004bc <___vfprintf_internal_r+0x130>
 4000e20:	bf000007 	ldb	fp,0(r23)
 4000e24:	b8c00044 	addi	r3,r23,1
 4000e28:	e0800aa0 	cmpeqi	r2,fp,42
 4000e2c:	1005821e 	bne	r2,zero,4002438 <___vfprintf_internal_r+0x20ac>
 4000e30:	e0bff404 	addi	r2,fp,-48
 4000e34:	118002b0 	cmpltui	r6,r2,10
 4000e38:	182f883a 	mov	r23,r3
 4000e3c:	0011883a 	mov	r8,zero
 4000e40:	303da026 	beq	r6,zero,40004c4 <___vfprintf_internal_r+0x138>
 4000e44:	bf000007 	ldb	fp,0(r23)
 4000e48:	420002a4 	muli	r8,r8,10
 4000e4c:	bdc00044 	addi	r23,r23,1
 4000e50:	4091883a 	add	r8,r8,r2
 4000e54:	e0bff404 	addi	r2,fp,-48
 4000e58:	10c002b0 	cmpltui	r3,r2,10
 4000e5c:	183ff91e 	bne	r3,zero,4000e44 <___vfprintf_internal_r+0xab8>
 4000e60:	003d9806 	br	40004c4 <___vfprintf_internal_r+0x138>
 4000e64:	bf000003 	ldbu	fp,0(r23)
 4000e68:	e2c03fcc 	andi	r11,fp,255
 4000e6c:	5ac0201c 	xori	r11,r11,128
 4000e70:	63000114 	ori	r12,r12,4
 4000e74:	5affe004 	addi	r11,r11,-128
 4000e78:	003d9006 	br	40004bc <___vfprintf_internal_r+0x130>
 4000e7c:	bac00007 	ldb	r11,0(r23)
 4000e80:	01000044 	movi	r4,1
 4000e84:	01400ac4 	movi	r5,43
 4000e88:	003d8c06 	br	40004bc <___vfprintf_internal_r+0x130>
 4000e8c:	d8800617 	ldw	r2,24(sp)
 4000e90:	bf000003 	ldbu	fp,0(r23)
 4000e94:	14000017 	ldw	r16,0(r2)
 4000e98:	10800104 	addi	r2,r2,4
 4000e9c:	8002aa16 	blt	r16,zero,4001948 <___vfprintf_internal_r+0x15bc>
 4000ea0:	d8800615 	stw	r2,24(sp)
 4000ea4:	e2c03fcc 	andi	r11,fp,255
 4000ea8:	5ac0201c 	xori	r11,r11,128
 4000eac:	5affe004 	addi	r11,r11,-128
 4000eb0:	003d8206 	br	40004bc <___vfprintf_internal_r+0x130>
 4000eb4:	bac00007 	ldb	r11,0(r23)
 4000eb8:	63000054 	ori	r12,r12,1
 4000ebc:	003d7f06 	br	40004bc <___vfprintf_internal_r+0x130>
 4000ec0:	28803fcc 	andi	r2,r5,255
 4000ec4:	1080201c 	xori	r2,r2,128
 4000ec8:	10bfe004 	addi	r2,r2,-128
 4000ecc:	bf000003 	ldbu	fp,0(r23)
 4000ed0:	103ff41e 	bne	r2,zero,4000ea4 <___vfprintf_internal_r+0xb18>
 4000ed4:	e2c03fcc 	andi	r11,fp,255
 4000ed8:	5ac0201c 	xori	r11,r11,128
 4000edc:	01000044 	movi	r4,1
 4000ee0:	01400804 	movi	r5,32
 4000ee4:	5affe004 	addi	r11,r11,-128
 4000ee8:	003d7406 	br	40004bc <___vfprintf_internal_r+0x130>
 4000eec:	bac00007 	ldb	r11,0(r23)
 4000ef0:	63000214 	ori	r12,r12,8
 4000ef4:	003d7106 	br	40004bc <___vfprintf_internal_r+0x130>
 4000ef8:	d8c00617 	ldw	r3,24(sp)
 4000efc:	d8001345 	stb	zero,77(sp)
 4000f00:	05000044 	movi	r20,1
 4000f04:	18800017 	ldw	r2,0(r3)
 4000f08:	18c00104 	addi	r3,r3,4
 4000f0c:	d8c00615 	stw	r3,24(sp)
 4000f10:	d8801d05 	stb	r2,116(sp)
 4000f14:	05400044 	movi	r21,1
 4000f18:	dc401d04 	addi	r17,sp,116
 4000f1c:	003dde06 	br	4000698 <___vfprintf_internal_r+0x30c>
 4000f20:	21003fcc 	andi	r4,r4,255
 4000f24:	2004e61e 	bne	r4,zero,40022c0 <___vfprintf_internal_r+0x1f34>
 4000f28:	00810074 	movhi	r2,1025
 4000f2c:	10bdc404 	addi	r2,r2,-2288
 4000f30:	d8800c15 	stw	r2,48(sp)
 4000f34:	6080080c 	andi	r2,r12,32
 4000f38:	103f2b1e 	bne	r2,zero,4000be8 <___vfprintf_internal_r+0x85c>
 4000f3c:	d9000617 	ldw	r4,24(sp)
 4000f40:	6080040c 	andi	r2,r12,16
 4000f44:	20c00104 	addi	r3,r4,4
 4000f48:	10023d1e 	bne	r2,zero,4001840 <___vfprintf_internal_r+0x14b4>
 4000f4c:	6080100c 	andi	r2,r12,64
 4000f50:	10042f26 	beq	r2,zero,4002010 <___vfprintf_internal_r+0x1c84>
 4000f54:	d8800617 	ldw	r2,24(sp)
 4000f58:	002b883a 	mov	r21,zero
 4000f5c:	d8c00615 	stw	r3,24(sp)
 4000f60:	1500000b 	ldhu	r20,0(r2)
 4000f64:	003f2506 	br	4000bfc <___vfprintf_internal_r+0x870>
 4000f68:	e2c01990 	cmplti	r11,fp,102
 4000f6c:	5800f61e 	bne	r11,zero,4001348 <___vfprintf_internal_r+0xfbc>
 4000f70:	d9000917 	ldw	r4,36(sp)
 4000f74:	d9400a17 	ldw	r5,40(sp)
 4000f78:	000d883a 	mov	r6,zero
 4000f7c:	000f883a 	mov	r7,zero
 4000f80:	d8c00e15 	stw	r3,56(sp)
 4000f84:	400b7540 	call	400b754 <__eqdf2>
 4000f88:	d8c00e17 	ldw	r3,56(sp)
 4000f8c:	1001881e 	bne	r2,zero,40015b0 <___vfprintf_internal_r+0x1224>
 4000f90:	d8801b17 	ldw	r2,108(sp)
 4000f94:	01010074 	movhi	r4,1025
 4000f98:	213dd004 	addi	r4,r4,-2240
 4000f9c:	10800044 	addi	r2,r2,1
 4000fa0:	18c00044 	addi	r3,r3,1
 4000fa4:	b1000015 	stw	r4,0(r22)
 4000fa8:	01000044 	movi	r4,1
 4000fac:	d8801b15 	stw	r2,108(sp)
 4000fb0:	b1000115 	stw	r4,4(r22)
 4000fb4:	d8c01c15 	stw	r3,112(sp)
 4000fb8:	10800208 	cmpgei	r2,r2,8
 4000fbc:	10036e1e 	bne	r2,zero,4001d78 <___vfprintf_internal_r+0x19ec>
 4000fc0:	b5800204 	addi	r22,r22,8
 4000fc4:	d8801417 	ldw	r2,80(sp)
 4000fc8:	d9000817 	ldw	r4,32(sp)
 4000fcc:	11020b0e 	bge	r2,r4,40017fc <___vfprintf_internal_r+0x1470>
 4000fd0:	d8800d17 	ldw	r2,52(sp)
 4000fd4:	d9000b17 	ldw	r4,44(sp)
 4000fd8:	b0800015 	stw	r2,0(r22)
 4000fdc:	d8801b17 	ldw	r2,108(sp)
 4000fe0:	1907883a 	add	r3,r3,r4
 4000fe4:	b1000115 	stw	r4,4(r22)
 4000fe8:	10800044 	addi	r2,r2,1
 4000fec:	d8801b15 	stw	r2,108(sp)
 4000ff0:	d8c01c15 	stw	r3,112(sp)
 4000ff4:	10800208 	cmpgei	r2,r2,8
 4000ff8:	1002761e 	bne	r2,zero,40019d4 <___vfprintf_internal_r+0x1648>
 4000ffc:	b5800204 	addi	r22,r22,8
 4001000:	d8800817 	ldw	r2,32(sp)
 4001004:	157fffc4 	addi	r21,r2,-1
 4001008:	057ddc0e 	bge	zero,r21,400077c <___vfprintf_internal_r+0x3f0>
 400100c:	01c10074 	movhi	r7,1025
 4001010:	a9000450 	cmplti	r4,r21,17
 4001014:	d8801b17 	ldw	r2,108(sp)
 4001018:	39fdd104 	addi	r7,r7,-2236
 400101c:	2003521e 	bne	r4,zero,4001d68 <___vfprintf_internal_r+0x19dc>
 4001020:	07000404 	movi	fp,16
 4001024:	3823883a 	mov	r17,r7
 4001028:	00000406 	br	400103c <___vfprintf_internal_r+0xcb0>
 400102c:	b5800204 	addi	r22,r22,8
 4001030:	ad7ffc04 	addi	r21,r21,-16
 4001034:	a9000448 	cmpgei	r4,r21,17
 4001038:	20034a26 	beq	r4,zero,4001d64 <___vfprintf_internal_r+0x19d8>
 400103c:	10800044 	addi	r2,r2,1
 4001040:	18c00404 	addi	r3,r3,16
 4001044:	b4400015 	stw	r17,0(r22)
 4001048:	b7000115 	stw	fp,4(r22)
 400104c:	d8c01c15 	stw	r3,112(sp)
 4001050:	d8801b15 	stw	r2,108(sp)
 4001054:	11000208 	cmpgei	r4,r2,8
 4001058:	203ff426 	beq	r4,zero,400102c <___vfprintf_internal_r+0xca0>
 400105c:	d9801a04 	addi	r6,sp,104
 4001060:	900b883a 	mov	r5,r18
 4001064:	9809883a 	mov	r4,r19
 4001068:	4006b940 	call	4006b94 <__sprint_r>
 400106c:	103dd41e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001070:	d8c01c17 	ldw	r3,112(sp)
 4001074:	d8801b17 	ldw	r2,108(sp)
 4001078:	dd802704 	addi	r22,sp,156
 400107c:	003fec06 	br	4001030 <___vfprintf_internal_r+0xca4>
 4001080:	8519c83a 	sub	r12,r16,r20
 4001084:	033dae0e 	bge	zero,r12,4000740 <___vfprintf_internal_r+0x3b4>
 4001088:	01c10074 	movhi	r7,1025
 400108c:	61000450 	cmplti	r4,r12,17
 4001090:	d8801b17 	ldw	r2,108(sp)
 4001094:	39fdd104 	addi	r7,r7,-2236
 4001098:	2000281e 	bne	r4,zero,400113c <___vfprintf_internal_r+0xdb0>
 400109c:	dc400e15 	stw	r17,56(sp)
 40010a0:	dc000f15 	stw	r16,60(sp)
 40010a4:	b009883a 	mov	r4,r22
 40010a8:	03400404 	movi	r13,16
 40010ac:	a02d883a 	mov	r22,r20
 40010b0:	6021883a 	mov	r16,r12
 40010b4:	4029883a 	mov	r20,r8
 40010b8:	3823883a 	mov	r17,r7
 40010bc:	00000406 	br	40010d0 <___vfprintf_internal_r+0xd44>
 40010c0:	843ffc04 	addi	r16,r16,-16
 40010c4:	81400448 	cmpgei	r5,r16,17
 40010c8:	21000204 	addi	r4,r4,8
 40010cc:	28001426 	beq	r5,zero,4001120 <___vfprintf_internal_r+0xd94>
 40010d0:	10800044 	addi	r2,r2,1
 40010d4:	18c00404 	addi	r3,r3,16
 40010d8:	24400015 	stw	r17,0(r4)
 40010dc:	23400115 	stw	r13,4(r4)
 40010e0:	d8c01c15 	stw	r3,112(sp)
 40010e4:	d8801b15 	stw	r2,108(sp)
 40010e8:	11400208 	cmpgei	r5,r2,8
 40010ec:	283ff426 	beq	r5,zero,40010c0 <___vfprintf_internal_r+0xd34>
 40010f0:	d9801a04 	addi	r6,sp,104
 40010f4:	900b883a 	mov	r5,r18
 40010f8:	9809883a 	mov	r4,r19
 40010fc:	4006b940 	call	4006b94 <__sprint_r>
 4001100:	103daf1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001104:	843ffc04 	addi	r16,r16,-16
 4001108:	81400448 	cmpgei	r5,r16,17
 400110c:	d8c01c17 	ldw	r3,112(sp)
 4001110:	d8801b17 	ldw	r2,108(sp)
 4001114:	d9002704 	addi	r4,sp,156
 4001118:	03400404 	movi	r13,16
 400111c:	283fec1e 	bne	r5,zero,40010d0 <___vfprintf_internal_r+0xd44>
 4001120:	8019883a 	mov	r12,r16
 4001124:	880f883a 	mov	r7,r17
 4001128:	dc000f17 	ldw	r16,60(sp)
 400112c:	dc400e17 	ldw	r17,56(sp)
 4001130:	a011883a 	mov	r8,r20
 4001134:	b029883a 	mov	r20,r22
 4001138:	202d883a 	mov	r22,r4
 400113c:	10800044 	addi	r2,r2,1
 4001140:	1b07883a 	add	r3,r3,r12
 4001144:	d8801b15 	stw	r2,108(sp)
 4001148:	b1c00015 	stw	r7,0(r22)
 400114c:	b3000115 	stw	r12,4(r22)
 4001150:	d8c01c15 	stw	r3,112(sp)
 4001154:	10800208 	cmpgei	r2,r2,8
 4001158:	10030f1e 	bne	r2,zero,4001d98 <___vfprintf_internal_r+0x1a0c>
 400115c:	4551c83a 	sub	r8,r8,r21
 4001160:	b5800204 	addi	r22,r22,8
 4001164:	023d780e 	bge	zero,r8,4000748 <___vfprintf_internal_r+0x3bc>
 4001168:	01c10074 	movhi	r7,1025
 400116c:	41000450 	cmplti	r4,r8,17
 4001170:	d8801b17 	ldw	r2,108(sp)
 4001174:	39fdd104 	addi	r7,r7,-2236
 4001178:	2000221e 	bne	r4,zero,4001204 <___vfprintf_internal_r+0xe78>
 400117c:	dc400e15 	stw	r17,56(sp)
 4001180:	dc000f15 	stw	r16,60(sp)
 4001184:	03000404 	movi	r12,16
 4001188:	4021883a 	mov	r16,r8
 400118c:	3823883a 	mov	r17,r7
 4001190:	00000406 	br	40011a4 <___vfprintf_internal_r+0xe18>
 4001194:	843ffc04 	addi	r16,r16,-16
 4001198:	81000448 	cmpgei	r4,r16,17
 400119c:	b5800204 	addi	r22,r22,8
 40011a0:	20001426 	beq	r4,zero,40011f4 <___vfprintf_internal_r+0xe68>
 40011a4:	10800044 	addi	r2,r2,1
 40011a8:	18c00404 	addi	r3,r3,16
 40011ac:	b4400015 	stw	r17,0(r22)
 40011b0:	b3000115 	stw	r12,4(r22)
 40011b4:	d8c01c15 	stw	r3,112(sp)
 40011b8:	d8801b15 	stw	r2,108(sp)
 40011bc:	11000208 	cmpgei	r4,r2,8
 40011c0:	203ff426 	beq	r4,zero,4001194 <___vfprintf_internal_r+0xe08>
 40011c4:	d9801a04 	addi	r6,sp,104
 40011c8:	900b883a 	mov	r5,r18
 40011cc:	9809883a 	mov	r4,r19
 40011d0:	4006b940 	call	4006b94 <__sprint_r>
 40011d4:	103d7a1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 40011d8:	843ffc04 	addi	r16,r16,-16
 40011dc:	81000448 	cmpgei	r4,r16,17
 40011e0:	d8c01c17 	ldw	r3,112(sp)
 40011e4:	d8801b17 	ldw	r2,108(sp)
 40011e8:	dd802704 	addi	r22,sp,156
 40011ec:	03000404 	movi	r12,16
 40011f0:	203fec1e 	bne	r4,zero,40011a4 <___vfprintf_internal_r+0xe18>
 40011f4:	8011883a 	mov	r8,r16
 40011f8:	880f883a 	mov	r7,r17
 40011fc:	dc000f17 	ldw	r16,60(sp)
 4001200:	dc400e17 	ldw	r17,56(sp)
 4001204:	10800044 	addi	r2,r2,1
 4001208:	1a07883a 	add	r3,r3,r8
 400120c:	d8801b15 	stw	r2,108(sp)
 4001210:	b1c00015 	stw	r7,0(r22)
 4001214:	b2000115 	stw	r8,4(r22)
 4001218:	d8c01c15 	stw	r3,112(sp)
 400121c:	10800208 	cmpgei	r2,r2,8
 4001220:	10016e1e 	bne	r2,zero,40017dc <___vfprintf_internal_r+0x1450>
 4001224:	b5800204 	addi	r22,r22,8
 4001228:	003d4706 	br	4000748 <___vfprintf_internal_r+0x3bc>
 400122c:	10c00060 	cmpeqi	r3,r2,1
 4001230:	1803c81e 	bne	r3,zero,4002154 <___vfprintf_internal_r+0x1dc8>
 4001234:	108000a0 	cmpeqi	r2,r2,2
 4001238:	db000417 	ldw	r12,16(sp)
 400123c:	103ed126 	beq	r2,zero,4000d84 <___vfprintf_internal_r+0x9f8>
 4001240:	d9000c17 	ldw	r4,48(sp)
 4001244:	dc402704 	addi	r17,sp,156
 4001248:	a08003cc 	andi	r2,r20,15
 400124c:	a806973a 	slli	r3,r21,28
 4001250:	a028d13a 	srli	r20,r20,4
 4001254:	2085883a 	add	r2,r4,r2
 4001258:	10800003 	ldbu	r2,0(r2)
 400125c:	a82ad13a 	srli	r21,r21,4
 4001260:	1d28b03a 	or	r20,r3,r20
 4001264:	88bfffc5 	stb	r2,-1(r17)
 4001268:	a544b03a 	or	r2,r20,r21
 400126c:	8c7fffc4 	addi	r17,r17,-1
 4001270:	103ff51e 	bne	r2,zero,4001248 <___vfprintf_internal_r+0xebc>
 4001274:	d8802704 	addi	r2,sp,156
 4001278:	146bc83a 	sub	r21,r2,r17
 400127c:	db000415 	stw	r12,16(sp)
 4001280:	003eda06 	br	4000dec <___vfprintf_internal_r+0xa60>
 4001284:	d9801a04 	addi	r6,sp,104
 4001288:	900b883a 	mov	r5,r18
 400128c:	9809883a 	mov	r4,r19
 4001290:	4006b940 	call	4006b94 <__sprint_r>
 4001294:	103d4426 	beq	r2,zero,40007a8 <___vfprintf_internal_r+0x41c>
 4001298:	003d4906 	br	40007c0 <___vfprintf_internal_r+0x434>
 400129c:	d9801a04 	addi	r6,sp,104
 40012a0:	900b883a 	mov	r5,r18
 40012a4:	9809883a 	mov	r4,r19
 40012a8:	4006b940 	call	4006b94 <__sprint_r>
 40012ac:	103d441e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 40012b0:	d9401417 	ldw	r5,80(sp)
 40012b4:	d8c01c17 	ldw	r3,112(sp)
 40012b8:	dd802704 	addi	r22,sp,156
 40012bc:	2802c81e 	bne	r5,zero,4001de0 <___vfprintf_internal_r+0x1a54>
 40012c0:	d8800417 	ldw	r2,16(sp)
 40012c4:	d9000817 	ldw	r4,32(sp)
 40012c8:	1080004c 	andi	r2,r2,1
 40012cc:	1104b03a 	or	r2,r2,r4
 40012d0:	103d2a26 	beq	r2,zero,400077c <___vfprintf_internal_r+0x3f0>
 40012d4:	d8800d17 	ldw	r2,52(sp)
 40012d8:	d9000b17 	ldw	r4,44(sp)
 40012dc:	b0800015 	stw	r2,0(r22)
 40012e0:	d8801b17 	ldw	r2,108(sp)
 40012e4:	20c7883a 	add	r3,r4,r3
 40012e8:	b1000115 	stw	r4,4(r22)
 40012ec:	10800044 	addi	r2,r2,1
 40012f0:	d8c01c15 	stw	r3,112(sp)
 40012f4:	d8801b15 	stw	r2,108(sp)
 40012f8:	11000208 	cmpgei	r4,r2,8
 40012fc:	2003821e 	bne	r4,zero,4002108 <___vfprintf_internal_r+0x1d7c>
 4001300:	b5800204 	addi	r22,r22,8
 4001304:	d9000817 	ldw	r4,32(sp)
 4001308:	10800044 	addi	r2,r2,1
 400130c:	d8801b15 	stw	r2,108(sp)
 4001310:	20c7883a 	add	r3,r4,r3
 4001314:	b4400015 	stw	r17,0(r22)
 4001318:	b1000115 	stw	r4,4(r22)
 400131c:	d8c01c15 	stw	r3,112(sp)
 4001320:	10800208 	cmpgei	r2,r2,8
 4001324:	103d1426 	beq	r2,zero,4000778 <___vfprintf_internal_r+0x3ec>
 4001328:	d9801a04 	addi	r6,sp,104
 400132c:	900b883a 	mov	r5,r18
 4001330:	9809883a 	mov	r4,r19
 4001334:	4006b940 	call	4006b94 <__sprint_r>
 4001338:	103d211e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 400133c:	d8c01c17 	ldw	r3,112(sp)
 4001340:	dd802704 	addi	r22,sp,156
 4001344:	003d0d06 	br	400077c <___vfprintf_internal_r+0x3f0>
 4001348:	d8800817 	ldw	r2,32(sp)
 400134c:	da001b17 	ldw	r8,108(sp)
 4001350:	18c00044 	addi	r3,r3,1
 4001354:	10800088 	cmpgei	r2,r2,2
 4001358:	45400044 	addi	r21,r8,1
 400135c:	b7000204 	addi	fp,r22,8
 4001360:	1000ec26 	beq	r2,zero,4001714 <___vfprintf_internal_r+0x1388>
 4001364:	00800044 	movi	r2,1
 4001368:	b0800115 	stw	r2,4(r22)
 400136c:	b4400015 	stw	r17,0(r22)
 4001370:	d8c01c15 	stw	r3,112(sp)
 4001374:	dd401b15 	stw	r21,108(sp)
 4001378:	a8800210 	cmplti	r2,r21,8
 400137c:	1001d126 	beq	r2,zero,4001ac4 <___vfprintf_internal_r+0x1738>
 4001380:	d8800b17 	ldw	r2,44(sp)
 4001384:	d9000d17 	ldw	r4,52(sp)
 4001388:	ad400044 	addi	r21,r21,1
 400138c:	1887883a 	add	r3,r3,r2
 4001390:	e0800115 	stw	r2,4(fp)
 4001394:	e1000015 	stw	r4,0(fp)
 4001398:	d8c01c15 	stw	r3,112(sp)
 400139c:	dd401b15 	stw	r21,108(sp)
 40013a0:	a8800208 	cmpgei	r2,r21,8
 40013a4:	1001be1e 	bne	r2,zero,4001aa0 <___vfprintf_internal_r+0x1714>
 40013a8:	e7000204 	addi	fp,fp,8
 40013ac:	d9000917 	ldw	r4,36(sp)
 40013b0:	d9400a17 	ldw	r5,40(sp)
 40013b4:	aa000044 	addi	r8,r21,1
 40013b8:	000d883a 	mov	r6,zero
 40013bc:	000f883a 	mov	r7,zero
 40013c0:	d8c00e15 	stw	r3,56(sp)
 40013c4:	da000715 	stw	r8,28(sp)
 40013c8:	400b7540 	call	400b754 <__eqdf2>
 40013cc:	d8c00817 	ldw	r3,32(sp)
 40013d0:	da000717 	ldw	r8,28(sp)
 40013d4:	e5800204 	addi	r22,fp,8
 40013d8:	1affffc4 	addi	r11,r3,-1
 40013dc:	d8c00e17 	ldw	r3,56(sp)
 40013e0:	1000de26 	beq	r2,zero,400175c <___vfprintf_internal_r+0x13d0>
 40013e4:	8a400044 	addi	r9,r17,1
 40013e8:	1ac7883a 	add	r3,r3,r11
 40013ec:	da001b15 	stw	r8,108(sp)
 40013f0:	e2400015 	stw	r9,0(fp)
 40013f4:	e2c00115 	stw	r11,4(fp)
 40013f8:	d8c01c15 	stw	r3,112(sp)
 40013fc:	42000208 	cmpgei	r8,r8,8
 4001400:	4001621e 	bne	r8,zero,400198c <___vfprintf_internal_r+0x1600>
 4001404:	e0800404 	addi	r2,fp,16
 4001408:	aa000084 	addi	r8,r21,2
 400140c:	b039883a 	mov	fp,r22
 4001410:	102d883a 	mov	r22,r2
 4001414:	d9001017 	ldw	r4,64(sp)
 4001418:	d8801644 	addi	r2,sp,89
 400141c:	da001b15 	stw	r8,108(sp)
 4001420:	20c7883a 	add	r3,r4,r3
 4001424:	e0800015 	stw	r2,0(fp)
 4001428:	e1000115 	stw	r4,4(fp)
 400142c:	d8c01c15 	stw	r3,112(sp)
 4001430:	42000210 	cmplti	r8,r8,8
 4001434:	403cd11e 	bne	r8,zero,400077c <___vfprintf_internal_r+0x3f0>
 4001438:	003fbb06 	br	4001328 <___vfprintf_internal_r+0xf9c>
 400143c:	db000417 	ldw	r12,16(sp)
 4001440:	003e4c06 	br	4000d74 <___vfprintf_internal_r+0x9e8>
 4001444:	03010074 	movhi	r12,1025
 4001448:	39000450 	cmplti	r4,r7,17
 400144c:	d8801b17 	ldw	r2,108(sp)
 4001450:	633dd504 	addi	r12,r12,-2220
 4001454:	2000321e 	bne	r4,zero,4001520 <___vfprintf_internal_r+0x1194>
 4001458:	dc401115 	stw	r17,68(sp)
 400145c:	b009883a 	mov	r4,r22
 4001460:	9023883a 	mov	r17,r18
 4001464:	a82d883a 	mov	r22,r21
 4001468:	ddc01215 	stw	r23,72(sp)
 400146c:	03c00404 	movi	r15,16
 4001470:	a02f883a 	mov	r23,r20
 4001474:	db800e15 	stw	r14,56(sp)
 4001478:	8029883a 	mov	r20,r16
 400147c:	db400f15 	stw	r13,60(sp)
 4001480:	402b883a 	mov	r21,r8
 4001484:	3821883a 	mov	r16,r7
 4001488:	6025883a 	mov	r18,r12
 400148c:	00000406 	br	40014a0 <___vfprintf_internal_r+0x1114>
 4001490:	843ffc04 	addi	r16,r16,-16
 4001494:	81800448 	cmpgei	r6,r16,17
 4001498:	21000204 	addi	r4,r4,8
 400149c:	30001426 	beq	r6,zero,40014f0 <___vfprintf_internal_r+0x1164>
 40014a0:	10800044 	addi	r2,r2,1
 40014a4:	18c00404 	addi	r3,r3,16
 40014a8:	24800015 	stw	r18,0(r4)
 40014ac:	23c00115 	stw	r15,4(r4)
 40014b0:	d8c01c15 	stw	r3,112(sp)
 40014b4:	d8801b15 	stw	r2,108(sp)
 40014b8:	11800208 	cmpgei	r6,r2,8
 40014bc:	303ff426 	beq	r6,zero,4001490 <___vfprintf_internal_r+0x1104>
 40014c0:	d9801a04 	addi	r6,sp,104
 40014c4:	880b883a 	mov	r5,r17
 40014c8:	9809883a 	mov	r4,r19
 40014cc:	4006b940 	call	4006b94 <__sprint_r>
 40014d0:	1001a11e 	bne	r2,zero,4001b58 <___vfprintf_internal_r+0x17cc>
 40014d4:	843ffc04 	addi	r16,r16,-16
 40014d8:	81800448 	cmpgei	r6,r16,17
 40014dc:	d8c01c17 	ldw	r3,112(sp)
 40014e0:	d8801b17 	ldw	r2,108(sp)
 40014e4:	d9002704 	addi	r4,sp,156
 40014e8:	03c00404 	movi	r15,16
 40014ec:	303fec1e 	bne	r6,zero,40014a0 <___vfprintf_internal_r+0x1114>
 40014f0:	800f883a 	mov	r7,r16
 40014f4:	9019883a 	mov	r12,r18
 40014f8:	a021883a 	mov	r16,r20
 40014fc:	8825883a 	mov	r18,r17
 4001500:	b829883a 	mov	r20,r23
 4001504:	db800e17 	ldw	r14,56(sp)
 4001508:	db400f17 	ldw	r13,60(sp)
 400150c:	ddc01217 	ldw	r23,72(sp)
 4001510:	dc401117 	ldw	r17,68(sp)
 4001514:	a811883a 	mov	r8,r21
 4001518:	b02b883a 	mov	r21,r22
 400151c:	202d883a 	mov	r22,r4
 4001520:	10800044 	addi	r2,r2,1
 4001524:	19c7883a 	add	r3,r3,r7
 4001528:	d8801b15 	stw	r2,108(sp)
 400152c:	b3000015 	stw	r12,0(r22)
 4001530:	b1c00115 	stw	r7,4(r22)
 4001534:	d8c01c15 	stw	r3,112(sp)
 4001538:	10800208 	cmpgei	r2,r2,8
 400153c:	1001781e 	bne	r2,zero,4001b20 <___vfprintf_internal_r+0x1794>
 4001540:	b5800204 	addi	r22,r22,8
 4001544:	003c6106 	br	40006cc <___vfprintf_internal_r+0x340>
 4001548:	d9801a04 	addi	r6,sp,104
 400154c:	900b883a 	mov	r5,r18
 4001550:	9809883a 	mov	r4,r19
 4001554:	da000f15 	stw	r8,60(sp)
 4001558:	db400e15 	stw	r13,56(sp)
 400155c:	4006b940 	call	4006b94 <__sprint_r>
 4001560:	103c971e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001564:	d8c01c17 	ldw	r3,112(sp)
 4001568:	da000f17 	ldw	r8,60(sp)
 400156c:	db400e17 	ldw	r13,56(sp)
 4001570:	dd802704 	addi	r22,sp,156
 4001574:	003c7006 	br	4000738 <___vfprintf_internal_r+0x3ac>
 4001578:	d9801a04 	addi	r6,sp,104
 400157c:	900b883a 	mov	r5,r18
 4001580:	9809883a 	mov	r4,r19
 4001584:	da001115 	stw	r8,68(sp)
 4001588:	db400f15 	stw	r13,60(sp)
 400158c:	db800e15 	stw	r14,56(sp)
 4001590:	4006b940 	call	4006b94 <__sprint_r>
 4001594:	103c8a1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001598:	d8c01c17 	ldw	r3,112(sp)
 400159c:	da001117 	ldw	r8,68(sp)
 40015a0:	db400f17 	ldw	r13,60(sp)
 40015a4:	db800e17 	ldw	r14,56(sp)
 40015a8:	dd802704 	addi	r22,sp,156
 40015ac:	003c5506 	br	4000704 <___vfprintf_internal_r+0x378>
 40015b0:	d9401417 	ldw	r5,80(sp)
 40015b4:	01414c0e 	bge	zero,r5,4001ae8 <___vfprintf_internal_r+0x175c>
 40015b8:	d8800717 	ldw	r2,28(sp)
 40015bc:	d9000817 	ldw	r4,32(sp)
 40015c0:	102b883a 	mov	r21,r2
 40015c4:	2080e316 	blt	r4,r2,4001954 <___vfprintf_internal_r+0x15c8>
 40015c8:	05400a0e 	bge	zero,r21,40015f4 <___vfprintf_internal_r+0x1268>
 40015cc:	d8801b17 	ldw	r2,108(sp)
 40015d0:	1d47883a 	add	r3,r3,r21
 40015d4:	b4400015 	stw	r17,0(r22)
 40015d8:	10800044 	addi	r2,r2,1
 40015dc:	d8801b15 	stw	r2,108(sp)
 40015e0:	b5400115 	stw	r21,4(r22)
 40015e4:	d8c01c15 	stw	r3,112(sp)
 40015e8:	10800208 	cmpgei	r2,r2,8
 40015ec:	10030c1e 	bne	r2,zero,4002220 <___vfprintf_internal_r+0x1e94>
 40015f0:	b5800204 	addi	r22,r22,8
 40015f4:	a800ff16 	blt	r21,zero,40019f4 <___vfprintf_internal_r+0x1668>
 40015f8:	d8800717 	ldw	r2,28(sp)
 40015fc:	156bc83a 	sub	r21,r2,r21
 4001600:	05410616 	blt	zero,r21,4001a1c <___vfprintf_internal_r+0x1690>
 4001604:	dd401417 	ldw	r21,80(sp)
 4001608:	d8800817 	ldw	r2,32(sp)
 400160c:	a880d40e 	bge	r21,r2,4001960 <___vfprintf_internal_r+0x15d4>
 4001610:	d8800d17 	ldw	r2,52(sp)
 4001614:	d9000b17 	ldw	r4,44(sp)
 4001618:	b0800015 	stw	r2,0(r22)
 400161c:	d8801b17 	ldw	r2,108(sp)
 4001620:	1907883a 	add	r3,r3,r4
 4001624:	b1000115 	stw	r4,4(r22)
 4001628:	10800044 	addi	r2,r2,1
 400162c:	d8801b15 	stw	r2,108(sp)
 4001630:	d8c01c15 	stw	r3,112(sp)
 4001634:	10800208 	cmpgei	r2,r2,8
 4001638:	10028e1e 	bne	r2,zero,4002074 <___vfprintf_internal_r+0x1ce8>
 400163c:	b5800204 	addi	r22,r22,8
 4001640:	d9000817 	ldw	r4,32(sp)
 4001644:	d9400717 	ldw	r5,28(sp)
 4001648:	2545c83a 	sub	r2,r4,r21
 400164c:	2149c83a 	sub	r4,r4,r5
 4001650:	102b883a 	mov	r21,r2
 4001654:	2080010e 	bge	r4,r2,400165c <___vfprintf_internal_r+0x12d0>
 4001658:	202b883a 	mov	r21,r4
 400165c:	05400c0e 	bge	zero,r21,4001690 <___vfprintf_internal_r+0x1304>
 4001660:	d9000717 	ldw	r4,28(sp)
 4001664:	1d47883a 	add	r3,r3,r21
 4001668:	b5400115 	stw	r21,4(r22)
 400166c:	8913883a 	add	r9,r17,r4
 4001670:	d9001b17 	ldw	r4,108(sp)
 4001674:	b2400015 	stw	r9,0(r22)
 4001678:	d8c01c15 	stw	r3,112(sp)
 400167c:	21000044 	addi	r4,r4,1
 4001680:	d9001b15 	stw	r4,108(sp)
 4001684:	21000208 	cmpgei	r4,r4,8
 4001688:	2002f01e 	bne	r4,zero,400224c <___vfprintf_internal_r+0x1ec0>
 400168c:	b5800204 	addi	r22,r22,8
 4001690:	a800010e 	bge	r21,zero,4001698 <___vfprintf_internal_r+0x130c>
 4001694:	002b883a 	mov	r21,zero
 4001698:	156bc83a 	sub	r21,r2,r21
 400169c:	057c370e 	bge	zero,r21,400077c <___vfprintf_internal_r+0x3f0>
 40016a0:	01c10074 	movhi	r7,1025
 40016a4:	a9000450 	cmplti	r4,r21,17
 40016a8:	d8801b17 	ldw	r2,108(sp)
 40016ac:	39fdd104 	addi	r7,r7,-2236
 40016b0:	2001ad1e 	bne	r4,zero,4001d68 <___vfprintf_internal_r+0x19dc>
 40016b4:	07000404 	movi	fp,16
 40016b8:	3823883a 	mov	r17,r7
 40016bc:	00000406 	br	40016d0 <___vfprintf_internal_r+0x1344>
 40016c0:	b5800204 	addi	r22,r22,8
 40016c4:	ad7ffc04 	addi	r21,r21,-16
 40016c8:	a9000448 	cmpgei	r4,r21,17
 40016cc:	2001a526 	beq	r4,zero,4001d64 <___vfprintf_internal_r+0x19d8>
 40016d0:	10800044 	addi	r2,r2,1
 40016d4:	18c00404 	addi	r3,r3,16
 40016d8:	b4400015 	stw	r17,0(r22)
 40016dc:	b7000115 	stw	fp,4(r22)
 40016e0:	d8c01c15 	stw	r3,112(sp)
 40016e4:	d8801b15 	stw	r2,108(sp)
 40016e8:	11000208 	cmpgei	r4,r2,8
 40016ec:	203ff426 	beq	r4,zero,40016c0 <___vfprintf_internal_r+0x1334>
 40016f0:	d9801a04 	addi	r6,sp,104
 40016f4:	900b883a 	mov	r5,r18
 40016f8:	9809883a 	mov	r4,r19
 40016fc:	4006b940 	call	4006b94 <__sprint_r>
 4001700:	103c2f1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001704:	d8c01c17 	ldw	r3,112(sp)
 4001708:	d8801b17 	ldw	r2,108(sp)
 400170c:	dd802704 	addi	r22,sp,156
 4001710:	003fec06 	br	40016c4 <___vfprintf_internal_r+0x1338>
 4001714:	d8800417 	ldw	r2,16(sp)
 4001718:	1080004c 	andi	r2,r2,1
 400171c:	103f111e 	bne	r2,zero,4001364 <___vfprintf_internal_r+0xfd8>
 4001720:	00800044 	movi	r2,1
 4001724:	dd401b15 	stw	r21,108(sp)
 4001728:	b4400015 	stw	r17,0(r22)
 400172c:	b0800115 	stw	r2,4(r22)
 4001730:	d8c01c15 	stw	r3,112(sp)
 4001734:	ad400208 	cmpgei	r21,r21,8
 4001738:	a800941e 	bne	r21,zero,400198c <___vfprintf_internal_r+0x1600>
 400173c:	42000084 	addi	r8,r8,2
 4001740:	b5800404 	addi	r22,r22,16
 4001744:	003f3306 	br	4001414 <___vfprintf_internal_r+0x1088>
 4001748:	4002821e 	bne	r8,zero,4002154 <___vfprintf_internal_r+0x1dc8>
 400174c:	0011883a 	mov	r8,zero
 4001750:	002b883a 	mov	r21,zero
 4001754:	dc402704 	addi	r17,sp,156
 4001758:	003da406 	br	4000dec <___vfprintf_internal_r+0xa60>
 400175c:	02ff2d0e 	bge	zero,r11,4001414 <___vfprintf_internal_r+0x1088>
 4001760:	58800450 	cmplti	r2,r11,17
 4001764:	01c10074 	movhi	r7,1025
 4001768:	1003261e 	bne	r2,zero,4002404 <___vfprintf_internal_r+0x2078>
 400176c:	39fdd104 	addi	r7,r7,-2236
 4001770:	dc000715 	stw	r16,28(sp)
 4001774:	05800404 	movi	r22,16
 4001778:	5823883a 	mov	r17,r11
 400177c:	3821883a 	mov	r16,r7
 4001780:	402b883a 	mov	r21,r8
 4001784:	00000506 	br	400179c <___vfprintf_internal_r+0x1410>
 4001788:	e7000204 	addi	fp,fp,8
 400178c:	8c7ffc04 	addi	r17,r17,-16
 4001790:	88800448 	cmpgei	r2,r17,17
 4001794:	1001be26 	beq	r2,zero,4001e90 <___vfprintf_internal_r+0x1b04>
 4001798:	ad400044 	addi	r21,r21,1
 400179c:	18c00404 	addi	r3,r3,16
 40017a0:	e4000015 	stw	r16,0(fp)
 40017a4:	e5800115 	stw	r22,4(fp)
 40017a8:	d8c01c15 	stw	r3,112(sp)
 40017ac:	dd401b15 	stw	r21,108(sp)
 40017b0:	a8800208 	cmpgei	r2,r21,8
 40017b4:	103ff426 	beq	r2,zero,4001788 <___vfprintf_internal_r+0x13fc>
 40017b8:	d9801a04 	addi	r6,sp,104
 40017bc:	900b883a 	mov	r5,r18
 40017c0:	9809883a 	mov	r4,r19
 40017c4:	4006b940 	call	4006b94 <__sprint_r>
 40017c8:	103bfd1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 40017cc:	dd401b17 	ldw	r21,108(sp)
 40017d0:	d8c01c17 	ldw	r3,112(sp)
 40017d4:	df002704 	addi	fp,sp,156
 40017d8:	003fec06 	br	400178c <___vfprintf_internal_r+0x1400>
 40017dc:	d9801a04 	addi	r6,sp,104
 40017e0:	900b883a 	mov	r5,r18
 40017e4:	9809883a 	mov	r4,r19
 40017e8:	4006b940 	call	4006b94 <__sprint_r>
 40017ec:	103bf41e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 40017f0:	d8c01c17 	ldw	r3,112(sp)
 40017f4:	dd802704 	addi	r22,sp,156
 40017f8:	003bd306 	br	4000748 <___vfprintf_internal_r+0x3bc>
 40017fc:	d8800417 	ldw	r2,16(sp)
 4001800:	1080004c 	andi	r2,r2,1
 4001804:	103bdd26 	beq	r2,zero,400077c <___vfprintf_internal_r+0x3f0>
 4001808:	003df106 	br	4000fd0 <___vfprintf_internal_r+0xc44>
 400180c:	dc402704 	addi	r17,sp,156
 4001810:	003d7606 	br	4000dec <___vfprintf_internal_r+0xa60>
 4001814:	d9000517 	ldw	r4,20(sp)
 4001818:	2005d7fa 	srai	r2,r4,31
 400181c:	19000015 	stw	r4,0(r3)
 4001820:	18800115 	stw	r2,4(r3)
 4001824:	003b0d06 	br	400045c <___vfprintf_internal_r+0xd0>
 4001828:	00800c04 	movi	r2,48
 400182c:	d8801385 	stb	r2,78(sp)
 4001830:	df0013c5 	stb	fp,79(sp)
 4001834:	63000094 	ori	r12,r12,2
 4001838:	00800084 	movi	r2,2
 400183c:	003c1406 	br	4000890 <___vfprintf_internal_r+0x504>
 4001840:	25000017 	ldw	r20,0(r4)
 4001844:	002b883a 	mov	r21,zero
 4001848:	d8c00615 	stw	r3,24(sp)
 400184c:	003ceb06 	br	4000bfc <___vfprintf_internal_r+0x870>
 4001850:	25000017 	ldw	r20,0(r4)
 4001854:	002b883a 	mov	r21,zero
 4001858:	d8c00615 	stw	r3,24(sp)
 400185c:	0005883a 	mov	r2,zero
 4001860:	003c0b06 	br	4000890 <___vfprintf_internal_r+0x504>
 4001864:	25000017 	ldw	r20,0(r4)
 4001868:	002b883a 	mov	r21,zero
 400186c:	d8c00615 	stw	r3,24(sp)
 4001870:	00800044 	movi	r2,1
 4001874:	003c0606 	br	4000890 <___vfprintf_internal_r+0x504>
 4001878:	25000017 	ldw	r20,0(r4)
 400187c:	d8c00615 	stw	r3,24(sp)
 4001880:	a02bd7fa 	srai	r21,r20,31
 4001884:	a805883a 	mov	r2,r21
 4001888:	003cba06 	br	4000b74 <___vfprintf_internal_r+0x7e8>
 400188c:	18800017 	ldw	r2,0(r3)
 4001890:	d8800915 	stw	r2,36(sp)
 4001894:	18800117 	ldw	r2,4(r3)
 4001898:	d8800a15 	stw	r2,40(sp)
 400189c:	003c3206 	br	4000968 <___vfprintf_internal_r+0x5dc>
 40018a0:	db401343 	ldbu	r13,77(sp)
 40018a4:	a83cbe26 	beq	r21,zero,4000ba0 <___vfprintf_internal_r+0x814>
 40018a8:	dc402704 	addi	r17,sp,156
 40018ac:	a805883a 	mov	r2,r21
 40018b0:	dc000715 	stw	r16,28(sp)
 40018b4:	902b883a 	mov	r21,r18
 40018b8:	8821883a 	mov	r16,r17
 40018bc:	db000415 	stw	r12,16(sp)
 40018c0:	a023883a 	mov	r17,r20
 40018c4:	da000e15 	stw	r8,56(sp)
 40018c8:	9829883a 	mov	r20,r19
 40018cc:	1025883a 	mov	r18,r2
 40018d0:	6827883a 	mov	r19,r13
 40018d4:	8809883a 	mov	r4,r17
 40018d8:	900b883a 	mov	r5,r18
 40018dc:	01800284 	movi	r6,10
 40018e0:	000f883a 	mov	r7,zero
 40018e4:	4009e940 	call	4009e94 <__umoddi3>
 40018e8:	10800c04 	addi	r2,r2,48
 40018ec:	8809883a 	mov	r4,r17
 40018f0:	900b883a 	mov	r5,r18
 40018f4:	01800284 	movi	r6,10
 40018f8:	000f883a 	mov	r7,zero
 40018fc:	80bfffc5 	stb	r2,-1(r16)
 4001900:	40099040 	call	4009904 <__udivdi3>
 4001904:	900d883a 	mov	r6,r18
 4001908:	880f883a 	mov	r7,r17
 400190c:	843fffc4 	addi	r16,r16,-1
 4001910:	1023883a 	mov	r17,r2
 4001914:	1825883a 	mov	r18,r3
 4001918:	303fee1e 	bne	r6,zero,40018d4 <___vfprintf_internal_r+0x1548>
 400191c:	39c002a8 	cmpgeui	r7,r7,10
 4001920:	383fec1e 	bne	r7,zero,40018d4 <___vfprintf_internal_r+0x1548>
 4001924:	8023883a 	mov	r17,r16
 4001928:	d8802704 	addi	r2,sp,156
 400192c:	981b883a 	mov	r13,r19
 4001930:	a825883a 	mov	r18,r21
 4001934:	dc000717 	ldw	r16,28(sp)
 4001938:	da000e17 	ldw	r8,56(sp)
 400193c:	a027883a 	mov	r19,r20
 4001940:	146bc83a 	sub	r21,r2,r17
 4001944:	003d2906 	br	4000dec <___vfprintf_internal_r+0xa60>
 4001948:	0421c83a 	sub	r16,zero,r16
 400194c:	d8800615 	stw	r2,24(sp)
 4001950:	003d4506 	br	4000e68 <___vfprintf_internal_r+0xadc>
 4001954:	202b883a 	mov	r21,r4
 4001958:	057f1c16 	blt	zero,r21,40015cc <___vfprintf_internal_r+0x1240>
 400195c:	003f2506 	br	40015f4 <___vfprintf_internal_r+0x1268>
 4001960:	d8800417 	ldw	r2,16(sp)
 4001964:	1080004c 	andi	r2,r2,1
 4001968:	103f291e 	bne	r2,zero,4001610 <___vfprintf_internal_r+0x1284>
 400196c:	d9000817 	ldw	r4,32(sp)
 4001970:	d9400717 	ldw	r5,28(sp)
 4001974:	2545c83a 	sub	r2,r4,r21
 4001978:	2179c83a 	sub	fp,r4,r5
 400197c:	102b883a 	mov	r21,r2
 4001980:	e0bf430e 	bge	fp,r2,4001690 <___vfprintf_internal_r+0x1304>
 4001984:	e02b883a 	mov	r21,fp
 4001988:	003f4106 	br	4001690 <___vfprintf_internal_r+0x1304>
 400198c:	d9801a04 	addi	r6,sp,104
 4001990:	900b883a 	mov	r5,r18
 4001994:	9809883a 	mov	r4,r19
 4001998:	4006b940 	call	4006b94 <__sprint_r>
 400199c:	103b881e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 40019a0:	da001b17 	ldw	r8,108(sp)
 40019a4:	d8c01c17 	ldw	r3,112(sp)
 40019a8:	dd802904 	addi	r22,sp,164
 40019ac:	42000044 	addi	r8,r8,1
 40019b0:	df002704 	addi	fp,sp,156
 40019b4:	003e9706 	br	4001414 <___vfprintf_internal_r+0x1088>
 40019b8:	bf000043 	ldbu	fp,1(r23)
 40019bc:	63000814 	ori	r12,r12,32
 40019c0:	bdc00044 	addi	r23,r23,1
 40019c4:	e2c03fcc 	andi	r11,fp,255
 40019c8:	5ac0201c 	xori	r11,r11,128
 40019cc:	5affe004 	addi	r11,r11,-128
 40019d0:	003aba06 	br	40004bc <___vfprintf_internal_r+0x130>
 40019d4:	d9801a04 	addi	r6,sp,104
 40019d8:	900b883a 	mov	r5,r18
 40019dc:	9809883a 	mov	r4,r19
 40019e0:	4006b940 	call	4006b94 <__sprint_r>
 40019e4:	103b761e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 40019e8:	d8c01c17 	ldw	r3,112(sp)
 40019ec:	dd802704 	addi	r22,sp,156
 40019f0:	003d8306 	br	4001000 <___vfprintf_internal_r+0xc74>
 40019f4:	002b883a 	mov	r21,zero
 40019f8:	003eff06 	br	40015f8 <___vfprintf_internal_r+0x126c>
 40019fc:	408001f0 	cmpltui	r2,r8,7
 4001a00:	402b883a 	mov	r21,r8
 4001a04:	1001a426 	beq	r2,zero,4002098 <___vfprintf_internal_r+0x1d0c>
 4001a08:	04410074 	movhi	r17,1025
 4001a0c:	a829883a 	mov	r20,r21
 4001a10:	d8c00615 	stw	r3,24(sp)
 4001a14:	8c7dce04 	addi	r17,r17,-2248
 4001a18:	003b1f06 	br	4000698 <___vfprintf_internal_r+0x30c>
 4001a1c:	01c10074 	movhi	r7,1025
 4001a20:	a9000450 	cmplti	r4,r21,17
 4001a24:	d8801b17 	ldw	r2,108(sp)
 4001a28:	39fdd104 	addi	r7,r7,-2236
 4001a2c:	20017f1e 	bne	r4,zero,400202c <___vfprintf_internal_r+0x1ca0>
 4001a30:	dc000e15 	stw	r16,56(sp)
 4001a34:	07000404 	movi	fp,16
 4001a38:	3821883a 	mov	r16,r7
 4001a3c:	00000406 	br	4001a50 <___vfprintf_internal_r+0x16c4>
 4001a40:	b5800204 	addi	r22,r22,8
 4001a44:	ad7ffc04 	addi	r21,r21,-16
 4001a48:	a9000448 	cmpgei	r4,r21,17
 4001a4c:	20017526 	beq	r4,zero,4002024 <___vfprintf_internal_r+0x1c98>
 4001a50:	10800044 	addi	r2,r2,1
 4001a54:	18c00404 	addi	r3,r3,16
 4001a58:	b4000015 	stw	r16,0(r22)
 4001a5c:	b7000115 	stw	fp,4(r22)
 4001a60:	d8c01c15 	stw	r3,112(sp)
 4001a64:	d8801b15 	stw	r2,108(sp)
 4001a68:	11000208 	cmpgei	r4,r2,8
 4001a6c:	203ff426 	beq	r4,zero,4001a40 <___vfprintf_internal_r+0x16b4>
 4001a70:	d9801a04 	addi	r6,sp,104
 4001a74:	900b883a 	mov	r5,r18
 4001a78:	9809883a 	mov	r4,r19
 4001a7c:	4006b940 	call	4006b94 <__sprint_r>
 4001a80:	103b4f1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001a84:	d8c01c17 	ldw	r3,112(sp)
 4001a88:	d8801b17 	ldw	r2,108(sp)
 4001a8c:	dd802704 	addi	r22,sp,156
 4001a90:	003fec06 	br	4001a44 <___vfprintf_internal_r+0x16b8>
 4001a94:	d8800517 	ldw	r2,20(sp)
 4001a98:	18800015 	stw	r2,0(r3)
 4001a9c:	003a6f06 	br	400045c <___vfprintf_internal_r+0xd0>
 4001aa0:	d9801a04 	addi	r6,sp,104
 4001aa4:	900b883a 	mov	r5,r18
 4001aa8:	9809883a 	mov	r4,r19
 4001aac:	4006b940 	call	4006b94 <__sprint_r>
 4001ab0:	103b431e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001ab4:	d8c01c17 	ldw	r3,112(sp)
 4001ab8:	dd401b17 	ldw	r21,108(sp)
 4001abc:	df002704 	addi	fp,sp,156
 4001ac0:	003e3a06 	br	40013ac <___vfprintf_internal_r+0x1020>
 4001ac4:	d9801a04 	addi	r6,sp,104
 4001ac8:	900b883a 	mov	r5,r18
 4001acc:	9809883a 	mov	r4,r19
 4001ad0:	4006b940 	call	4006b94 <__sprint_r>
 4001ad4:	103b3a1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001ad8:	d8c01c17 	ldw	r3,112(sp)
 4001adc:	dd401b17 	ldw	r21,108(sp)
 4001ae0:	df002704 	addi	fp,sp,156
 4001ae4:	003e2606 	br	4001380 <___vfprintf_internal_r+0xff4>
 4001ae8:	d8801b17 	ldw	r2,108(sp)
 4001aec:	01010074 	movhi	r4,1025
 4001af0:	213dd004 	addi	r4,r4,-2240
 4001af4:	10800044 	addi	r2,r2,1
 4001af8:	18c00044 	addi	r3,r3,1
 4001afc:	b1000015 	stw	r4,0(r22)
 4001b00:	01000044 	movi	r4,1
 4001b04:	d8801b15 	stw	r2,108(sp)
 4001b08:	b1000115 	stw	r4,4(r22)
 4001b0c:	d8c01c15 	stw	r3,112(sp)
 4001b10:	10800208 	cmpgei	r2,r2,8
 4001b14:	103de11e 	bne	r2,zero,400129c <___vfprintf_internal_r+0xf10>
 4001b18:	b5800204 	addi	r22,r22,8
 4001b1c:	003de706 	br	40012bc <___vfprintf_internal_r+0xf30>
 4001b20:	d9801a04 	addi	r6,sp,104
 4001b24:	900b883a 	mov	r5,r18
 4001b28:	9809883a 	mov	r4,r19
 4001b2c:	da001115 	stw	r8,68(sp)
 4001b30:	db400f15 	stw	r13,60(sp)
 4001b34:	db800e15 	stw	r14,56(sp)
 4001b38:	4006b940 	call	4006b94 <__sprint_r>
 4001b3c:	103b201e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001b40:	d8c01c17 	ldw	r3,112(sp)
 4001b44:	da001117 	ldw	r8,68(sp)
 4001b48:	db400f17 	ldw	r13,60(sp)
 4001b4c:	db800e17 	ldw	r14,56(sp)
 4001b50:	dd802704 	addi	r22,sp,156
 4001b54:	003add06 	br	40006cc <___vfprintf_internal_r+0x340>
 4001b58:	8825883a 	mov	r18,r17
 4001b5c:	003b1806 	br	40007c0 <___vfprintf_internal_r+0x434>
 4001b60:	d9000917 	ldw	r4,36(sp)
 4001b64:	d9400a17 	ldw	r5,40(sp)
 4001b68:	da000615 	stw	r8,24(sp)
 4001b6c:	200d883a 	mov	r6,r4
 4001b70:	280f883a 	mov	r7,r5
 4001b74:	db000415 	stw	r12,16(sp)
 4001b78:	400c9580 	call	400c958 <__unorddf2>
 4001b7c:	db000417 	ldw	r12,16(sp)
 4001b80:	da000617 	ldw	r8,24(sp)
 4001b84:	1002091e 	bne	r2,zero,40023ac <___vfprintf_internal_r+0x2020>
 4001b88:	057ff7c4 	movi	r21,-33
 4001b8c:	40bfffe0 	cmpeqi	r2,r8,-1
 4001b90:	e56a703a 	and	r21,fp,r21
 4001b94:	1001ab1e 	bne	r2,zero,4002244 <___vfprintf_internal_r+0x1eb8>
 4001b98:	a88011d8 	cmpnei	r2,r21,71
 4001b9c:	10015726 	beq	r2,zero,40020fc <___vfprintf_internal_r+0x1d70>
 4001ba0:	60804014 	ori	r2,r12,256
 4001ba4:	d8800415 	stw	r2,16(sp)
 4001ba8:	d8800a17 	ldw	r2,40(sp)
 4001bac:	10012d16 	blt	r2,zero,4002064 <___vfprintf_internal_r+0x1cd8>
 4001bb0:	dd000a17 	ldw	r20,40(sp)
 4001bb4:	d8000605 	stb	zero,24(sp)
 4001bb8:	e08019a0 	cmpeqi	r2,fp,102
 4001bbc:	d8800f15 	stw	r2,60(sp)
 4001bc0:	1000c31e 	bne	r2,zero,4001ed0 <___vfprintf_internal_r+0x1b44>
 4001bc4:	e08011a0 	cmpeqi	r2,fp,70
 4001bc8:	1000c11e 	bne	r2,zero,4001ed0 <___vfprintf_internal_r+0x1b44>
 4001bcc:	a8801158 	cmpnei	r2,r21,69
 4001bd0:	10016226 	beq	r2,zero,400215c <___vfprintf_internal_r+0x1dd0>
 4001bd4:	d8801804 	addi	r2,sp,96
 4001bd8:	d8800315 	stw	r2,12(sp)
 4001bdc:	d9400917 	ldw	r5,36(sp)
 4001be0:	d8801504 	addi	r2,sp,84
 4001be4:	d8800215 	stw	r2,8(sp)
 4001be8:	d8801404 	addi	r2,sp,80
 4001bec:	da000015 	stw	r8,0(sp)
 4001bf0:	9809883a 	mov	r4,r19
 4001bf4:	d8800115 	stw	r2,4(sp)
 4001bf8:	01c00084 	movi	r7,2
 4001bfc:	a00d883a 	mov	r6,r20
 4001c00:	db000815 	stw	r12,32(sp)
 4001c04:	da000715 	stw	r8,28(sp)
 4001c08:	400289c0 	call	400289c <_dtoa_r>
 4001c0c:	da000717 	ldw	r8,28(sp)
 4001c10:	e10019d8 	cmpnei	r4,fp,103
 4001c14:	db000817 	ldw	r12,32(sp)
 4001c18:	1023883a 	mov	r17,r2
 4001c1c:	4007883a 	mov	r3,r8
 4001c20:	2001621e 	bne	r4,zero,40021ac <___vfprintf_internal_r+0x1e20>
 4001c24:	6080004c 	andi	r2,r12,1
 4001c28:	1001621e 	bne	r2,zero,40021b4 <___vfprintf_internal_r+0x1e28>
 4001c2c:	d8801417 	ldw	r2,80(sp)
 4001c30:	ad4011e0 	cmpeqi	r21,r21,71
 4001c34:	d8800715 	stw	r2,28(sp)
 4001c38:	d8801817 	ldw	r2,96(sp)
 4001c3c:	1445c83a 	sub	r2,r2,r17
 4001c40:	d8800815 	stw	r2,32(sp)
 4001c44:	a8000526 	beq	r21,zero,4001c5c <___vfprintf_internal_r+0x18d0>
 4001c48:	d8c00717 	ldw	r3,28(sp)
 4001c4c:	18bfff50 	cmplti	r2,r3,-3
 4001c50:	1000011e 	bne	r2,zero,4001c58 <___vfprintf_internal_r+0x18cc>
 4001c54:	40c1670e 	bge	r8,r3,40021f4 <___vfprintf_internal_r+0x1e68>
 4001c58:	e73fff84 	addi	fp,fp,-2
 4001c5c:	d8800717 	ldw	r2,28(sp)
 4001c60:	df001645 	stb	fp,89(sp)
 4001c64:	157fffc4 	addi	r21,r2,-1
 4001c68:	dd401415 	stw	r21,80(sp)
 4001c6c:	a801c316 	blt	r21,zero,400237c <___vfprintf_internal_r+0x1ff0>
 4001c70:	00800ac4 	movi	r2,43
 4001c74:	d8801685 	stb	r2,90(sp)
 4001c78:	a8800290 	cmplti	r2,r21,10
 4001c7c:	1001b81e 	bne	r2,zero,4002360 <___vfprintf_internal_r+0x1fd4>
 4001c80:	d98019c4 	addi	r6,sp,103
 4001c84:	9029883a 	mov	r20,r18
 4001c88:	dc400715 	stw	r17,28(sp)
 4001c8c:	8025883a 	mov	r18,r16
 4001c90:	db000f15 	stw	r12,60(sp)
 4001c94:	3021883a 	mov	r16,r6
 4001c98:	a809883a 	mov	r4,r21
 4001c9c:	01400284 	movi	r5,10
 4001ca0:	400a4480 	call	400a448 <__modsi3>
 4001ca4:	10800c04 	addi	r2,r2,48
 4001ca8:	a809883a 	mov	r4,r21
 4001cac:	80bfffc5 	stb	r2,-1(r16)
 4001cb0:	01400284 	movi	r5,10
 4001cb4:	400a3c80 	call	400a3c8 <__divsi3>
 4001cb8:	a9001908 	cmpgei	r4,r21,100
 4001cbc:	8023883a 	mov	r17,r16
 4001cc0:	102b883a 	mov	r21,r2
 4001cc4:	843fffc4 	addi	r16,r16,-1
 4001cc8:	203ff31e 	bne	r4,zero,4001c98 <___vfprintf_internal_r+0x190c>
 4001ccc:	800d883a 	mov	r6,r16
 4001cd0:	11000c04 	addi	r4,r2,48
 4001cd4:	9021883a 	mov	r16,r18
 4001cd8:	a025883a 	mov	r18,r20
 4001cdc:	8829883a 	mov	r20,r17
 4001ce0:	a0bfff84 	addi	r2,r20,-2
 4001ce4:	313fffc5 	stb	r4,-1(r6)
 4001ce8:	d8c019c4 	addi	r3,sp,103
 4001cec:	db000f17 	ldw	r12,60(sp)
 4001cf0:	dc400717 	ldw	r17,28(sp)
 4001cf4:	10c1cd2e 	bgeu	r2,r3,400242c <___vfprintf_internal_r+0x20a0>
 4001cf8:	d8c016c4 	addi	r3,sp,91
 4001cfc:	00000106 	br	4001d04 <___vfprintf_internal_r+0x1978>
 4001d00:	11000003 	ldbu	r4,0(r2)
 4001d04:	19000005 	stb	r4,0(r3)
 4001d08:	10800044 	addi	r2,r2,1
 4001d0c:	d90019c4 	addi	r4,sp,103
 4001d10:	18c00044 	addi	r3,r3,1
 4001d14:	113ffa1e 	bne	r2,r4,4001d00 <___vfprintf_internal_r+0x1974>
 4001d18:	d8801a44 	addi	r2,sp,105
 4001d1c:	d8c016c4 	addi	r3,sp,91
 4001d20:	1505c83a 	sub	r2,r2,r20
 4001d24:	1885883a 	add	r2,r3,r2
 4001d28:	d8c01644 	addi	r3,sp,89
 4001d2c:	10c5c83a 	sub	r2,r2,r3
 4001d30:	d8801015 	stw	r2,64(sp)
 4001d34:	d8c00817 	ldw	r3,32(sp)
 4001d38:	d9001017 	ldw	r4,64(sp)
 4001d3c:	18800088 	cmpgei	r2,r3,2
 4001d40:	20eb883a 	add	r21,r4,r3
 4001d44:	10019226 	beq	r2,zero,4002390 <___vfprintf_internal_r+0x2004>
 4001d48:	d8800b17 	ldw	r2,44(sp)
 4001d4c:	a8ab883a 	add	r21,r21,r2
 4001d50:	a829883a 	mov	r20,r21
 4001d54:	a800010e 	bge	r21,zero,4001d5c <___vfprintf_internal_r+0x19d0>
 4001d58:	0029883a 	mov	r20,zero
 4001d5c:	d8000715 	stw	zero,28(sp)
 4001d60:	00008e06 	br	4001f9c <___vfprintf_internal_r+0x1c10>
 4001d64:	880f883a 	mov	r7,r17
 4001d68:	10800044 	addi	r2,r2,1
 4001d6c:	1d47883a 	add	r3,r3,r21
 4001d70:	b1c00015 	stw	r7,0(r22)
 4001d74:	003a7b06 	br	4000764 <___vfprintf_internal_r+0x3d8>
 4001d78:	d9801a04 	addi	r6,sp,104
 4001d7c:	900b883a 	mov	r5,r18
 4001d80:	9809883a 	mov	r4,r19
 4001d84:	4006b940 	call	4006b94 <__sprint_r>
 4001d88:	103a8d1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001d8c:	d8c01c17 	ldw	r3,112(sp)
 4001d90:	dd802704 	addi	r22,sp,156
 4001d94:	003c8b06 	br	4000fc4 <___vfprintf_internal_r+0xc38>
 4001d98:	d9801a04 	addi	r6,sp,104
 4001d9c:	900b883a 	mov	r5,r18
 4001da0:	9809883a 	mov	r4,r19
 4001da4:	da000e15 	stw	r8,56(sp)
 4001da8:	4006b940 	call	4006b94 <__sprint_r>
 4001dac:	103a841e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4001db0:	d8c01c17 	ldw	r3,112(sp)
 4001db4:	da000e17 	ldw	r8,56(sp)
 4001db8:	dd802704 	addi	r22,sp,156
 4001dbc:	003a6006 	br	4000740 <___vfprintf_internal_r+0x3b4>
 4001dc0:	8809883a 	mov	r4,r17
 4001dc4:	db000415 	stw	r12,16(sp)
 4001dc8:	d8c00615 	stw	r3,24(sp)
 4001dcc:	4006a080 	call	4006a08 <strlen>
 4001dd0:	db000417 	ldw	r12,16(sp)
 4001dd4:	102b883a 	mov	r21,r2
 4001dd8:	1029883a 	mov	r20,r2
 4001ddc:	003a2e06 	br	4000698 <___vfprintf_internal_r+0x30c>
 4001de0:	d8800d17 	ldw	r2,52(sp)
 4001de4:	d9000b17 	ldw	r4,44(sp)
 4001de8:	b0800015 	stw	r2,0(r22)
 4001dec:	d8801b17 	ldw	r2,108(sp)
 4001df0:	20c7883a 	add	r3,r4,r3
 4001df4:	b1000115 	stw	r4,4(r22)
 4001df8:	10800044 	addi	r2,r2,1
 4001dfc:	d8c01c15 	stw	r3,112(sp)
 4001e00:	d8801b15 	stw	r2,108(sp)
 4001e04:	11000208 	cmpgei	r4,r2,8
 4001e08:	2000bf1e 	bne	r4,zero,4002108 <___vfprintf_internal_r+0x1d7c>
 4001e0c:	b5800204 	addi	r22,r22,8
 4001e10:	283d3c0e 	bge	r5,zero,4001304 <___vfprintf_internal_r+0xf78>
 4001e14:	01c10074 	movhi	r7,1025
 4001e18:	293ffc08 	cmpgei	r4,r5,-16
 4001e1c:	39fdd104 	addi	r7,r7,-2236
 4001e20:	0179c83a 	sub	fp,zero,r5
 4001e24:	2001361e 	bne	r4,zero,4002300 <___vfprintf_internal_r+0x1f74>
 4001e28:	dc000715 	stw	r16,28(sp)
 4001e2c:	05400404 	movi	r21,16
 4001e30:	9021883a 	mov	r16,r18
 4001e34:	3825883a 	mov	r18,r7
 4001e38:	00000406 	br	4001e4c <___vfprintf_internal_r+0x1ac0>
 4001e3c:	b5800204 	addi	r22,r22,8
 4001e40:	e73ffc04 	addi	fp,fp,-16
 4001e44:	e1800448 	cmpgei	r6,fp,17
 4001e48:	30012a26 	beq	r6,zero,40022f4 <___vfprintf_internal_r+0x1f68>
 4001e4c:	10800044 	addi	r2,r2,1
 4001e50:	18c00404 	addi	r3,r3,16
 4001e54:	b4800015 	stw	r18,0(r22)
 4001e58:	b5400115 	stw	r21,4(r22)
 4001e5c:	d8c01c15 	stw	r3,112(sp)
 4001e60:	d8801b15 	stw	r2,108(sp)
 4001e64:	11800208 	cmpgei	r6,r2,8
 4001e68:	303ff426 	beq	r6,zero,4001e3c <___vfprintf_internal_r+0x1ab0>
 4001e6c:	d9801a04 	addi	r6,sp,104
 4001e70:	800b883a 	mov	r5,r16
 4001e74:	9809883a 	mov	r4,r19
 4001e78:	4006b940 	call	4006b94 <__sprint_r>
 4001e7c:	10015f1e 	bne	r2,zero,40023fc <___vfprintf_internal_r+0x2070>
 4001e80:	d8c01c17 	ldw	r3,112(sp)
 4001e84:	d8801b17 	ldw	r2,108(sp)
 4001e88:	dd802704 	addi	r22,sp,156
 4001e8c:	003fec06 	br	4001e40 <___vfprintf_internal_r+0x1ab4>
 4001e90:	800f883a 	mov	r7,r16
 4001e94:	dc000717 	ldw	r16,28(sp)
 4001e98:	8817883a 	mov	r11,r17
 4001e9c:	aa000044 	addi	r8,r21,1
 4001ea0:	e0800204 	addi	r2,fp,8
 4001ea4:	1ac7883a 	add	r3,r3,r11
 4001ea8:	e1c00015 	stw	r7,0(fp)
 4001eac:	e2c00115 	stw	r11,4(fp)
 4001eb0:	d8c01c15 	stw	r3,112(sp)
 4001eb4:	da001b15 	stw	r8,108(sp)
 4001eb8:	41000208 	cmpgei	r4,r8,8
 4001ebc:	203eb31e 	bne	r4,zero,400198c <___vfprintf_internal_r+0x1600>
 4001ec0:	42000044 	addi	r8,r8,1
 4001ec4:	15800204 	addi	r22,r2,8
 4001ec8:	1039883a 	mov	fp,r2
 4001ecc:	003d5106 	br	4001414 <___vfprintf_internal_r+0x1088>
 4001ed0:	d8801804 	addi	r2,sp,96
 4001ed4:	d8800315 	stw	r2,12(sp)
 4001ed8:	d9400917 	ldw	r5,36(sp)
 4001edc:	d8801504 	addi	r2,sp,84
 4001ee0:	d8800215 	stw	r2,8(sp)
 4001ee4:	d8801404 	addi	r2,sp,80
 4001ee8:	da000015 	stw	r8,0(sp)
 4001eec:	d8800115 	stw	r2,4(sp)
 4001ef0:	01c000c4 	movi	r7,3
 4001ef4:	a00d883a 	mov	r6,r20
 4001ef8:	9809883a 	mov	r4,r19
 4001efc:	db000815 	stw	r12,32(sp)
 4001f00:	da000715 	stw	r8,28(sp)
 4001f04:	400289c0 	call	400289c <_dtoa_r>
 4001f08:	da000717 	ldw	r8,28(sp)
 4001f0c:	1023883a 	mov	r17,r2
 4001f10:	db000817 	ldw	r12,32(sp)
 4001f14:	1207883a 	add	r3,r2,r8
 4001f18:	88800007 	ldb	r2,0(r17)
 4001f1c:	10800c20 	cmpeqi	r2,r2,48
 4001f20:	1000661e 	bne	r2,zero,40020bc <___vfprintf_internal_r+0x1d30>
 4001f24:	d8801417 	ldw	r2,80(sp)
 4001f28:	1893883a 	add	r9,r3,r2
 4001f2c:	d9000917 	ldw	r4,36(sp)
 4001f30:	000d883a 	mov	r6,zero
 4001f34:	000f883a 	mov	r7,zero
 4001f38:	a00b883a 	mov	r5,r20
 4001f3c:	da401115 	stw	r9,68(sp)
 4001f40:	da000815 	stw	r8,32(sp)
 4001f44:	db000715 	stw	r12,28(sp)
 4001f48:	400b7540 	call	400b754 <__eqdf2>
 4001f4c:	db000717 	ldw	r12,28(sp)
 4001f50:	da000817 	ldw	r8,32(sp)
 4001f54:	da401117 	ldw	r9,68(sp)
 4001f58:	1000981e 	bne	r2,zero,40021bc <___vfprintf_internal_r+0x1e30>
 4001f5c:	4805883a 	mov	r2,r9
 4001f60:	d8c01417 	ldw	r3,80(sp)
 4001f64:	1445c83a 	sub	r2,r2,r17
 4001f68:	ad4011d8 	cmpnei	r21,r21,71
 4001f6c:	d8c00715 	stw	r3,28(sp)
 4001f70:	d8800815 	stw	r2,32(sp)
 4001f74:	a83f3426 	beq	r21,zero,4001c48 <___vfprintf_internal_r+0x18bc>
 4001f78:	d8800f17 	ldw	r2,60(sp)
 4001f7c:	103f3726 	beq	r2,zero,4001c5c <___vfprintf_internal_r+0x18d0>
 4001f80:	d8c00717 	ldw	r3,28(sp)
 4001f84:	6080004c 	andi	r2,r12,1
 4001f88:	1204b03a 	or	r2,r2,r8
 4001f8c:	00c1130e 	bge	zero,r3,40023dc <___vfprintf_internal_r+0x2050>
 4001f90:	10010e1e 	bne	r2,zero,40023cc <___vfprintf_internal_r+0x2040>
 4001f94:	dd400717 	ldw	r21,28(sp)
 4001f98:	a829883a 	mov	r20,r21
 4001f9c:	d8800607 	ldb	r2,24(sp)
 4001fa0:	10008f26 	beq	r2,zero,40021e0 <___vfprintf_internal_r+0x1e54>
 4001fa4:	00800b44 	movi	r2,45
 4001fa8:	d8801345 	stb	r2,77(sp)
 4001fac:	d8800e17 	ldw	r2,56(sp)
 4001fb0:	0011883a 	mov	r8,zero
 4001fb4:	d8800615 	stw	r2,24(sp)
 4001fb8:	003b9406 	br	4000e0c <___vfprintf_internal_r+0xa80>
 4001fbc:	04410074 	movhi	r17,1025
 4001fc0:	8c7dc004 	addi	r17,r17,-2304
 4001fc4:	003a8d06 	br	40009fc <___vfprintf_internal_r+0x670>
 4001fc8:	d8800617 	ldw	r2,24(sp)
 4001fcc:	d8c00615 	stw	r3,24(sp)
 4001fd0:	15000017 	ldw	r20,0(r2)
 4001fd4:	a02bd7fa 	srai	r21,r20,31
 4001fd8:	a805883a 	mov	r2,r21
 4001fdc:	003ae506 	br	4000b74 <___vfprintf_internal_r+0x7e8>
 4001fe0:	d8800617 	ldw	r2,24(sp)
 4001fe4:	002b883a 	mov	r21,zero
 4001fe8:	d8c00615 	stw	r3,24(sp)
 4001fec:	15000017 	ldw	r20,0(r2)
 4001ff0:	0005883a 	mov	r2,zero
 4001ff4:	003a2606 	br	4000890 <___vfprintf_internal_r+0x504>
 4001ff8:	d8800617 	ldw	r2,24(sp)
 4001ffc:	002b883a 	mov	r21,zero
 4002000:	d8c00615 	stw	r3,24(sp)
 4002004:	15000017 	ldw	r20,0(r2)
 4002008:	00800044 	movi	r2,1
 400200c:	003a2006 	br	4000890 <___vfprintf_internal_r+0x504>
 4002010:	d8800617 	ldw	r2,24(sp)
 4002014:	002b883a 	mov	r21,zero
 4002018:	d8c00615 	stw	r3,24(sp)
 400201c:	15000017 	ldw	r20,0(r2)
 4002020:	003af606 	br	4000bfc <___vfprintf_internal_r+0x870>
 4002024:	800f883a 	mov	r7,r16
 4002028:	dc000e17 	ldw	r16,56(sp)
 400202c:	10800044 	addi	r2,r2,1
 4002030:	1d47883a 	add	r3,r3,r21
 4002034:	d8801b15 	stw	r2,108(sp)
 4002038:	b1c00015 	stw	r7,0(r22)
 400203c:	b5400115 	stw	r21,4(r22)
 4002040:	d8c01c15 	stw	r3,112(sp)
 4002044:	10800208 	cmpgei	r2,r2,8
 4002048:	10003a1e 	bne	r2,zero,4002134 <___vfprintf_internal_r+0x1da8>
 400204c:	b5800204 	addi	r22,r22,8
 4002050:	003d6c06 	br	4001604 <___vfprintf_internal_r+0x1278>
 4002054:	00800b44 	movi	r2,45
 4002058:	d8801345 	stb	r2,77(sp)
 400205c:	03400b44 	movi	r13,45
 4002060:	003a6206 	br	40009ec <___vfprintf_internal_r+0x660>
 4002064:	1520003c 	xorhi	r20,r2,32768
 4002068:	00800b44 	movi	r2,45
 400206c:	d8800605 	stb	r2,24(sp)
 4002070:	003ed106 	br	4001bb8 <___vfprintf_internal_r+0x182c>
 4002074:	d9801a04 	addi	r6,sp,104
 4002078:	900b883a 	mov	r5,r18
 400207c:	9809883a 	mov	r4,r19
 4002080:	4006b940 	call	4006b94 <__sprint_r>
 4002084:	1039ce1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4002088:	dd401417 	ldw	r21,80(sp)
 400208c:	d8c01c17 	ldw	r3,112(sp)
 4002090:	dd802704 	addi	r22,sp,156
 4002094:	003d6a06 	br	4001640 <___vfprintf_internal_r+0x12b4>
 4002098:	05400184 	movi	r21,6
 400209c:	003e5a06 	br	4001a08 <___vfprintf_internal_r+0x167c>
 40020a0:	d9801a04 	addi	r6,sp,104
 40020a4:	900b883a 	mov	r5,r18
 40020a8:	9809883a 	mov	r4,r19
 40020ac:	4006b940 	call	4006b94 <__sprint_r>
 40020b0:	0039c306 	br	40007c0 <___vfprintf_internal_r+0x434>
 40020b4:	d9401345 	stb	r5,77(sp)
 40020b8:	00397106 	br	4000680 <___vfprintf_internal_r+0x2f4>
 40020bc:	d9000917 	ldw	r4,36(sp)
 40020c0:	000d883a 	mov	r6,zero
 40020c4:	000f883a 	mov	r7,zero
 40020c8:	a00b883a 	mov	r5,r20
 40020cc:	d8c01115 	stw	r3,68(sp)
 40020d0:	da000815 	stw	r8,32(sp)
 40020d4:	db000715 	stw	r12,28(sp)
 40020d8:	400b7540 	call	400b754 <__eqdf2>
 40020dc:	db000717 	ldw	r12,28(sp)
 40020e0:	da000817 	ldw	r8,32(sp)
 40020e4:	d8c01117 	ldw	r3,68(sp)
 40020e8:	103f8e26 	beq	r2,zero,4001f24 <___vfprintf_internal_r+0x1b98>
 40020ec:	00800044 	movi	r2,1
 40020f0:	1205c83a 	sub	r2,r2,r8
 40020f4:	d8801415 	stw	r2,80(sp)
 40020f8:	003f8b06 	br	4001f28 <___vfprintf_internal_r+0x1b9c>
 40020fc:	403ea81e 	bne	r8,zero,4001ba0 <___vfprintf_internal_r+0x1814>
 4002100:	02000044 	movi	r8,1
 4002104:	003ea606 	br	4001ba0 <___vfprintf_internal_r+0x1814>
 4002108:	d9801a04 	addi	r6,sp,104
 400210c:	900b883a 	mov	r5,r18
 4002110:	9809883a 	mov	r4,r19
 4002114:	4006b940 	call	4006b94 <__sprint_r>
 4002118:	1039a91e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 400211c:	d9401417 	ldw	r5,80(sp)
 4002120:	d8c01c17 	ldw	r3,112(sp)
 4002124:	d8801b17 	ldw	r2,108(sp)
 4002128:	dd802704 	addi	r22,sp,156
 400212c:	283c750e 	bge	r5,zero,4001304 <___vfprintf_internal_r+0xf78>
 4002130:	003f3806 	br	4001e14 <___vfprintf_internal_r+0x1a88>
 4002134:	d9801a04 	addi	r6,sp,104
 4002138:	900b883a 	mov	r5,r18
 400213c:	9809883a 	mov	r4,r19
 4002140:	4006b940 	call	4006b94 <__sprint_r>
 4002144:	10399e1e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4002148:	d8c01c17 	ldw	r3,112(sp)
 400214c:	dd802704 	addi	r22,sp,156
 4002150:	003d2c06 	br	4001604 <___vfprintf_internal_r+0x1278>
 4002154:	db000417 	ldw	r12,16(sp)
 4002158:	003a9306 	br	4000ba8 <___vfprintf_internal_r+0x81c>
 400215c:	d8801804 	addi	r2,sp,96
 4002160:	d8800315 	stw	r2,12(sp)
 4002164:	d9400917 	ldw	r5,36(sp)
 4002168:	d8801504 	addi	r2,sp,84
 400216c:	40c00044 	addi	r3,r8,1
 4002170:	d8800215 	stw	r2,8(sp)
 4002174:	d8801404 	addi	r2,sp,80
 4002178:	d8c00015 	stw	r3,0(sp)
 400217c:	d8800115 	stw	r2,4(sp)
 4002180:	01c00084 	movi	r7,2
 4002184:	a00d883a 	mov	r6,r20
 4002188:	9809883a 	mov	r4,r19
 400218c:	db001115 	stw	r12,68(sp)
 4002190:	da000815 	stw	r8,32(sp)
 4002194:	d8c00715 	stw	r3,28(sp)
 4002198:	400289c0 	call	400289c <_dtoa_r>
 400219c:	d8c00717 	ldw	r3,28(sp)
 40021a0:	da000817 	ldw	r8,32(sp)
 40021a4:	db001117 	ldw	r12,68(sp)
 40021a8:	1023883a 	mov	r17,r2
 40021ac:	e08011d8 	cmpnei	r2,fp,71
 40021b0:	103e9c26 	beq	r2,zero,4001c24 <___vfprintf_internal_r+0x1898>
 40021b4:	88d3883a 	add	r9,r17,r3
 40021b8:	003f5c06 	br	4001f2c <___vfprintf_internal_r+0x1ba0>
 40021bc:	d8801817 	ldw	r2,96(sp)
 40021c0:	127f672e 	bgeu	r2,r9,4001f60 <___vfprintf_internal_r+0x1bd4>
 40021c4:	01000c04 	movi	r4,48
 40021c8:	10c00044 	addi	r3,r2,1
 40021cc:	d8c01815 	stw	r3,96(sp)
 40021d0:	11000005 	stb	r4,0(r2)
 40021d4:	d8801817 	ldw	r2,96(sp)
 40021d8:	127ffb36 	bltu	r2,r9,40021c8 <___vfprintf_internal_r+0x1e3c>
 40021dc:	003f6006 	br	4001f60 <___vfprintf_internal_r+0x1bd4>
 40021e0:	d8800e17 	ldw	r2,56(sp)
 40021e4:	db401343 	ldbu	r13,77(sp)
 40021e8:	0011883a 	mov	r8,zero
 40021ec:	d8800615 	stw	r2,24(sp)
 40021f0:	003b0206 	br	4000dfc <___vfprintf_internal_r+0xa70>
 40021f4:	d8800717 	ldw	r2,28(sp)
 40021f8:	d8c00817 	ldw	r3,32(sp)
 40021fc:	10c02216 	blt	r2,r3,4002288 <___vfprintf_internal_r+0x1efc>
 4002200:	6300004c 	andi	r12,r12,1
 4002204:	60004f1e 	bne	r12,zero,4002344 <___vfprintf_internal_r+0x1fb8>
 4002208:	1029883a 	mov	r20,r2
 400220c:	1000010e 	bge	r2,zero,4002214 <___vfprintf_internal_r+0x1e88>
 4002210:	0029883a 	mov	r20,zero
 4002214:	dd400717 	ldw	r21,28(sp)
 4002218:	070019c4 	movi	fp,103
 400221c:	003f5f06 	br	4001f9c <___vfprintf_internal_r+0x1c10>
 4002220:	d9801a04 	addi	r6,sp,104
 4002224:	900b883a 	mov	r5,r18
 4002228:	9809883a 	mov	r4,r19
 400222c:	4006b940 	call	4006b94 <__sprint_r>
 4002230:	1039631e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4002234:	d8c01c17 	ldw	r3,112(sp)
 4002238:	dd802704 	addi	r22,sp,156
 400223c:	a83cee0e 	bge	r21,zero,40015f8 <___vfprintf_internal_r+0x126c>
 4002240:	003dec06 	br	40019f4 <___vfprintf_internal_r+0x1668>
 4002244:	02000184 	movi	r8,6
 4002248:	003e5506 	br	4001ba0 <___vfprintf_internal_r+0x1814>
 400224c:	d9801a04 	addi	r6,sp,104
 4002250:	900b883a 	mov	r5,r18
 4002254:	9809883a 	mov	r4,r19
 4002258:	4006b940 	call	4006b94 <__sprint_r>
 400225c:	1039581e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4002260:	d8801417 	ldw	r2,80(sp)
 4002264:	d9000817 	ldw	r4,32(sp)
 4002268:	d8c01c17 	ldw	r3,112(sp)
 400226c:	dd802704 	addi	r22,sp,156
 4002270:	2085c83a 	sub	r2,r4,r2
 4002274:	003d0606 	br	4001690 <___vfprintf_internal_r+0x1304>
 4002278:	4029883a 	mov	r20,r8
 400227c:	d8c00615 	stw	r3,24(sp)
 4002280:	402b883a 	mov	r21,r8
 4002284:	00390406 	br	4000698 <___vfprintf_internal_r+0x30c>
 4002288:	d8800817 	ldw	r2,32(sp)
 400228c:	d8c00b17 	ldw	r3,44(sp)
 4002290:	10eb883a 	add	r21,r2,r3
 4002294:	d8800717 	ldw	r2,28(sp)
 4002298:	00800316 	blt	zero,r2,40022a8 <___vfprintf_internal_r+0x1f1c>
 400229c:	d8800717 	ldw	r2,28(sp)
 40022a0:	a8abc83a 	sub	r21,r21,r2
 40022a4:	ad400044 	addi	r21,r21,1
 40022a8:	a829883a 	mov	r20,r21
 40022ac:	a8002a16 	blt	r21,zero,4002358 <___vfprintf_internal_r+0x1fcc>
 40022b0:	070019c4 	movi	fp,103
 40022b4:	003f3906 	br	4001f9c <___vfprintf_internal_r+0x1c10>
 40022b8:	d9401345 	stb	r5,77(sp)
 40022bc:	003a2506 	br	4000b54 <___vfprintf_internal_r+0x7c8>
 40022c0:	d9401345 	stb	r5,77(sp)
 40022c4:	003b1806 	br	4000f28 <___vfprintf_internal_r+0xb9c>
 40022c8:	d9401345 	stb	r5,77(sp)
 40022cc:	003a9006 	br	4000d10 <___vfprintf_internal_r+0x984>
 40022d0:	d9401345 	stb	r5,77(sp)
 40022d4:	003a3f06 	br	4000bd4 <___vfprintf_internal_r+0x848>
 40022d8:	d9401345 	stb	r5,77(sp)
 40022dc:	003a7806 	br	4000cc0 <___vfprintf_internal_r+0x934>
 40022e0:	d9401345 	stb	r5,77(sp)
 40022e4:	00399606 	br	4000940 <___vfprintf_internal_r+0x5b4>
 40022e8:	00bfffc4 	movi	r2,-1
 40022ec:	d8800515 	stw	r2,20(sp)
 40022f0:	00393606 	br	40007cc <___vfprintf_internal_r+0x440>
 40022f4:	900f883a 	mov	r7,r18
 40022f8:	8025883a 	mov	r18,r16
 40022fc:	dc000717 	ldw	r16,28(sp)
 4002300:	10800044 	addi	r2,r2,1
 4002304:	1f07883a 	add	r3,r3,fp
 4002308:	b1c00015 	stw	r7,0(r22)
 400230c:	b7000115 	stw	fp,4(r22)
 4002310:	d8c01c15 	stw	r3,112(sp)
 4002314:	d8801b15 	stw	r2,108(sp)
 4002318:	11000208 	cmpgei	r4,r2,8
 400231c:	203bf826 	beq	r4,zero,4001300 <___vfprintf_internal_r+0xf74>
 4002320:	d9801a04 	addi	r6,sp,104
 4002324:	900b883a 	mov	r5,r18
 4002328:	9809883a 	mov	r4,r19
 400232c:	4006b940 	call	4006b94 <__sprint_r>
 4002330:	1039231e 	bne	r2,zero,40007c0 <___vfprintf_internal_r+0x434>
 4002334:	d8c01c17 	ldw	r3,112(sp)
 4002338:	d8801b17 	ldw	r2,108(sp)
 400233c:	dd802704 	addi	r22,sp,156
 4002340:	003bf006 	br	4001304 <___vfprintf_internal_r+0xf78>
 4002344:	d8800717 	ldw	r2,28(sp)
 4002348:	d8c00b17 	ldw	r3,44(sp)
 400234c:	10eb883a 	add	r21,r2,r3
 4002350:	a829883a 	mov	r20,r21
 4002354:	a83fd60e 	bge	r21,zero,40022b0 <___vfprintf_internal_r+0x1f24>
 4002358:	0029883a 	mov	r20,zero
 400235c:	003fd406 	br	40022b0 <___vfprintf_internal_r+0x1f24>
 4002360:	00800c04 	movi	r2,48
 4002364:	ad400c04 	addi	r21,r21,48
 4002368:	d88016c5 	stb	r2,91(sp)
 400236c:	00800104 	movi	r2,4
 4002370:	dd401705 	stb	r21,92(sp)
 4002374:	d8801015 	stw	r2,64(sp)
 4002378:	003e6e06 	br	4001d34 <___vfprintf_internal_r+0x19a8>
 400237c:	05400044 	movi	r21,1
 4002380:	a8abc83a 	sub	r21,r21,r2
 4002384:	00800b44 	movi	r2,45
 4002388:	d8801685 	stb	r2,90(sp)
 400238c:	003e3a06 	br	4001c78 <___vfprintf_internal_r+0x18ec>
 4002390:	6080004c 	andi	r2,r12,1
 4002394:	d8800715 	stw	r2,28(sp)
 4002398:	103e6b1e 	bne	r2,zero,4001d48 <___vfprintf_internal_r+0x19bc>
 400239c:	a829883a 	mov	r20,r21
 40023a0:	a83efe0e 	bge	r21,zero,4001f9c <___vfprintf_internal_r+0x1c10>
 40023a4:	0029883a 	mov	r20,zero
 40023a8:	003efc06 	br	4001f9c <___vfprintf_internal_r+0x1c10>
 40023ac:	d8800a17 	ldw	r2,40(sp)
 40023b0:	10001a16 	blt	r2,zero,400241c <___vfprintf_internal_r+0x2090>
 40023b4:	db401343 	ldbu	r13,77(sp)
 40023b8:	e0801210 	cmplti	r2,fp,72
 40023bc:	1000141e 	bne	r2,zero,4002410 <___vfprintf_internal_r+0x2084>
 40023c0:	04410074 	movhi	r17,1025
 40023c4:	8c7dc304 	addi	r17,r17,-2292
 40023c8:	00398c06 	br	40009fc <___vfprintf_internal_r+0x670>
 40023cc:	d8800b17 	ldw	r2,44(sp)
 40023d0:	18ab883a 	add	r21,r3,r2
 40023d4:	aa2b883a 	add	r21,r21,r8
 40023d8:	003ff006 	br	400239c <___vfprintf_internal_r+0x2010>
 40023dc:	1000031e 	bne	r2,zero,40023ec <___vfprintf_internal_r+0x2060>
 40023e0:	05000044 	movi	r20,1
 40023e4:	05400044 	movi	r21,1
 40023e8:	003eec06 	br	4001f9c <___vfprintf_internal_r+0x1c10>
 40023ec:	d8800b17 	ldw	r2,44(sp)
 40023f0:	15400044 	addi	r21,r2,1
 40023f4:	aa2b883a 	add	r21,r21,r8
 40023f8:	003fe806 	br	400239c <___vfprintf_internal_r+0x2010>
 40023fc:	8025883a 	mov	r18,r16
 4002400:	0038ef06 	br	40007c0 <___vfprintf_internal_r+0x434>
 4002404:	b005883a 	mov	r2,r22
 4002408:	39fdd104 	addi	r7,r7,-2236
 400240c:	003ea506 	br	4001ea4 <___vfprintf_internal_r+0x1b18>
 4002410:	04410074 	movhi	r17,1025
 4002414:	8c7dc204 	addi	r17,r17,-2296
 4002418:	00397806 	br	40009fc <___vfprintf_internal_r+0x670>
 400241c:	00800b44 	movi	r2,45
 4002420:	d8801345 	stb	r2,77(sp)
 4002424:	03400b44 	movi	r13,45
 4002428:	003fe306 	br	40023b8 <___vfprintf_internal_r+0x202c>
 400242c:	00800084 	movi	r2,2
 4002430:	d8801015 	stw	r2,64(sp)
 4002434:	003e3f06 	br	4001d34 <___vfprintf_internal_r+0x19a8>
 4002438:	d8800617 	ldw	r2,24(sp)
 400243c:	12000017 	ldw	r8,0(r2)
 4002440:	10800104 	addi	r2,r2,4
 4002444:	4000010e 	bge	r8,zero,400244c <___vfprintf_internal_r+0x20c0>
 4002448:	023fffc4 	movi	r8,-1
 400244c:	bf000043 	ldbu	fp,1(r23)
 4002450:	d8800615 	stw	r2,24(sp)
 4002454:	182f883a 	mov	r23,r3
 4002458:	e2c03fcc 	andi	r11,fp,255
 400245c:	5ac0201c 	xori	r11,r11,128
 4002460:	5affe004 	addi	r11,r11,-128
 4002464:	00381506 	br	40004bc <___vfprintf_internal_r+0x130>

04002468 <__vfprintf_internal>:
 4002468:	00c10074 	movhi	r3,1025
 400246c:	2005883a 	mov	r2,r4
 4002470:	19064817 	ldw	r4,6432(r3)
 4002474:	300f883a 	mov	r7,r6
 4002478:	280d883a 	mov	r6,r5
 400247c:	100b883a 	mov	r5,r2
 4002480:	400038c1 	jmpi	400038c <___vfprintf_internal_r>

04002484 <__sbprintf>:
 4002484:	2880030b 	ldhu	r2,12(r5)
 4002488:	2b001917 	ldw	r12,100(r5)
 400248c:	2ac0038b 	ldhu	r11,14(r5)
 4002490:	2a800717 	ldw	r10,28(r5)
 4002494:	2a400917 	ldw	r9,36(r5)
 4002498:	defee204 	addi	sp,sp,-1144
 400249c:	da001a04 	addi	r8,sp,104
 40024a0:	00c10004 	movi	r3,1024
 40024a4:	dc011a15 	stw	r16,1128(sp)
 40024a8:	10bfff4c 	andi	r2,r2,65533
 40024ac:	2821883a 	mov	r16,r5
 40024b0:	d80b883a 	mov	r5,sp
 40024b4:	dc811c15 	stw	r18,1136(sp)
 40024b8:	dc411b15 	stw	r17,1132(sp)
 40024bc:	dfc11d15 	stw	ra,1140(sp)
 40024c0:	2025883a 	mov	r18,r4
 40024c4:	d880030d 	sth	r2,12(sp)
 40024c8:	db001915 	stw	r12,100(sp)
 40024cc:	dac0038d 	sth	r11,14(sp)
 40024d0:	da800715 	stw	r10,28(sp)
 40024d4:	da400915 	stw	r9,36(sp)
 40024d8:	da000015 	stw	r8,0(sp)
 40024dc:	da000415 	stw	r8,16(sp)
 40024e0:	d8c00215 	stw	r3,8(sp)
 40024e4:	d8c00515 	stw	r3,20(sp)
 40024e8:	d8000615 	stw	zero,24(sp)
 40024ec:	400038c0 	call	400038c <___vfprintf_internal_r>
 40024f0:	1023883a 	mov	r17,r2
 40024f4:	10000d0e 	bge	r2,zero,400252c <__sbprintf+0xa8>
 40024f8:	d880030b 	ldhu	r2,12(sp)
 40024fc:	1080100c 	andi	r2,r2,64
 4002500:	10000326 	beq	r2,zero,4002510 <__sbprintf+0x8c>
 4002504:	8080030b 	ldhu	r2,12(r16)
 4002508:	10801014 	ori	r2,r2,64
 400250c:	8080030d 	sth	r2,12(r16)
 4002510:	8805883a 	mov	r2,r17
 4002514:	dfc11d17 	ldw	ra,1140(sp)
 4002518:	dc811c17 	ldw	r18,1136(sp)
 400251c:	dc411b17 	ldw	r17,1132(sp)
 4002520:	dc011a17 	ldw	r16,1128(sp)
 4002524:	dec11e04 	addi	sp,sp,1144
 4002528:	f800283a 	ret
 400252c:	d80b883a 	mov	r5,sp
 4002530:	9009883a 	mov	r4,r18
 4002534:	40042140 	call	4004214 <_fflush_r>
 4002538:	103fef26 	beq	r2,zero,40024f8 <__sbprintf+0x74>
 400253c:	047fffc4 	movi	r17,-1
 4002540:	003fed06 	br	40024f8 <__sbprintf+0x74>

04002544 <__swsetup_r>:
 4002544:	00810074 	movhi	r2,1025
 4002548:	10864817 	ldw	r2,6432(r2)
 400254c:	defffd04 	addi	sp,sp,-12
 4002550:	dc400115 	stw	r17,4(sp)
 4002554:	dc000015 	stw	r16,0(sp)
 4002558:	dfc00215 	stw	ra,8(sp)
 400255c:	2023883a 	mov	r17,r4
 4002560:	2821883a 	mov	r16,r5
 4002564:	10000226 	beq	r2,zero,4002570 <__swsetup_r+0x2c>
 4002568:	10c00e17 	ldw	r3,56(r2)
 400256c:	18003326 	beq	r3,zero,400263c <__swsetup_r+0xf8>
 4002570:	8180030b 	ldhu	r6,12(r16)
 4002574:	30c0020c 	andi	r3,r6,8
 4002578:	3005883a 	mov	r2,r6
 400257c:	18000f26 	beq	r3,zero,40025bc <__swsetup_r+0x78>
 4002580:	80c00417 	ldw	r3,16(r16)
 4002584:	18001626 	beq	r3,zero,40025e0 <__swsetup_r+0x9c>
 4002588:	1100004c 	andi	r4,r2,1
 400258c:	20001f1e 	bne	r4,zero,400260c <__swsetup_r+0xc8>
 4002590:	1100008c 	andi	r4,r2,2
 4002594:	20002c1e 	bne	r4,zero,4002648 <__swsetup_r+0x104>
 4002598:	81000517 	ldw	r4,20(r16)
 400259c:	81000215 	stw	r4,8(r16)
 40025a0:	18001f26 	beq	r3,zero,4002620 <__swsetup_r+0xdc>
 40025a4:	0005883a 	mov	r2,zero
 40025a8:	dfc00217 	ldw	ra,8(sp)
 40025ac:	dc400117 	ldw	r17,4(sp)
 40025b0:	dc000017 	ldw	r16,0(sp)
 40025b4:	dec00304 	addi	sp,sp,12
 40025b8:	f800283a 	ret
 40025bc:	3080040c 	andi	r2,r6,16
 40025c0:	10003126 	beq	r2,zero,4002688 <__swsetup_r+0x144>
 40025c4:	3080010c 	andi	r2,r6,4
 40025c8:	1000211e 	bne	r2,zero,4002650 <__swsetup_r+0x10c>
 40025cc:	80c00417 	ldw	r3,16(r16)
 40025d0:	30800214 	ori	r2,r6,8
 40025d4:	8080030d 	sth	r2,12(r16)
 40025d8:	100d883a 	mov	r6,r2
 40025dc:	183fea1e 	bne	r3,zero,4002588 <__swsetup_r+0x44>
 40025e0:	1100a00c 	andi	r4,r2,640
 40025e4:	21008020 	cmpeqi	r4,r4,512
 40025e8:	203fe71e 	bne	r4,zero,4002588 <__swsetup_r+0x44>
 40025ec:	8809883a 	mov	r4,r17
 40025f0:	800b883a 	mov	r5,r16
 40025f4:	4004bf00 	call	4004bf0 <__smakebuf_r>
 40025f8:	8180030b 	ldhu	r6,12(r16)
 40025fc:	80c00417 	ldw	r3,16(r16)
 4002600:	3005883a 	mov	r2,r6
 4002604:	1100004c 	andi	r4,r2,1
 4002608:	203fe126 	beq	r4,zero,4002590 <__swsetup_r+0x4c>
 400260c:	81000517 	ldw	r4,20(r16)
 4002610:	80000215 	stw	zero,8(r16)
 4002614:	0109c83a 	sub	r4,zero,r4
 4002618:	81000615 	stw	r4,24(r16)
 400261c:	183fe11e 	bne	r3,zero,40025a4 <__swsetup_r+0x60>
 4002620:	10c0200c 	andi	r3,r2,128
 4002624:	0005883a 	mov	r2,zero
 4002628:	183fdf26 	beq	r3,zero,40025a8 <__swsetup_r+0x64>
 400262c:	31801014 	ori	r6,r6,64
 4002630:	8180030d 	sth	r6,12(r16)
 4002634:	00bfffc4 	movi	r2,-1
 4002638:	003fdb06 	br	40025a8 <__swsetup_r+0x64>
 400263c:	1009883a 	mov	r4,r2
 4002640:	40045980 	call	4004598 <__sinit>
 4002644:	003fca06 	br	4002570 <__swsetup_r+0x2c>
 4002648:	0009883a 	mov	r4,zero
 400264c:	003fd306 	br	400259c <__swsetup_r+0x58>
 4002650:	81400c17 	ldw	r5,48(r16)
 4002654:	28000626 	beq	r5,zero,4002670 <__swsetup_r+0x12c>
 4002658:	80801004 	addi	r2,r16,64
 400265c:	28800326 	beq	r5,r2,400266c <__swsetup_r+0x128>
 4002660:	8809883a 	mov	r4,r17
 4002664:	40046fc0 	call	40046fc <_free_r>
 4002668:	8180030b 	ldhu	r6,12(r16)
 400266c:	80000c15 	stw	zero,48(r16)
 4002670:	80c00417 	ldw	r3,16(r16)
 4002674:	00bff6c4 	movi	r2,-37
 4002678:	118c703a 	and	r6,r2,r6
 400267c:	80000115 	stw	zero,4(r16)
 4002680:	80c00015 	stw	r3,0(r16)
 4002684:	003fd206 	br	40025d0 <__swsetup_r+0x8c>
 4002688:	00800244 	movi	r2,9
 400268c:	88800015 	stw	r2,0(r17)
 4002690:	31801014 	ori	r6,r6,64
 4002694:	8180030d 	sth	r6,12(r16)
 4002698:	00bfffc4 	movi	r2,-1
 400269c:	003fc206 	br	40025a8 <__swsetup_r+0x64>

040026a0 <quorem>:
 40026a0:	defff504 	addi	sp,sp,-44
 40026a4:	dc800315 	stw	r18,12(sp)
 40026a8:	20800417 	ldw	r2,16(r4)
 40026ac:	2c800417 	ldw	r18,16(r5)
 40026b0:	dfc00a15 	stw	ra,40(sp)
 40026b4:	df000915 	stw	fp,36(sp)
 40026b8:	ddc00815 	stw	r23,32(sp)
 40026bc:	dd800715 	stw	r22,28(sp)
 40026c0:	dd400615 	stw	r21,24(sp)
 40026c4:	dd000515 	stw	r20,20(sp)
 40026c8:	dcc00415 	stw	r19,16(sp)
 40026cc:	dc400215 	stw	r17,8(sp)
 40026d0:	dc000115 	stw	r16,4(sp)
 40026d4:	14806f16 	blt	r2,r18,4002894 <quorem+0x1f4>
 40026d8:	94bfffc4 	addi	r18,r18,-1
 40026dc:	902c90ba 	slli	r22,r18,2
 40026e0:	2c000504 	addi	r16,r5,20
 40026e4:	25000504 	addi	r20,r4,20
 40026e8:	85a7883a 	add	r19,r16,r22
 40026ec:	9f000017 	ldw	fp,0(r19)
 40026f0:	a5ad883a 	add	r22,r20,r22
 40026f4:	202b883a 	mov	r21,r4
 40026f8:	b1000017 	ldw	r4,0(r22)
 40026fc:	e7000044 	addi	fp,fp,1
 4002700:	282f883a 	mov	r23,r5
 4002704:	e00b883a 	mov	r5,fp
 4002708:	d9000015 	stw	r4,0(sp)
 400270c:	400a4bc0 	call	400a4bc <__udivsi3>
 4002710:	d9000017 	ldw	r4,0(sp)
 4002714:	1023883a 	mov	r17,r2
 4002718:	27002a36 	bltu	r4,fp,40027c4 <quorem+0x124>
 400271c:	800b883a 	mov	r5,r16
 4002720:	a009883a 	mov	r4,r20
 4002724:	0013883a 	mov	r9,zero
 4002728:	0007883a 	mov	r3,zero
 400272c:	2a000017 	ldw	r8,0(r5)
 4002730:	21800017 	ldw	r6,0(r4)
 4002734:	21000104 	addi	r4,r4,4
 4002738:	40bfffcc 	andi	r2,r8,65535
 400273c:	1445383a 	mul	r2,r2,r17
 4002740:	400ed43a 	srli	r7,r8,16
 4002744:	32bfffcc 	andi	r10,r6,65535
 4002748:	1245883a 	add	r2,r2,r9
 400274c:	1012d43a 	srli	r9,r2,16
 4002750:	123fffcc 	andi	r8,r2,65535
 4002754:	3c4f383a 	mul	r7,r7,r17
 4002758:	1a07c83a 	sub	r3,r3,r8
 400275c:	1a91883a 	add	r8,r3,r10
 4002760:	3006d43a 	srli	r3,r6,16
 4002764:	4005d43a 	srai	r2,r8,16
 4002768:	3a4f883a 	add	r7,r7,r9
 400276c:	39bfffcc 	andi	r6,r7,65535
 4002770:	1987c83a 	sub	r3,r3,r6
 4002774:	1887883a 	add	r3,r3,r2
 4002778:	1804943a 	slli	r2,r3,16
 400277c:	423fffcc 	andi	r8,r8,65535
 4002780:	29400104 	addi	r5,r5,4
 4002784:	1210b03a 	or	r8,r2,r8
 4002788:	223fff15 	stw	r8,-4(r4)
 400278c:	3812d43a 	srli	r9,r7,16
 4002790:	1807d43a 	srai	r3,r3,16
 4002794:	997fe52e 	bgeu	r19,r5,400272c <quorem+0x8c>
 4002798:	b0800017 	ldw	r2,0(r22)
 400279c:	1000091e 	bne	r2,zero,40027c4 <quorem+0x124>
 40027a0:	b5bfff04 	addi	r22,r22,-4
 40027a4:	a5800336 	bltu	r20,r22,40027b4 <quorem+0x114>
 40027a8:	00000506 	br	40027c0 <quorem+0x120>
 40027ac:	94bfffc4 	addi	r18,r18,-1
 40027b0:	a580032e 	bgeu	r20,r22,40027c0 <quorem+0x120>
 40027b4:	b0800017 	ldw	r2,0(r22)
 40027b8:	b5bfff04 	addi	r22,r22,-4
 40027bc:	103ffb26 	beq	r2,zero,40027ac <quorem+0x10c>
 40027c0:	ac800415 	stw	r18,16(r21)
 40027c4:	b80b883a 	mov	r5,r23
 40027c8:	a809883a 	mov	r4,r21
 40027cc:	40061440 	call	4006144 <__mcmp>
 40027d0:	10002316 	blt	r2,zero,4002860 <quorem+0x1c0>
 40027d4:	8c400044 	addi	r17,r17,1
 40027d8:	a00d883a 	mov	r6,r20
 40027dc:	0007883a 	mov	r3,zero
 40027e0:	81000017 	ldw	r4,0(r16)
 40027e4:	31400017 	ldw	r5,0(r6)
 40027e8:	31800104 	addi	r6,r6,4
 40027ec:	20bfffcc 	andi	r2,r4,65535
 40027f0:	1887c83a 	sub	r3,r3,r2
 40027f4:	28bfffcc 	andi	r2,r5,65535
 40027f8:	1885883a 	add	r2,r3,r2
 40027fc:	2008d43a 	srli	r4,r4,16
 4002800:	2806d43a 	srli	r3,r5,16
 4002804:	100fd43a 	srai	r7,r2,16
 4002808:	117fffcc 	andi	r5,r2,65535
 400280c:	1907c83a 	sub	r3,r3,r4
 4002810:	19c7883a 	add	r3,r3,r7
 4002814:	1804943a 	slli	r2,r3,16
 4002818:	84000104 	addi	r16,r16,4
 400281c:	1807d43a 	srai	r3,r3,16
 4002820:	1144b03a 	or	r2,r2,r5
 4002824:	30bfff15 	stw	r2,-4(r6)
 4002828:	9c3fed2e 	bgeu	r19,r16,40027e0 <quorem+0x140>
 400282c:	900490ba 	slli	r2,r18,2
 4002830:	a085883a 	add	r2,r20,r2
 4002834:	10c00017 	ldw	r3,0(r2)
 4002838:	1800091e 	bne	r3,zero,4002860 <quorem+0x1c0>
 400283c:	10bfff04 	addi	r2,r2,-4
 4002840:	a0800336 	bltu	r20,r2,4002850 <quorem+0x1b0>
 4002844:	00000506 	br	400285c <quorem+0x1bc>
 4002848:	94bfffc4 	addi	r18,r18,-1
 400284c:	a080032e 	bgeu	r20,r2,400285c <quorem+0x1bc>
 4002850:	10c00017 	ldw	r3,0(r2)
 4002854:	10bfff04 	addi	r2,r2,-4
 4002858:	183ffb26 	beq	r3,zero,4002848 <quorem+0x1a8>
 400285c:	ac800415 	stw	r18,16(r21)
 4002860:	8805883a 	mov	r2,r17
 4002864:	dfc00a17 	ldw	ra,40(sp)
 4002868:	df000917 	ldw	fp,36(sp)
 400286c:	ddc00817 	ldw	r23,32(sp)
 4002870:	dd800717 	ldw	r22,28(sp)
 4002874:	dd400617 	ldw	r21,24(sp)
 4002878:	dd000517 	ldw	r20,20(sp)
 400287c:	dcc00417 	ldw	r19,16(sp)
 4002880:	dc800317 	ldw	r18,12(sp)
 4002884:	dc400217 	ldw	r17,8(sp)
 4002888:	dc000117 	ldw	r16,4(sp)
 400288c:	dec00b04 	addi	sp,sp,44
 4002890:	f800283a 	ret
 4002894:	0005883a 	mov	r2,zero
 4002898:	003ff206 	br	4002864 <quorem+0x1c4>

0400289c <_dtoa_r>:
 400289c:	20801017 	ldw	r2,64(r4)
 40028a0:	deffe204 	addi	sp,sp,-120
 40028a4:	ddc01b15 	stw	r23,108(sp)
 40028a8:	dd001815 	stw	r20,96(sp)
 40028ac:	dc801615 	stw	r18,88(sp)
 40028b0:	dc401515 	stw	r17,84(sp)
 40028b4:	dc001415 	stw	r16,80(sp)
 40028b8:	dfc01d15 	stw	ra,116(sp)
 40028bc:	df001c15 	stw	fp,112(sp)
 40028c0:	dd801a15 	stw	r22,104(sp)
 40028c4:	dd401915 	stw	r21,100(sp)
 40028c8:	dcc01715 	stw	r19,92(sp)
 40028cc:	d9c00115 	stw	r7,4(sp)
 40028d0:	dc002017 	ldw	r16,128(sp)
 40028d4:	202f883a 	mov	r23,r4
 40028d8:	3025883a 	mov	r18,r6
 40028dc:	2829883a 	mov	r20,r5
 40028e0:	3023883a 	mov	r17,r6
 40028e4:	10000826 	beq	r2,zero,4002908 <_dtoa_r+0x6c>
 40028e8:	21801117 	ldw	r6,68(r4)
 40028ec:	00c00044 	movi	r3,1
 40028f0:	100b883a 	mov	r5,r2
 40028f4:	1986983a 	sll	r3,r3,r6
 40028f8:	11800115 	stw	r6,4(r2)
 40028fc:	10c00215 	stw	r3,8(r2)
 4002900:	40058780 	call	4005878 <_Bfree>
 4002904:	b8001015 	stw	zero,64(r23)
 4002908:	90018616 	blt	r18,zero,4002f24 <_dtoa_r+0x688>
 400290c:	80000015 	stw	zero,0(r16)
 4002910:	909ffc2c 	andhi	r2,r18,32752
 4002914:	00dffc34 	movhi	r3,32752
 4002918:	10c18b26 	beq	r2,r3,4002f48 <_dtoa_r+0x6ac>
 400291c:	000d883a 	mov	r6,zero
 4002920:	000f883a 	mov	r7,zero
 4002924:	a009883a 	mov	r4,r20
 4002928:	880b883a 	mov	r5,r17
 400292c:	400b7540 	call	400b754 <__eqdf2>
 4002930:	1000181e 	bne	r2,zero,4002994 <_dtoa_r+0xf8>
 4002934:	d8c01f17 	ldw	r3,124(sp)
 4002938:	00800044 	movi	r2,1
 400293c:	18800015 	stw	r2,0(r3)
 4002940:	d8802117 	ldw	r2,132(sp)
 4002944:	10030b26 	beq	r2,zero,4003574 <_dtoa_r+0xcd8>
 4002948:	d8c02117 	ldw	r3,132(sp)
 400294c:	00810074 	movhi	r2,1025
 4002950:	10bdd044 	addi	r2,r2,-2239
 4002954:	07010074 	movhi	fp,1025
 4002958:	18800015 	stw	r2,0(r3)
 400295c:	e73dd004 	addi	fp,fp,-2240
 4002960:	e005883a 	mov	r2,fp
 4002964:	dfc01d17 	ldw	ra,116(sp)
 4002968:	df001c17 	ldw	fp,112(sp)
 400296c:	ddc01b17 	ldw	r23,108(sp)
 4002970:	dd801a17 	ldw	r22,104(sp)
 4002974:	dd401917 	ldw	r21,100(sp)
 4002978:	dd001817 	ldw	r20,96(sp)
 400297c:	dcc01717 	ldw	r19,92(sp)
 4002980:	dc801617 	ldw	r18,88(sp)
 4002984:	dc401517 	ldw	r17,84(sp)
 4002988:	dc001417 	ldw	r16,80(sp)
 400298c:	dec01e04 	addi	sp,sp,120
 4002990:	f800283a 	ret
 4002994:	d8801204 	addi	r2,sp,72
 4002998:	9020d53a 	srli	r16,r18,20
 400299c:	d8800015 	stw	r2,0(sp)
 40029a0:	d9c01304 	addi	r7,sp,76
 40029a4:	a00b883a 	mov	r5,r20
 40029a8:	880d883a 	mov	r6,r17
 40029ac:	b809883a 	mov	r4,r23
 40029b0:	40065280 	call	4006528 <__d2b>
 40029b4:	102d883a 	mov	r22,r2
 40029b8:	8001741e 	bne	r16,zero,4002f8c <_dtoa_r+0x6f0>
 40029bc:	df001217 	ldw	fp,72(sp)
 40029c0:	dc001317 	ldw	r16,76(sp)
 40029c4:	e421883a 	add	r16,fp,r16
 40029c8:	80810c84 	addi	r2,r16,1074
 40029cc:	10c00850 	cmplti	r3,r2,33
 40029d0:	1802f81e 	bne	r3,zero,40035b4 <_dtoa_r+0xd18>
 40029d4:	01001004 	movi	r4,64
 40029d8:	2085c83a 	sub	r2,r4,r2
 40029dc:	81010484 	addi	r4,r16,1042
 40029e0:	90a4983a 	sll	r18,r18,r2
 40029e4:	a108d83a 	srl	r4,r20,r4
 40029e8:	9108b03a 	or	r4,r18,r4
 40029ec:	400cae80 	call	400cae8 <__floatunsidf>
 40029f0:	1009883a 	mov	r4,r2
 40029f4:	017f8434 	movhi	r5,65040
 40029f8:	00800044 	movi	r2,1
 40029fc:	194b883a 	add	r5,r3,r5
 4002a00:	843fffc4 	addi	r16,r16,-1
 4002a04:	d8800915 	stw	r2,36(sp)
 4002a08:	000d883a 	mov	r6,zero
 4002a0c:	01cffe34 	movhi	r7,16376
 4002a10:	400c0240 	call	400c024 <__subdf3>
 4002a14:	0198dbf4 	movhi	r6,25455
 4002a18:	01cff4f4 	movhi	r7,16339
 4002a1c:	3190d844 	addi	r6,r6,17249
 4002a20:	39e1e9c4 	addi	r7,r7,-30809
 4002a24:	1009883a 	mov	r4,r2
 4002a28:	180b883a 	mov	r5,r3
 4002a2c:	400b9b40 	call	400b9b4 <__muldf3>
 4002a30:	01a2d874 	movhi	r6,35681
 4002a34:	01cff1f4 	movhi	r7,16327
 4002a38:	31b22cc4 	addi	r6,r6,-14157
 4002a3c:	39e28a04 	addi	r7,r7,-30168
 4002a40:	180b883a 	mov	r5,r3
 4002a44:	1009883a 	mov	r4,r2
 4002a48:	400a57c0 	call	400a57c <__adddf3>
 4002a4c:	8009883a 	mov	r4,r16
 4002a50:	1027883a 	mov	r19,r2
 4002a54:	1825883a 	mov	r18,r3
 4002a58:	400ca2c0 	call	400ca2c <__floatsidf>
 4002a5c:	019427f4 	movhi	r6,20639
 4002a60:	01cff4f4 	movhi	r7,16339
 4002a64:	319e7ec4 	addi	r6,r6,31227
 4002a68:	39d104c4 	addi	r7,r7,17427
 4002a6c:	1009883a 	mov	r4,r2
 4002a70:	180b883a 	mov	r5,r3
 4002a74:	400b9b40 	call	400b9b4 <__muldf3>
 4002a78:	100d883a 	mov	r6,r2
 4002a7c:	180f883a 	mov	r7,r3
 4002a80:	9809883a 	mov	r4,r19
 4002a84:	900b883a 	mov	r5,r18
 4002a88:	400a57c0 	call	400a57c <__adddf3>
 4002a8c:	1009883a 	mov	r4,r2
 4002a90:	180b883a 	mov	r5,r3
 4002a94:	1025883a 	mov	r18,r2
 4002a98:	182b883a 	mov	r21,r3
 4002a9c:	400c9ac0 	call	400c9ac <__fixdfsi>
 4002aa0:	000d883a 	mov	r6,zero
 4002aa4:	000f883a 	mov	r7,zero
 4002aa8:	9009883a 	mov	r4,r18
 4002aac:	a80b883a 	mov	r5,r21
 4002ab0:	1027883a 	mov	r19,r2
 4002ab4:	400b8c40 	call	400b8c4 <__ledf2>
 4002ab8:	1002a416 	blt	r2,zero,400354c <_dtoa_r+0xcb0>
 4002abc:	e439c83a 	sub	fp,fp,r16
 4002ac0:	e0ffffc4 	addi	r3,fp,-1
 4002ac4:	988005e8 	cmpgeui	r2,r19,23
 4002ac8:	d8c00215 	stw	r3,8(sp)
 4002acc:	1002961e 	bne	r2,zero,4003528 <_dtoa_r+0xc8c>
 4002ad0:	980690fa 	slli	r3,r19,3
 4002ad4:	00810074 	movhi	r2,1025
 4002ad8:	10be1704 	addi	r2,r2,-1956
 4002adc:	10c5883a 	add	r2,r2,r3
 4002ae0:	11800017 	ldw	r6,0(r2)
 4002ae4:	11c00117 	ldw	r7,4(r2)
 4002ae8:	a009883a 	mov	r4,r20
 4002aec:	880b883a 	mov	r5,r17
 4002af0:	400b8c40 	call	400b8c4 <__ledf2>
 4002af4:	1002670e 	bge	r2,zero,4003494 <_dtoa_r+0xbf8>
 4002af8:	d8000815 	stw	zero,32(sp)
 4002afc:	e0bfffc4 	addi	r2,fp,-1
 4002b00:	9cffffc4 	addi	r19,r19,-1
 4002b04:	10028c16 	blt	r2,zero,4003538 <_dtoa_r+0xc9c>
 4002b08:	d8000515 	stw	zero,20(sp)
 4002b0c:	9802650e 	bge	r19,zero,40034a4 <_dtoa_r+0xc08>
 4002b10:	d8800517 	ldw	r2,20(sp)
 4002b14:	d8c00117 	ldw	r3,4(sp)
 4002b18:	dcc00315 	stw	r19,12(sp)
 4002b1c:	14c5c83a 	sub	r2,r2,r19
 4002b20:	d8800515 	stw	r2,20(sp)
 4002b24:	04c5c83a 	sub	r2,zero,r19
 4002b28:	d8800715 	stw	r2,28(sp)
 4002b2c:	188002a8 	cmpgeui	r2,r3,10
 4002b30:	0027883a 	mov	r19,zero
 4002b34:	1002631e 	bne	r2,zero,40034c4 <_dtoa_r+0xc28>
 4002b38:	18800190 	cmplti	r2,r3,6
 4002b3c:	1002a11e 	bne	r2,zero,40035c4 <_dtoa_r+0xd28>
 4002b40:	18bfff04 	addi	r2,r3,-4
 4002b44:	d8800115 	stw	r2,4(sp)
 4002b48:	0021883a 	mov	r16,zero
 4002b4c:	d8c00117 	ldw	r3,4(sp)
 4002b50:	18800120 	cmpeqi	r2,r3,4
 4002b54:	1003721e 	bne	r2,zero,4003920 <_dtoa_r+0x1084>
 4002b58:	18800160 	cmpeqi	r2,r3,5
 4002b5c:	10032f1e 	bne	r2,zero,400381c <_dtoa_r+0xf80>
 4002b60:	188000a0 	cmpeqi	r2,r3,2
 4002b64:	10026326 	beq	r2,zero,40034f4 <_dtoa_r+0xc58>
 4002b68:	d8000615 	stw	zero,24(sp)
 4002b6c:	d8801e17 	ldw	r2,120(sp)
 4002b70:	00833c0e 	bge	zero,r2,4003864 <_dtoa_r+0xfc8>
 4002b74:	d8800b15 	stw	r2,44(sp)
 4002b78:	d8800415 	stw	r2,16(sp)
 4002b7c:	100d883a 	mov	r6,r2
 4002b80:	b8001115 	stw	zero,68(r23)
 4002b84:	30800610 	cmplti	r2,r6,24
 4002b88:	1005161e 	bne	r2,zero,4003fe4 <_dtoa_r+0x1748>
 4002b8c:	00c00044 	movi	r3,1
 4002b90:	00800104 	movi	r2,4
 4002b94:	1085883a 	add	r2,r2,r2
 4002b98:	11000504 	addi	r4,r2,20
 4002b9c:	180b883a 	mov	r5,r3
 4002ba0:	18c00044 	addi	r3,r3,1
 4002ba4:	313ffb2e 	bgeu	r6,r4,4002b94 <_dtoa_r+0x2f8>
 4002ba8:	b9401115 	stw	r5,68(r23)
 4002bac:	b809883a 	mov	r4,r23
 4002bb0:	40057d40 	call	40057d4 <_Balloc>
 4002bb4:	1039883a 	mov	fp,r2
 4002bb8:	1004f526 	beq	r2,zero,4003f90 <_dtoa_r+0x16f4>
 4002bbc:	b8801015 	stw	r2,64(r23)
 4002bc0:	d8800417 	ldw	r2,16(sp)
 4002bc4:	108003e8 	cmpgeui	r2,r2,15
 4002bc8:	10010b1e 	bne	r2,zero,4002ff8 <_dtoa_r+0x75c>
 4002bcc:	80010a26 	beq	r16,zero,4002ff8 <_dtoa_r+0x75c>
 4002bd0:	d9000317 	ldw	r4,12(sp)
 4002bd4:	0103a30e 	bge	zero,r4,4003a64 <_dtoa_r+0x11c8>
 4002bd8:	208003cc 	andi	r2,r4,15
 4002bdc:	100690fa 	slli	r3,r2,3
 4002be0:	202bd13a 	srai	r21,r4,4
 4002be4:	00810074 	movhi	r2,1025
 4002be8:	10be1704 	addi	r2,r2,-1956
 4002bec:	10c5883a 	add	r2,r2,r3
 4002bf0:	a8c0040c 	andi	r3,r21,16
 4002bf4:	12800017 	ldw	r10,0(r2)
 4002bf8:	12400117 	ldw	r9,4(r2)
 4002bfc:	18034226 	beq	r3,zero,4003908 <_dtoa_r+0x106c>
 4002c00:	00810074 	movhi	r2,1025
 4002c04:	10be0d04 	addi	r2,r2,-1996
 4002c08:	11800817 	ldw	r6,32(r2)
 4002c0c:	11c00917 	ldw	r7,36(r2)
 4002c10:	a009883a 	mov	r4,r20
 4002c14:	880b883a 	mov	r5,r17
 4002c18:	da400e15 	stw	r9,56(sp)
 4002c1c:	da800d15 	stw	r10,52(sp)
 4002c20:	400aef40 	call	400aef4 <__divdf3>
 4002c24:	da800d17 	ldw	r10,52(sp)
 4002c28:	da400e17 	ldw	r9,56(sp)
 4002c2c:	ad4003cc 	andi	r21,r21,15
 4002c30:	d8800a15 	stw	r2,40(sp)
 4002c34:	d8c00c15 	stw	r3,48(sp)
 4002c38:	040000c4 	movi	r16,3
 4002c3c:	a8001126 	beq	r21,zero,4002c84 <_dtoa_r+0x3e8>
 4002c40:	04810074 	movhi	r18,1025
 4002c44:	94be0d04 	addi	r18,r18,-1996
 4002c48:	5009883a 	mov	r4,r10
 4002c4c:	480b883a 	mov	r5,r9
 4002c50:	a980004c 	andi	r6,r21,1
 4002c54:	30000626 	beq	r6,zero,4002c70 <_dtoa_r+0x3d4>
 4002c58:	91800017 	ldw	r6,0(r18)
 4002c5c:	91c00117 	ldw	r7,4(r18)
 4002c60:	84000044 	addi	r16,r16,1
 4002c64:	400b9b40 	call	400b9b4 <__muldf3>
 4002c68:	1009883a 	mov	r4,r2
 4002c6c:	180b883a 	mov	r5,r3
 4002c70:	a82bd07a 	srai	r21,r21,1
 4002c74:	94800204 	addi	r18,r18,8
 4002c78:	a83ff51e 	bne	r21,zero,4002c50 <_dtoa_r+0x3b4>
 4002c7c:	2015883a 	mov	r10,r4
 4002c80:	2813883a 	mov	r9,r5
 4002c84:	d9000a17 	ldw	r4,40(sp)
 4002c88:	d9400c17 	ldw	r5,48(sp)
 4002c8c:	500d883a 	mov	r6,r10
 4002c90:	480f883a 	mov	r7,r9
 4002c94:	400aef40 	call	400aef4 <__divdf3>
 4002c98:	1025883a 	mov	r18,r2
 4002c9c:	d8c00a15 	stw	r3,40(sp)
 4002ca0:	d8800817 	ldw	r2,32(sp)
 4002ca4:	10000726 	beq	r2,zero,4002cc4 <_dtoa_r+0x428>
 4002ca8:	dd400a17 	ldw	r21,40(sp)
 4002cac:	000d883a 	mov	r6,zero
 4002cb0:	01cffc34 	movhi	r7,16368
 4002cb4:	9009883a 	mov	r4,r18
 4002cb8:	a80b883a 	mov	r5,r21
 4002cbc:	400b8c40 	call	400b8c4 <__ledf2>
 4002cc0:	10045516 	blt	r2,zero,4003e18 <_dtoa_r+0x157c>
 4002cc4:	8009883a 	mov	r4,r16
 4002cc8:	400ca2c0 	call	400ca2c <__floatsidf>
 4002ccc:	d9c00a17 	ldw	r7,40(sp)
 4002cd0:	900d883a 	mov	r6,r18
 4002cd4:	1009883a 	mov	r4,r2
 4002cd8:	180b883a 	mov	r5,r3
 4002cdc:	400b9b40 	call	400b9b4 <__muldf3>
 4002ce0:	000d883a 	mov	r6,zero
 4002ce4:	01d00734 	movhi	r7,16412
 4002ce8:	1009883a 	mov	r4,r2
 4002cec:	180b883a 	mov	r5,r3
 4002cf0:	400a57c0 	call	400a57c <__adddf3>
 4002cf4:	d8800c15 	stw	r2,48(sp)
 4002cf8:	00bf3034 	movhi	r2,64704
 4002cfc:	1885883a 	add	r2,r3,r2
 4002d00:	d8800d15 	stw	r2,52(sp)
 4002d04:	d8800417 	ldw	r2,16(sp)
 4002d08:	10033926 	beq	r2,zero,40039f0 <_dtoa_r+0x1154>
 4002d0c:	d8800317 	ldw	r2,12(sp)
 4002d10:	d8801115 	stw	r2,68(sp)
 4002d14:	d8800417 	ldw	r2,16(sp)
 4002d18:	d8800e15 	stw	r2,56(sp)
 4002d1c:	dc000a17 	ldw	r16,40(sp)
 4002d20:	9009883a 	mov	r4,r18
 4002d24:	800b883a 	mov	r5,r16
 4002d28:	400c9ac0 	call	400c9ac <__fixdfsi>
 4002d2c:	d8c00e17 	ldw	r3,56(sp)
 4002d30:	d8801015 	stw	r2,64(sp)
 4002d34:	18ffffc4 	addi	r3,r3,-1
 4002d38:	180890fa 	slli	r4,r3,3
 4002d3c:	00c10074 	movhi	r3,1025
 4002d40:	18fe1704 	addi	r3,r3,-1956
 4002d44:	1907883a 	add	r3,r3,r4
 4002d48:	1b000017 	ldw	r12,0(r3)
 4002d4c:	1b400117 	ldw	r13,4(r3)
 4002d50:	1009883a 	mov	r4,r2
 4002d54:	db000f15 	stw	r12,60(sp)
 4002d58:	db400a15 	stw	r13,40(sp)
 4002d5c:	400ca2c0 	call	400ca2c <__floatsidf>
 4002d60:	9009883a 	mov	r4,r18
 4002d64:	800b883a 	mov	r5,r16
 4002d68:	100d883a 	mov	r6,r2
 4002d6c:	180f883a 	mov	r7,r3
 4002d70:	400c0240 	call	400c024 <__subdf3>
 4002d74:	dac01017 	ldw	r11,64(sp)
 4002d78:	102b883a 	mov	r21,r2
 4002d7c:	d8800617 	ldw	r2,24(sp)
 4002d80:	db400a17 	ldw	r13,40(sp)
 4002d84:	db000f17 	ldw	r12,60(sp)
 4002d88:	e4000044 	addi	r16,fp,1
 4002d8c:	1825883a 	mov	r18,r3
 4002d90:	5ac00c04 	addi	r11,r11,48
 4002d94:	1003c626 	beq	r2,zero,4003cb0 <_dtoa_r+0x1414>
 4002d98:	600d883a 	mov	r6,r12
 4002d9c:	680f883a 	mov	r7,r13
 4002da0:	0009883a 	mov	r4,zero
 4002da4:	014ff834 	movhi	r5,16352
 4002da8:	dac00f15 	stw	r11,60(sp)
 4002dac:	400aef40 	call	400aef4 <__divdf3>
 4002db0:	d9800c17 	ldw	r6,48(sp)
 4002db4:	d9c00d17 	ldw	r7,52(sp)
 4002db8:	1009883a 	mov	r4,r2
 4002dbc:	180b883a 	mov	r5,r3
 4002dc0:	400c0240 	call	400c024 <__subdf3>
 4002dc4:	dac00f17 	ldw	r11,60(sp)
 4002dc8:	a80d883a 	mov	r6,r21
 4002dcc:	900f883a 	mov	r7,r18
 4002dd0:	e2c00005 	stb	r11,0(fp)
 4002dd4:	1009883a 	mov	r4,r2
 4002dd8:	180b883a 	mov	r5,r3
 4002ddc:	d8800a15 	stw	r2,40(sp)
 4002de0:	d8c00c15 	stw	r3,48(sp)
 4002de4:	400b7d40 	call	400b7d4 <__gedf2>
 4002de8:	00844116 	blt	zero,r2,4003ef0 <_dtoa_r+0x1654>
 4002dec:	0005883a 	mov	r2,zero
 4002df0:	dcc00f15 	stw	r19,60(sp)
 4002df4:	dd800d15 	stw	r22,52(sp)
 4002df8:	dcc00c17 	ldw	r19,48(sp)
 4002dfc:	dd800e17 	ldw	r22,56(sp)
 4002e00:	dc400c15 	stw	r17,48(sp)
 4002e04:	ddc00e15 	stw	r23,56(sp)
 4002e08:	dc400a17 	ldw	r17,40(sp)
 4002e0c:	dd000a15 	stw	r20,40(sp)
 4002e10:	1029883a 	mov	r20,r2
 4002e14:	00002606 	br	4002eb0 <_dtoa_r+0x614>
 4002e18:	a5000044 	addi	r20,r20,1
 4002e1c:	a5843d0e 	bge	r20,r22,4003f14 <_dtoa_r+0x1678>
 4002e20:	8809883a 	mov	r4,r17
 4002e24:	980b883a 	mov	r5,r19
 4002e28:	000d883a 	mov	r6,zero
 4002e2c:	01d00934 	movhi	r7,16420
 4002e30:	400b9b40 	call	400b9b4 <__muldf3>
 4002e34:	000d883a 	mov	r6,zero
 4002e38:	01d00934 	movhi	r7,16420
 4002e3c:	a809883a 	mov	r4,r21
 4002e40:	900b883a 	mov	r5,r18
 4002e44:	1023883a 	mov	r17,r2
 4002e48:	1827883a 	mov	r19,r3
 4002e4c:	400b9b40 	call	400b9b4 <__muldf3>
 4002e50:	180b883a 	mov	r5,r3
 4002e54:	1009883a 	mov	r4,r2
 4002e58:	1825883a 	mov	r18,r3
 4002e5c:	102b883a 	mov	r21,r2
 4002e60:	400c9ac0 	call	400c9ac <__fixdfsi>
 4002e64:	1009883a 	mov	r4,r2
 4002e68:	102f883a 	mov	r23,r2
 4002e6c:	400ca2c0 	call	400ca2c <__floatsidf>
 4002e70:	a809883a 	mov	r4,r21
 4002e74:	900b883a 	mov	r5,r18
 4002e78:	100d883a 	mov	r6,r2
 4002e7c:	180f883a 	mov	r7,r3
 4002e80:	400c0240 	call	400c024 <__subdf3>
 4002e84:	84000044 	addi	r16,r16,1
 4002e88:	ba000c04 	addi	r8,r23,48
 4002e8c:	823fffc5 	stb	r8,-1(r16)
 4002e90:	880d883a 	mov	r6,r17
 4002e94:	980f883a 	mov	r7,r19
 4002e98:	1009883a 	mov	r4,r2
 4002e9c:	180b883a 	mov	r5,r3
 4002ea0:	102b883a 	mov	r21,r2
 4002ea4:	1825883a 	mov	r18,r3
 4002ea8:	400b8c40 	call	400b8c4 <__ledf2>
 4002eac:	10040e16 	blt	r2,zero,4003ee8 <_dtoa_r+0x164c>
 4002eb0:	a80d883a 	mov	r6,r21
 4002eb4:	900f883a 	mov	r7,r18
 4002eb8:	0009883a 	mov	r4,zero
 4002ebc:	014ffc34 	movhi	r5,16368
 4002ec0:	400c0240 	call	400c024 <__subdf3>
 4002ec4:	880d883a 	mov	r6,r17
 4002ec8:	980f883a 	mov	r7,r19
 4002ecc:	1009883a 	mov	r4,r2
 4002ed0:	180b883a 	mov	r5,r3
 4002ed4:	400b8c40 	call	400b8c4 <__ledf2>
 4002ed8:	103fcf0e 	bge	r2,zero,4002e18 <_dtoa_r+0x57c>
 4002edc:	dd800d17 	ldw	r22,52(sp)
 4002ee0:	ddc00e17 	ldw	r23,56(sp)
 4002ee4:	d8801117 	ldw	r2,68(sp)
 4002ee8:	10800044 	addi	r2,r2,1
 4002eec:	d8800315 	stw	r2,12(sp)
 4002ef0:	00000106 	br	4002ef8 <_dtoa_r+0x65c>
 4002ef4:	e403ee26 	beq	fp,r16,4003eb0 <_dtoa_r+0x1614>
 4002ef8:	80ffffc3 	ldbu	r3,-1(r16)
 4002efc:	8025883a 	mov	r18,r16
 4002f00:	843fffc4 	addi	r16,r16,-1
 4002f04:	18803fcc 	andi	r2,r3,255
 4002f08:	1080201c 	xori	r2,r2,128
 4002f0c:	10bfe004 	addi	r2,r2,-128
 4002f10:	10800e60 	cmpeqi	r2,r2,57
 4002f14:	103ff71e 	bne	r2,zero,4002ef4 <_dtoa_r+0x658>
 4002f18:	18c00044 	addi	r3,r3,1
 4002f1c:	80c00005 	stb	r3,0(r16)
 4002f20:	00015106 	br	4003468 <_dtoa_r+0xbcc>
 4002f24:	04600034 	movhi	r17,32768
 4002f28:	8c7fffc4 	addi	r17,r17,-1
 4002f2c:	9462703a 	and	r17,r18,r17
 4002f30:	00800044 	movi	r2,1
 4002f34:	8825883a 	mov	r18,r17
 4002f38:	80800015 	stw	r2,0(r16)
 4002f3c:	00dffc34 	movhi	r3,32752
 4002f40:	909ffc2c 	andhi	r2,r18,32752
 4002f44:	10fe751e 	bne	r2,r3,400291c <_dtoa_r+0x80>
 4002f48:	d8c01f17 	ldw	r3,124(sp)
 4002f4c:	00800434 	movhi	r2,16
 4002f50:	10bfffc4 	addi	r2,r2,-1
 4002f54:	90a4703a 	and	r18,r18,r2
 4002f58:	0089c3c4 	movi	r2,9999
 4002f5c:	18800015 	stw	r2,0(r3)
 4002f60:	9528b03a 	or	r20,r18,r20
 4002f64:	a000121e 	bne	r20,zero,4002fb0 <_dtoa_r+0x714>
 4002f68:	d8802117 	ldw	r2,132(sp)
 4002f6c:	07010074 	movhi	fp,1025
 4002f70:	10041526 	beq	r2,zero,4003fc8 <_dtoa_r+0x172c>
 4002f74:	00810074 	movhi	r2,1025
 4002f78:	e73dda04 	addi	fp,fp,-2200
 4002f7c:	10bddc04 	addi	r2,r2,-2192
 4002f80:	d8c02117 	ldw	r3,132(sp)
 4002f84:	18800015 	stw	r2,0(r3)
 4002f88:	003e7506 	br	4002960 <_dtoa_r+0xc4>
 4002f8c:	01400434 	movhi	r5,16
 4002f90:	297fffc4 	addi	r5,r5,-1
 4002f94:	894a703a 	and	r5,r17,r5
 4002f98:	df001217 	ldw	fp,72(sp)
 4002f9c:	a009883a 	mov	r4,r20
 4002fa0:	294ffc34 	orhi	r5,r5,16368
 4002fa4:	843f0044 	addi	r16,r16,-1023
 4002fa8:	d8000915 	stw	zero,36(sp)
 4002fac:	003e9606 	br	4002a08 <_dtoa_r+0x16c>
 4002fb0:	d8802117 	ldw	r2,132(sp)
 4002fb4:	07010074 	movhi	fp,1025
 4002fb8:	1002141e 	bne	r2,zero,400380c <_dtoa_r+0xf70>
 4002fbc:	e73dd904 	addi	fp,fp,-2204
 4002fc0:	003e6706 	br	4002960 <_dtoa_r+0xc4>
 4002fc4:	b8001115 	stw	zero,68(r23)
 4002fc8:	000b883a 	mov	r5,zero
 4002fcc:	b809883a 	mov	r4,r23
 4002fd0:	40057d40 	call	40057d4 <_Balloc>
 4002fd4:	1039883a 	mov	fp,r2
 4002fd8:	1003ed26 	beq	r2,zero,4003f90 <_dtoa_r+0x16f4>
 4002fdc:	b8801015 	stw	r2,64(r23)
 4002fe0:	00bfffc4 	movi	r2,-1
 4002fe4:	d8800415 	stw	r2,16(sp)
 4002fe8:	d8800b15 	stw	r2,44(sp)
 4002fec:	00800044 	movi	r2,1
 4002ff0:	d8001e15 	stw	zero,120(sp)
 4002ff4:	d8800615 	stw	r2,24(sp)
 4002ff8:	d8801317 	ldw	r2,76(sp)
 4002ffc:	10007216 	blt	r2,zero,40031c8 <_dtoa_r+0x92c>
 4003000:	d9000317 	ldw	r4,12(sp)
 4003004:	20c003c8 	cmpgei	r3,r4,15
 4003008:	18006f1e 	bne	r3,zero,40031c8 <_dtoa_r+0x92c>
 400300c:	200690fa 	slli	r3,r4,3
 4003010:	00810074 	movhi	r2,1025
 4003014:	10be1704 	addi	r2,r2,-1956
 4003018:	10c5883a 	add	r2,r2,r3
 400301c:	10c00017 	ldw	r3,0(r2)
 4003020:	14800117 	ldw	r18,4(r2)
 4003024:	d8801e17 	ldw	r2,120(sp)
 4003028:	d8c00115 	stw	r3,4(sp)
 400302c:	1000150e 	bge	r2,zero,4003084 <_dtoa_r+0x7e8>
 4003030:	d8800417 	ldw	r2,16(sp)
 4003034:	00801316 	blt	zero,r2,4003084 <_dtoa_r+0x7e8>
 4003038:	d8800417 	ldw	r2,16(sp)
 400303c:	1002801e 	bne	r2,zero,4003a40 <_dtoa_r+0x11a4>
 4003040:	d9000117 	ldw	r4,4(sp)
 4003044:	000d883a 	mov	r6,zero
 4003048:	01d00534 	movhi	r7,16404
 400304c:	900b883a 	mov	r5,r18
 4003050:	400b9b40 	call	400b9b4 <__muldf3>
 4003054:	100d883a 	mov	r6,r2
 4003058:	180f883a 	mov	r7,r3
 400305c:	a009883a 	mov	r4,r20
 4003060:	880b883a 	mov	r5,r17
 4003064:	400b8c40 	call	400b8c4 <__ledf2>
 4003068:	002b883a 	mov	r21,zero
 400306c:	0021883a 	mov	r16,zero
 4003070:	00820f16 	blt	zero,r2,40038b0 <_dtoa_r+0x1014>
 4003074:	d8801e17 	ldw	r2,120(sp)
 4003078:	e025883a 	mov	r18,fp
 400307c:	00a2303a 	nor	r17,zero,r2
 4003080:	00021006 	br	40038c4 <_dtoa_r+0x1028>
 4003084:	dd400117 	ldw	r21,4(sp)
 4003088:	900f883a 	mov	r7,r18
 400308c:	a009883a 	mov	r4,r20
 4003090:	a80d883a 	mov	r6,r21
 4003094:	880b883a 	mov	r5,r17
 4003098:	400aef40 	call	400aef4 <__divdf3>
 400309c:	180b883a 	mov	r5,r3
 40030a0:	1009883a 	mov	r4,r2
 40030a4:	400c9ac0 	call	400c9ac <__fixdfsi>
 40030a8:	1009883a 	mov	r4,r2
 40030ac:	1027883a 	mov	r19,r2
 40030b0:	400ca2c0 	call	400ca2c <__floatsidf>
 40030b4:	a80d883a 	mov	r6,r21
 40030b8:	900f883a 	mov	r7,r18
 40030bc:	1009883a 	mov	r4,r2
 40030c0:	180b883a 	mov	r5,r3
 40030c4:	400b9b40 	call	400b9b4 <__muldf3>
 40030c8:	100d883a 	mov	r6,r2
 40030cc:	a009883a 	mov	r4,r20
 40030d0:	880b883a 	mov	r5,r17
 40030d4:	180f883a 	mov	r7,r3
 40030d8:	400c0240 	call	400c024 <__subdf3>
 40030dc:	d9800417 	ldw	r6,16(sp)
 40030e0:	1009883a 	mov	r4,r2
 40030e4:	98800c04 	addi	r2,r19,48
 40030e8:	e0800005 	stb	r2,0(fp)
 40030ec:	30800060 	cmpeqi	r2,r6,1
 40030f0:	180b883a 	mov	r5,r3
 40030f4:	e4000044 	addi	r16,fp,1
 40030f8:	1002a91e 	bne	r2,zero,4003ba0 <_dtoa_r+0x1304>
 40030fc:	04400044 	movi	r17,1
 4003100:	3027883a 	mov	r19,r6
 4003104:	dd800215 	stw	r22,8(sp)
 4003108:	ddc00415 	stw	r23,16(sp)
 400310c:	00001c06 	br	4003180 <_dtoa_r+0x8e4>
 4003110:	a80d883a 	mov	r6,r21
 4003114:	900f883a 	mov	r7,r18
 4003118:	b809883a 	mov	r4,r23
 400311c:	a00b883a 	mov	r5,r20
 4003120:	400aef40 	call	400aef4 <__divdf3>
 4003124:	180b883a 	mov	r5,r3
 4003128:	1009883a 	mov	r4,r2
 400312c:	400c9ac0 	call	400c9ac <__fixdfsi>
 4003130:	1009883a 	mov	r4,r2
 4003134:	102d883a 	mov	r22,r2
 4003138:	400ca2c0 	call	400ca2c <__floatsidf>
 400313c:	a80d883a 	mov	r6,r21
 4003140:	900f883a 	mov	r7,r18
 4003144:	1009883a 	mov	r4,r2
 4003148:	180b883a 	mov	r5,r3
 400314c:	400b9b40 	call	400b9b4 <__muldf3>
 4003150:	b809883a 	mov	r4,r23
 4003154:	a00b883a 	mov	r5,r20
 4003158:	100d883a 	mov	r6,r2
 400315c:	180f883a 	mov	r7,r3
 4003160:	400c0240 	call	400c024 <__subdf3>
 4003164:	b1000c04 	addi	r4,r22,48
 4003168:	81000005 	stb	r4,0(r16)
 400316c:	8c400044 	addi	r17,r17,1
 4003170:	84000044 	addi	r16,r16,1
 4003174:	1009883a 	mov	r4,r2
 4003178:	180b883a 	mov	r5,r3
 400317c:	9c428526 	beq	r19,r17,4003b94 <_dtoa_r+0x12f8>
 4003180:	000d883a 	mov	r6,zero
 4003184:	01d00934 	movhi	r7,16420
 4003188:	400b9b40 	call	400b9b4 <__muldf3>
 400318c:	000d883a 	mov	r6,zero
 4003190:	000f883a 	mov	r7,zero
 4003194:	1009883a 	mov	r4,r2
 4003198:	180b883a 	mov	r5,r3
 400319c:	102f883a 	mov	r23,r2
 40031a0:	1829883a 	mov	r20,r3
 40031a4:	400b7540 	call	400b754 <__eqdf2>
 40031a8:	103fd91e 	bne	r2,zero,4003110 <_dtoa_r+0x874>
 40031ac:	d8800317 	ldw	r2,12(sp)
 40031b0:	dd800217 	ldw	r22,8(sp)
 40031b4:	ddc00417 	ldw	r23,16(sp)
 40031b8:	10800044 	addi	r2,r2,1
 40031bc:	d8800315 	stw	r2,12(sp)
 40031c0:	8025883a 	mov	r18,r16
 40031c4:	0000a806 	br	4003468 <_dtoa_r+0xbcc>
 40031c8:	d8c00617 	ldw	r3,24(sp)
 40031cc:	1800ec26 	beq	r3,zero,4003580 <_dtoa_r+0xce4>
 40031d0:	d8c00117 	ldw	r3,4(sp)
 40031d4:	18c00088 	cmpgei	r3,r3,2
 40031d8:	1801e926 	beq	r3,zero,4003980 <_dtoa_r+0x10e4>
 40031dc:	d8800417 	ldw	r2,16(sp)
 40031e0:	157fffc4 	addi	r21,r2,-1
 40031e4:	d8800717 	ldw	r2,28(sp)
 40031e8:	1541c50e 	bge	r2,r21,4003900 <_dtoa_r+0x1064>
 40031ec:	d8800717 	ldw	r2,28(sp)
 40031f0:	dd400715 	stw	r21,28(sp)
 40031f4:	a885c83a 	sub	r2,r21,r2
 40031f8:	98a7883a 	add	r19,r19,r2
 40031fc:	002b883a 	mov	r21,zero
 4003200:	d8800417 	ldw	r2,16(sp)
 4003204:	10029516 	blt	r2,zero,4003c5c <_dtoa_r+0x13c0>
 4003208:	d8c00517 	ldw	r3,20(sp)
 400320c:	d9000217 	ldw	r4,8(sp)
 4003210:	1825883a 	mov	r18,r3
 4003214:	2089883a 	add	r4,r4,r2
 4003218:	10c5883a 	add	r2,r2,r3
 400321c:	d9000215 	stw	r4,8(sp)
 4003220:	d8800515 	stw	r2,20(sp)
 4003224:	01400044 	movi	r5,1
 4003228:	b809883a 	mov	r4,r23
 400322c:	4005c200 	call	4005c20 <__i2b>
 4003230:	1021883a 	mov	r16,r2
 4003234:	04800b0e 	bge	zero,r18,4003264 <_dtoa_r+0x9c8>
 4003238:	d8c00217 	ldw	r3,8(sp)
 400323c:	00c0090e 	bge	zero,r3,4003264 <_dtoa_r+0x9c8>
 4003240:	9005883a 	mov	r2,r18
 4003244:	1c81a616 	blt	r3,r18,40038e0 <_dtoa_r+0x1044>
 4003248:	d8c00517 	ldw	r3,20(sp)
 400324c:	90a5c83a 	sub	r18,r18,r2
 4003250:	1887c83a 	sub	r3,r3,r2
 4003254:	d8c00515 	stw	r3,20(sp)
 4003258:	d8c00217 	ldw	r3,8(sp)
 400325c:	1885c83a 	sub	r2,r3,r2
 4003260:	d8800215 	stw	r2,8(sp)
 4003264:	d8800717 	ldw	r2,28(sp)
 4003268:	10001526 	beq	r2,zero,40032c0 <_dtoa_r+0xa24>
 400326c:	d8800617 	ldw	r2,24(sp)
 4003270:	1001f626 	beq	r2,zero,4003a4c <_dtoa_r+0x11b0>
 4003274:	05400f0e 	bge	zero,r21,40032b4 <_dtoa_r+0xa18>
 4003278:	800b883a 	mov	r5,r16
 400327c:	a80d883a 	mov	r6,r21
 4003280:	b809883a 	mov	r4,r23
 4003284:	4005ea40 	call	4005ea4 <__pow5mult>
 4003288:	b00d883a 	mov	r6,r22
 400328c:	100b883a 	mov	r5,r2
 4003290:	b809883a 	mov	r4,r23
 4003294:	1021883a 	mov	r16,r2
 4003298:	4005c740 	call	4005c74 <__multiply>
 400329c:	b00b883a 	mov	r5,r22
 40032a0:	b809883a 	mov	r4,r23
 40032a4:	d8800915 	stw	r2,36(sp)
 40032a8:	40058780 	call	4005878 <_Bfree>
 40032ac:	d8800917 	ldw	r2,36(sp)
 40032b0:	102d883a 	mov	r22,r2
 40032b4:	d8800717 	ldw	r2,28(sp)
 40032b8:	154dc83a 	sub	r6,r2,r21
 40032bc:	1542621e 	bne	r2,r21,4003c48 <_dtoa_r+0x13ac>
 40032c0:	01400044 	movi	r5,1
 40032c4:	b809883a 	mov	r4,r23
 40032c8:	4005c200 	call	4005c20 <__i2b>
 40032cc:	102b883a 	mov	r21,r2
 40032d0:	04c0be16 	blt	zero,r19,40035cc <_dtoa_r+0xd30>
 40032d4:	d8800117 	ldw	r2,4(sp)
 40032d8:	10800088 	cmpgei	r2,r2,2
 40032dc:	10015226 	beq	r2,zero,4003828 <_dtoa_r+0xf8c>
 40032e0:	0023883a 	mov	r17,zero
 40032e4:	00800044 	movi	r2,1
 40032e8:	9800c11e 	bne	r19,zero,40035f0 <_dtoa_r+0xd54>
 40032ec:	d9400217 	ldw	r5,8(sp)
 40032f0:	1145883a 	add	r2,r2,r5
 40032f4:	108007cc 	andi	r2,r2,31
 40032f8:	1000a526 	beq	r2,zero,4003590 <_dtoa_r+0xcf4>
 40032fc:	00c00804 	movi	r3,32
 4003300:	1887c83a 	sub	r3,r3,r2
 4003304:	19000150 	cmplti	r4,r3,5
 4003308:	2003311e 	bne	r4,zero,4003fd0 <_dtoa_r+0x1734>
 400330c:	00c00704 	movi	r3,28
 4003310:	1885c83a 	sub	r2,r3,r2
 4003314:	d8c00517 	ldw	r3,20(sp)
 4003318:	90a5883a 	add	r18,r18,r2
 400331c:	1887883a 	add	r3,r3,r2
 4003320:	2885883a 	add	r2,r5,r2
 4003324:	d8c00515 	stw	r3,20(sp)
 4003328:	d8800215 	stw	r2,8(sp)
 400332c:	d8800517 	ldw	r2,20(sp)
 4003330:	0080050e 	bge	zero,r2,4003348 <_dtoa_r+0xaac>
 4003334:	b00b883a 	mov	r5,r22
 4003338:	100d883a 	mov	r6,r2
 400333c:	b809883a 	mov	r4,r23
 4003340:	4005fbc0 	call	4005fbc <__lshift>
 4003344:	102d883a 	mov	r22,r2
 4003348:	d8800217 	ldw	r2,8(sp)
 400334c:	0080050e 	bge	zero,r2,4003364 <_dtoa_r+0xac8>
 4003350:	a80b883a 	mov	r5,r21
 4003354:	100d883a 	mov	r6,r2
 4003358:	b809883a 	mov	r4,r23
 400335c:	4005fbc0 	call	4005fbc <__lshift>
 4003360:	102b883a 	mov	r21,r2
 4003364:	d8800817 	ldw	r2,32(sp)
 4003368:	1001161e 	bne	r2,zero,40037c4 <_dtoa_r+0xf28>
 400336c:	d8800417 	ldw	r2,16(sp)
 4003370:	0081040e 	bge	zero,r2,4003784 <_dtoa_r+0xee8>
 4003374:	d8800617 	ldw	r2,24(sp)
 4003378:	1000b01e 	bne	r2,zero,400363c <_dtoa_r+0xda0>
 400337c:	d8800317 	ldw	r2,12(sp)
 4003380:	10800044 	addi	r2,r2,1
 4003384:	d8800315 	stw	r2,12(sp)
 4003388:	dc800417 	ldw	r18,16(sp)
 400338c:	04400044 	movi	r17,1
 4003390:	00000706 	br	40033b0 <_dtoa_r+0xb14>
 4003394:	b00b883a 	mov	r5,r22
 4003398:	000f883a 	mov	r7,zero
 400339c:	01800284 	movi	r6,10
 40033a0:	b809883a 	mov	r4,r23
 40033a4:	400589c0 	call	400589c <__multadd>
 40033a8:	102d883a 	mov	r22,r2
 40033ac:	8c400044 	addi	r17,r17,1
 40033b0:	a80b883a 	mov	r5,r21
 40033b4:	b009883a 	mov	r4,r22
 40033b8:	40026a00 	call	40026a0 <quorem>
 40033bc:	10c00c04 	addi	r3,r2,48
 40033c0:	e445883a 	add	r2,fp,r17
 40033c4:	10ffffc5 	stb	r3,-1(r2)
 40033c8:	8cbff216 	blt	r17,r18,4003394 <_dtoa_r+0xaf8>
 40033cc:	d8800417 	ldw	r2,16(sp)
 40033d0:	0081510e 	bge	zero,r2,4003918 <_dtoa_r+0x107c>
 40033d4:	e0a5883a 	add	r18,fp,r2
 40033d8:	0023883a 	mov	r17,zero
 40033dc:	b00b883a 	mov	r5,r22
 40033e0:	01800044 	movi	r6,1
 40033e4:	b809883a 	mov	r4,r23
 40033e8:	d8c00115 	stw	r3,4(sp)
 40033ec:	4005fbc0 	call	4005fbc <__lshift>
 40033f0:	1009883a 	mov	r4,r2
 40033f4:	a80b883a 	mov	r5,r21
 40033f8:	102d883a 	mov	r22,r2
 40033fc:	40061440 	call	4006144 <__mcmp>
 4003400:	913fffc3 	ldbu	r4,-1(r18)
 4003404:	00800416 	blt	zero,r2,4003418 <_dtoa_r+0xb7c>
 4003408:	00014806 	br	400392c <_dtoa_r+0x1090>
 400340c:	e0c15626 	beq	fp,r3,4003968 <_dtoa_r+0x10cc>
 4003410:	193fffc3 	ldbu	r4,-1(r3)
 4003414:	1825883a 	mov	r18,r3
 4003418:	20803fcc 	andi	r2,r4,255
 400341c:	1080201c 	xori	r2,r2,128
 4003420:	10bfe004 	addi	r2,r2,-128
 4003424:	10800e60 	cmpeqi	r2,r2,57
 4003428:	90ffffc4 	addi	r3,r18,-1
 400342c:	103ff71e 	bne	r2,zero,400340c <_dtoa_r+0xb70>
 4003430:	21000044 	addi	r4,r4,1
 4003434:	19000005 	stb	r4,0(r3)
 4003438:	a80b883a 	mov	r5,r21
 400343c:	b809883a 	mov	r4,r23
 4003440:	40058780 	call	4005878 <_Bfree>
 4003444:	80000826 	beq	r16,zero,4003468 <_dtoa_r+0xbcc>
 4003448:	88000426 	beq	r17,zero,400345c <_dtoa_r+0xbc0>
 400344c:	8c000326 	beq	r17,r16,400345c <_dtoa_r+0xbc0>
 4003450:	880b883a 	mov	r5,r17
 4003454:	b809883a 	mov	r4,r23
 4003458:	40058780 	call	4005878 <_Bfree>
 400345c:	800b883a 	mov	r5,r16
 4003460:	b809883a 	mov	r4,r23
 4003464:	40058780 	call	4005878 <_Bfree>
 4003468:	b00b883a 	mov	r5,r22
 400346c:	b809883a 	mov	r4,r23
 4003470:	40058780 	call	4005878 <_Bfree>
 4003474:	d8801f17 	ldw	r2,124(sp)
 4003478:	d8c00317 	ldw	r3,12(sp)
 400347c:	90000005 	stb	zero,0(r18)
 4003480:	10c00015 	stw	r3,0(r2)
 4003484:	d8802117 	ldw	r2,132(sp)
 4003488:	103d3526 	beq	r2,zero,4002960 <_dtoa_r+0xc4>
 400348c:	14800015 	stw	r18,0(r2)
 4003490:	003d3306 	br	4002960 <_dtoa_r+0xc4>
 4003494:	e0bfffc4 	addi	r2,fp,-1
 4003498:	d8000815 	stw	zero,32(sp)
 400349c:	10002616 	blt	r2,zero,4003538 <_dtoa_r+0xc9c>
 40034a0:	d8000515 	stw	zero,20(sp)
 40034a4:	d8800217 	ldw	r2,8(sp)
 40034a8:	d8c00117 	ldw	r3,4(sp)
 40034ac:	dcc00315 	stw	r19,12(sp)
 40034b0:	14c5883a 	add	r2,r2,r19
 40034b4:	d8800215 	stw	r2,8(sp)
 40034b8:	d8000715 	stw	zero,28(sp)
 40034bc:	188002a8 	cmpgeui	r2,r3,10
 40034c0:	103d9d26 	beq	r2,zero,4002b38 <_dtoa_r+0x29c>
 40034c4:	00800044 	movi	r2,1
 40034c8:	d8800615 	stw	r2,24(sp)
 40034cc:	00bfffc4 	movi	r2,-1
 40034d0:	04000044 	movi	r16,1
 40034d4:	d8000115 	stw	zero,4(sp)
 40034d8:	d8800415 	stw	r2,16(sp)
 40034dc:	d8001e15 	stw	zero,120(sp)
 40034e0:	d8800417 	ldw	r2,16(sp)
 40034e4:	b8001115 	stw	zero,68(r23)
 40034e8:	000b883a 	mov	r5,zero
 40034ec:	d8800b15 	stw	r2,44(sp)
 40034f0:	003dae06 	br	4002bac <_dtoa_r+0x310>
 40034f4:	188000e0 	cmpeqi	r2,r3,3
 40034f8:	d8000615 	stw	zero,24(sp)
 40034fc:	103eb126 	beq	r2,zero,4002fc4 <_dtoa_r+0x728>
 4003500:	d8801e17 	ldw	r2,120(sp)
 4003504:	d8c00317 	ldw	r3,12(sp)
 4003508:	10c5883a 	add	r2,r2,r3
 400350c:	d8800b15 	stw	r2,44(sp)
 4003510:	10800044 	addi	r2,r2,1
 4003514:	d8800415 	stw	r2,16(sp)
 4003518:	100d883a 	mov	r6,r2
 400351c:	00bd9816 	blt	zero,r2,4002b80 <_dtoa_r+0x2e4>
 4003520:	01800044 	movi	r6,1
 4003524:	003d9606 	br	4002b80 <_dtoa_r+0x2e4>
 4003528:	00800044 	movi	r2,1
 400352c:	d8800815 	stw	r2,32(sp)
 4003530:	e0bfffc4 	addi	r2,fp,-1
 4003534:	103d740e 	bge	r2,zero,4002b08 <_dtoa_r+0x26c>
 4003538:	00800044 	movi	r2,1
 400353c:	1705c83a 	sub	r2,r2,fp
 4003540:	d8800515 	stw	r2,20(sp)
 4003544:	d8000215 	stw	zero,8(sp)
 4003548:	003d7006 	br	4002b0c <_dtoa_r+0x270>
 400354c:	9809883a 	mov	r4,r19
 4003550:	400ca2c0 	call	400ca2c <__floatsidf>
 4003554:	900d883a 	mov	r6,r18
 4003558:	a80f883a 	mov	r7,r21
 400355c:	1009883a 	mov	r4,r2
 4003560:	180b883a 	mov	r5,r3
 4003564:	400b7540 	call	400b754 <__eqdf2>
 4003568:	103d5426 	beq	r2,zero,4002abc <_dtoa_r+0x220>
 400356c:	9cffffc4 	addi	r19,r19,-1
 4003570:	003d5206 	br	4002abc <_dtoa_r+0x220>
 4003574:	07010074 	movhi	fp,1025
 4003578:	e73dd004 	addi	fp,fp,-2240
 400357c:	003cf806 	br	4002960 <_dtoa_r+0xc4>
 4003580:	dd400717 	ldw	r21,28(sp)
 4003584:	dc800517 	ldw	r18,20(sp)
 4003588:	0021883a 	mov	r16,zero
 400358c:	003f2906 	br	4003234 <_dtoa_r+0x998>
 4003590:	00800704 	movi	r2,28
 4003594:	d8c00517 	ldw	r3,20(sp)
 4003598:	90a5883a 	add	r18,r18,r2
 400359c:	1887883a 	add	r3,r3,r2
 40035a0:	d8c00515 	stw	r3,20(sp)
 40035a4:	d8c00217 	ldw	r3,8(sp)
 40035a8:	1885883a 	add	r2,r3,r2
 40035ac:	d8800215 	stw	r2,8(sp)
 40035b0:	003f5e06 	br	400332c <_dtoa_r+0xa90>
 40035b4:	01000804 	movi	r4,32
 40035b8:	2089c83a 	sub	r4,r4,r2
 40035bc:	a108983a 	sll	r4,r20,r4
 40035c0:	003d0a06 	br	40029ec <_dtoa_r+0x150>
 40035c4:	04000044 	movi	r16,1
 40035c8:	003d6006 	br	4002b4c <_dtoa_r+0x2b0>
 40035cc:	100b883a 	mov	r5,r2
 40035d0:	980d883a 	mov	r6,r19
 40035d4:	b809883a 	mov	r4,r23
 40035d8:	4005ea40 	call	4005ea4 <__pow5mult>
 40035dc:	d8c00117 	ldw	r3,4(sp)
 40035e0:	102b883a 	mov	r21,r2
 40035e4:	18c00090 	cmplti	r3,r3,2
 40035e8:	18014b1e 	bne	r3,zero,4003b18 <_dtoa_r+0x127c>
 40035ec:	0023883a 	mov	r17,zero
 40035f0:	a8800417 	ldw	r2,16(r21)
 40035f4:	10800104 	addi	r2,r2,4
 40035f8:	100490ba 	slli	r2,r2,2
 40035fc:	a885883a 	add	r2,r21,r2
 4003600:	11000017 	ldw	r4,0(r2)
 4003604:	4005b0c0 	call	4005b0c <__hi0bits>
 4003608:	00c00804 	movi	r3,32
 400360c:	1885c83a 	sub	r2,r3,r2
 4003610:	003f3606 	br	40032ec <_dtoa_r+0xa50>
 4003614:	800b883a 	mov	r5,r16
 4003618:	000f883a 	mov	r7,zero
 400361c:	01800284 	movi	r6,10
 4003620:	b809883a 	mov	r4,r23
 4003624:	400589c0 	call	400589c <__multadd>
 4003628:	1021883a 	mov	r16,r2
 400362c:	d8800b17 	ldw	r2,44(sp)
 4003630:	00824d0e 	bge	zero,r2,4003f68 <_dtoa_r+0x16cc>
 4003634:	dcc00315 	stw	r19,12(sp)
 4003638:	d8800415 	stw	r2,16(sp)
 400363c:	0480aa16 	blt	zero,r18,40038e8 <_dtoa_r+0x104c>
 4003640:	8801701e 	bne	r17,zero,4003c04 <_dtoa_r+0x1368>
 4003644:	8027883a 	mov	r19,r16
 4003648:	d9000417 	ldw	r4,16(sp)
 400364c:	e0bfffc4 	addi	r2,fp,-1
 4003650:	a0c0004c 	andi	r3,r20,1
 4003654:	1105883a 	add	r2,r2,r4
 4003658:	d8800415 	stw	r2,16(sp)
 400365c:	d8800117 	ldw	r2,4(sp)
 4003660:	d8c00715 	stw	r3,28(sp)
 4003664:	e029883a 	mov	r20,fp
 4003668:	1884b03a 	or	r2,r3,r2
 400366c:	d8800615 	stw	r2,24(sp)
 4003670:	df000815 	stw	fp,32(sp)
 4003674:	00002906 	br	400371c <_dtoa_r+0xe80>
 4003678:	b009883a 	mov	r4,r22
 400367c:	40061440 	call	4006144 <__mcmp>
 4003680:	900b883a 	mov	r5,r18
 4003684:	b809883a 	mov	r4,r23
 4003688:	d8800215 	stw	r2,8(sp)
 400368c:	40058780 	call	4005878 <_Bfree>
 4003690:	d8800217 	ldw	r2,8(sp)
 4003694:	1000021e 	bne	r2,zero,40036a0 <_dtoa_r+0xe04>
 4003698:	d8c00617 	ldw	r3,24(sp)
 400369c:	18022326 	beq	r3,zero,4003f2c <_dtoa_r+0x1690>
 40036a0:	a4800044 	addi	r18,r20,1
 40036a4:	88012216 	blt	r17,zero,4003b30 <_dtoa_r+0x1294>
 40036a8:	d8c00117 	ldw	r3,4(sp)
 40036ac:	1c62b03a 	or	r17,r3,r17
 40036b0:	d8c00717 	ldw	r3,28(sp)
 40036b4:	1c62b03a 	or	r17,r3,r17
 40036b8:	88011d26 	beq	r17,zero,4003b30 <_dtoa_r+0x1294>
 40036bc:	00816b16 	blt	zero,r2,4003c6c <_dtoa_r+0x13d0>
 40036c0:	d8800417 	ldw	r2,16(sp)
 40036c4:	a7000005 	stb	fp,0(r20)
 40036c8:	15017126 	beq	r2,r20,4003c90 <_dtoa_r+0x13f4>
 40036cc:	b00b883a 	mov	r5,r22
 40036d0:	000f883a 	mov	r7,zero
 40036d4:	01800284 	movi	r6,10
 40036d8:	b809883a 	mov	r4,r23
 40036dc:	400589c0 	call	400589c <__multadd>
 40036e0:	102d883a 	mov	r22,r2
 40036e4:	800b883a 	mov	r5,r16
 40036e8:	000f883a 	mov	r7,zero
 40036ec:	01800284 	movi	r6,10
 40036f0:	b809883a 	mov	r4,r23
 40036f4:	84c01f26 	beq	r16,r19,4003774 <_dtoa_r+0xed8>
 40036f8:	400589c0 	call	400589c <__multadd>
 40036fc:	980b883a 	mov	r5,r19
 4003700:	000f883a 	mov	r7,zero
 4003704:	01800284 	movi	r6,10
 4003708:	b809883a 	mov	r4,r23
 400370c:	1021883a 	mov	r16,r2
 4003710:	400589c0 	call	400589c <__multadd>
 4003714:	1027883a 	mov	r19,r2
 4003718:	9029883a 	mov	r20,r18
 400371c:	a80b883a 	mov	r5,r21
 4003720:	b009883a 	mov	r4,r22
 4003724:	40026a00 	call	40026a0 <quorem>
 4003728:	800b883a 	mov	r5,r16
 400372c:	b009883a 	mov	r4,r22
 4003730:	1039883a 	mov	fp,r2
 4003734:	d8800515 	stw	r2,20(sp)
 4003738:	40061440 	call	4006144 <__mcmp>
 400373c:	a80b883a 	mov	r5,r21
 4003740:	980d883a 	mov	r6,r19
 4003744:	b809883a 	mov	r4,r23
 4003748:	1023883a 	mov	r17,r2
 400374c:	400619c0 	call	400619c <__mdiff>
 4003750:	1025883a 	mov	r18,r2
 4003754:	10800317 	ldw	r2,12(r2)
 4003758:	e7000c04 	addi	fp,fp,48
 400375c:	900b883a 	mov	r5,r18
 4003760:	103fc526 	beq	r2,zero,4003678 <_dtoa_r+0xddc>
 4003764:	b809883a 	mov	r4,r23
 4003768:	40058780 	call	4005878 <_Bfree>
 400376c:	00800044 	movi	r2,1
 4003770:	003fcb06 	br	40036a0 <_dtoa_r+0xe04>
 4003774:	400589c0 	call	400589c <__multadd>
 4003778:	1021883a 	mov	r16,r2
 400377c:	1027883a 	mov	r19,r2
 4003780:	003fe506 	br	4003718 <_dtoa_r+0xe7c>
 4003784:	d8800117 	ldw	r2,4(sp)
 4003788:	108000d0 	cmplti	r2,r2,3
 400378c:	10003c26 	beq	r2,zero,4003880 <_dtoa_r+0xfe4>
 4003790:	d8800617 	ldw	r2,24(sp)
 4003794:	103fa91e 	bne	r2,zero,400363c <_dtoa_r+0xda0>
 4003798:	a80b883a 	mov	r5,r21
 400379c:	b009883a 	mov	r4,r22
 40037a0:	40026a00 	call	40026a0 <quorem>
 40037a4:	10c00c04 	addi	r3,r2,48
 40037a8:	d8800317 	ldw	r2,12(sp)
 40037ac:	e4800044 	addi	r18,fp,1
 40037b0:	e0c00005 	stb	r3,0(fp)
 40037b4:	10800044 	addi	r2,r2,1
 40037b8:	d8800315 	stw	r2,12(sp)
 40037bc:	0023883a 	mov	r17,zero
 40037c0:	003f0606 	br	40033dc <_dtoa_r+0xb40>
 40037c4:	a80b883a 	mov	r5,r21
 40037c8:	b009883a 	mov	r4,r22
 40037cc:	40061440 	call	4006144 <__mcmp>
 40037d0:	103ee60e 	bge	r2,zero,400336c <_dtoa_r+0xad0>
 40037d4:	b00b883a 	mov	r5,r22
 40037d8:	000f883a 	mov	r7,zero
 40037dc:	01800284 	movi	r6,10
 40037e0:	b809883a 	mov	r4,r23
 40037e4:	400589c0 	call	400589c <__multadd>
 40037e8:	d8c00317 	ldw	r3,12(sp)
 40037ec:	102d883a 	mov	r22,r2
 40037f0:	d8800617 	ldw	r2,24(sp)
 40037f4:	1cffffc4 	addi	r19,r3,-1
 40037f8:	103f861e 	bne	r2,zero,4003614 <_dtoa_r+0xd78>
 40037fc:	d8800b17 	ldw	r2,44(sp)
 4003800:	0081d40e 	bge	zero,r2,4003f54 <_dtoa_r+0x16b8>
 4003804:	d8800415 	stw	r2,16(sp)
 4003808:	003edf06 	br	4003388 <_dtoa_r+0xaec>
 400380c:	00810074 	movhi	r2,1025
 4003810:	e73dd904 	addi	fp,fp,-2204
 4003814:	10bdd9c4 	addi	r2,r2,-2201
 4003818:	003dd906 	br	4002f80 <_dtoa_r+0x6e4>
 400381c:	00800044 	movi	r2,1
 4003820:	d8800615 	stw	r2,24(sp)
 4003824:	003f3606 	br	4003500 <_dtoa_r+0xc64>
 4003828:	a03ead1e 	bne	r20,zero,40032e0 <_dtoa_r+0xa44>
 400382c:	00800434 	movhi	r2,16
 4003830:	10bfffc4 	addi	r2,r2,-1
 4003834:	8884703a 	and	r2,r17,r2
 4003838:	103ea91e 	bne	r2,zero,40032e0 <_dtoa_r+0xa44>
 400383c:	8c5ffc2c 	andhi	r17,r17,32752
 4003840:	883ea726 	beq	r17,zero,40032e0 <_dtoa_r+0xa44>
 4003844:	d8800517 	ldw	r2,20(sp)
 4003848:	04400044 	movi	r17,1
 400384c:	10800044 	addi	r2,r2,1
 4003850:	d8800515 	stw	r2,20(sp)
 4003854:	d8800217 	ldw	r2,8(sp)
 4003858:	10800044 	addi	r2,r2,1
 400385c:	d8800215 	stw	r2,8(sp)
 4003860:	003ea006 	br	40032e4 <_dtoa_r+0xa48>
 4003864:	00800044 	movi	r2,1
 4003868:	d8800415 	stw	r2,16(sp)
 400386c:	d8801e15 	stw	r2,120(sp)
 4003870:	003f1b06 	br	40034e0 <_dtoa_r+0xc44>
 4003874:	d8800b17 	ldw	r2,44(sp)
 4003878:	dcc00315 	stw	r19,12(sp)
 400387c:	d8800415 	stw	r2,16(sp)
 4003880:	d8800417 	ldw	r2,16(sp)
 4003884:	103dfb1e 	bne	r2,zero,4003074 <_dtoa_r+0x7d8>
 4003888:	a80b883a 	mov	r5,r21
 400388c:	b809883a 	mov	r4,r23
 4003890:	000f883a 	mov	r7,zero
 4003894:	01800144 	movi	r6,5
 4003898:	400589c0 	call	400589c <__multadd>
 400389c:	100b883a 	mov	r5,r2
 40038a0:	b009883a 	mov	r4,r22
 40038a4:	102b883a 	mov	r21,r2
 40038a8:	40061440 	call	4006144 <__mcmp>
 40038ac:	00bdf10e 	bge	zero,r2,4003074 <_dtoa_r+0x7d8>
 40038b0:	00800c44 	movi	r2,49
 40038b4:	e0800005 	stb	r2,0(fp)
 40038b8:	d8800317 	ldw	r2,12(sp)
 40038bc:	e4800044 	addi	r18,fp,1
 40038c0:	14400044 	addi	r17,r2,1
 40038c4:	a80b883a 	mov	r5,r21
 40038c8:	b809883a 	mov	r4,r23
 40038cc:	40058780 	call	4005878 <_Bfree>
 40038d0:	88800044 	addi	r2,r17,1
 40038d4:	d8800315 	stw	r2,12(sp)
 40038d8:	803ee01e 	bne	r16,zero,400345c <_dtoa_r+0xbc0>
 40038dc:	003ee206 	br	4003468 <_dtoa_r+0xbcc>
 40038e0:	1805883a 	mov	r2,r3
 40038e4:	003e5806 	br	4003248 <_dtoa_r+0x9ac>
 40038e8:	800b883a 	mov	r5,r16
 40038ec:	900d883a 	mov	r6,r18
 40038f0:	b809883a 	mov	r4,r23
 40038f4:	4005fbc0 	call	4005fbc <__lshift>
 40038f8:	1021883a 	mov	r16,r2
 40038fc:	003f5006 	br	4003640 <_dtoa_r+0xda4>
 4003900:	156bc83a 	sub	r21,r2,r21
 4003904:	003e3e06 	br	4003200 <_dtoa_r+0x964>
 4003908:	dd000a15 	stw	r20,40(sp)
 400390c:	dc400c15 	stw	r17,48(sp)
 4003910:	04000084 	movi	r16,2
 4003914:	003cc906 	br	4002c3c <_dtoa_r+0x3a0>
 4003918:	00800044 	movi	r2,1
 400391c:	003ead06 	br	40033d4 <_dtoa_r+0xb38>
 4003920:	00800044 	movi	r2,1
 4003924:	d8800615 	stw	r2,24(sp)
 4003928:	003c9006 	br	4002b6c <_dtoa_r+0x2d0>
 400392c:	1000031e 	bne	r2,zero,400393c <_dtoa_r+0x10a0>
 4003930:	d8c00117 	ldw	r3,4(sp)
 4003934:	18c0004c 	andi	r3,r3,1
 4003938:	183eb71e 	bne	r3,zero,4003418 <_dtoa_r+0xb7c>
 400393c:	2005883a 	mov	r2,r4
 4003940:	00000206 	br	400394c <_dtoa_r+0x10b0>
 4003944:	90bfff83 	ldbu	r2,-2(r18)
 4003948:	1825883a 	mov	r18,r3
 400394c:	10803fcc 	andi	r2,r2,255
 4003950:	1080201c 	xori	r2,r2,128
 4003954:	10bfe004 	addi	r2,r2,-128
 4003958:	10800c18 	cmpnei	r2,r2,48
 400395c:	90ffffc4 	addi	r3,r18,-1
 4003960:	103ff826 	beq	r2,zero,4003944 <_dtoa_r+0x10a8>
 4003964:	003eb406 	br	4003438 <_dtoa_r+0xb9c>
 4003968:	00800c44 	movi	r2,49
 400396c:	e0800005 	stb	r2,0(fp)
 4003970:	d8800317 	ldw	r2,12(sp)
 4003974:	10800044 	addi	r2,r2,1
 4003978:	d8800315 	stw	r2,12(sp)
 400397c:	003eae06 	br	4003438 <_dtoa_r+0xb9c>
 4003980:	d8c00917 	ldw	r3,36(sp)
 4003984:	18011826 	beq	r3,zero,4003de8 <_dtoa_r+0x154c>
 4003988:	d8c00517 	ldw	r3,20(sp)
 400398c:	d9000217 	ldw	r4,8(sp)
 4003990:	10810cc4 	addi	r2,r2,1075
 4003994:	dd400717 	ldw	r21,28(sp)
 4003998:	2089883a 	add	r4,r4,r2
 400399c:	1885883a 	add	r2,r3,r2
 40039a0:	1825883a 	mov	r18,r3
 40039a4:	d9000215 	stw	r4,8(sp)
 40039a8:	d8800515 	stw	r2,20(sp)
 40039ac:	003e1d06 	br	4003224 <_dtoa_r+0x988>
 40039b0:	8009883a 	mov	r4,r16
 40039b4:	400ca2c0 	call	400ca2c <__floatsidf>
 40039b8:	d9c00a17 	ldw	r7,40(sp)
 40039bc:	900d883a 	mov	r6,r18
 40039c0:	1009883a 	mov	r4,r2
 40039c4:	180b883a 	mov	r5,r3
 40039c8:	400b9b40 	call	400b9b4 <__muldf3>
 40039cc:	000d883a 	mov	r6,zero
 40039d0:	01d00734 	movhi	r7,16412
 40039d4:	1009883a 	mov	r4,r2
 40039d8:	180b883a 	mov	r5,r3
 40039dc:	400a57c0 	call	400a57c <__adddf3>
 40039e0:	d8800c15 	stw	r2,48(sp)
 40039e4:	00bf3034 	movhi	r2,64704
 40039e8:	1885883a 	add	r2,r3,r2
 40039ec:	d8800d15 	stw	r2,52(sp)
 40039f0:	d9400a17 	ldw	r5,40(sp)
 40039f4:	9009883a 	mov	r4,r18
 40039f8:	000d883a 	mov	r6,zero
 40039fc:	01d00534 	movhi	r7,16404
 4003a00:	400c0240 	call	400c024 <__subdf3>
 4003a04:	dd400d17 	ldw	r21,52(sp)
 4003a08:	d9800c17 	ldw	r6,48(sp)
 4003a0c:	1009883a 	mov	r4,r2
 4003a10:	a80f883a 	mov	r7,r21
 4003a14:	180b883a 	mov	r5,r3
 4003a18:	1025883a 	mov	r18,r2
 4003a1c:	1821883a 	mov	r16,r3
 4003a20:	400b7d40 	call	400b7d4 <__gedf2>
 4003a24:	00812d16 	blt	zero,r2,4003edc <_dtoa_r+0x1640>
 4003a28:	d9800c17 	ldw	r6,48(sp)
 4003a2c:	a9e0003c 	xorhi	r7,r21,32768
 4003a30:	9009883a 	mov	r4,r18
 4003a34:	800b883a 	mov	r5,r16
 4003a38:	400b8c40 	call	400b8c4 <__ledf2>
 4003a3c:	103d6e0e 	bge	r2,zero,4002ff8 <_dtoa_r+0x75c>
 4003a40:	002b883a 	mov	r21,zero
 4003a44:	0021883a 	mov	r16,zero
 4003a48:	003d8a06 	br	4003074 <_dtoa_r+0x7d8>
 4003a4c:	d9800717 	ldw	r6,28(sp)
 4003a50:	b00b883a 	mov	r5,r22
 4003a54:	b809883a 	mov	r4,r23
 4003a58:	4005ea40 	call	4005ea4 <__pow5mult>
 4003a5c:	102d883a 	mov	r22,r2
 4003a60:	003e1706 	br	40032c0 <_dtoa_r+0xa24>
 4003a64:	d8800317 	ldw	r2,12(sp)
 4003a68:	10010d26 	beq	r2,zero,4003ea0 <_dtoa_r+0x1604>
 4003a6c:	00abc83a 	sub	r21,zero,r2
 4003a70:	a88003cc 	andi	r2,r21,15
 4003a74:	100690fa 	slli	r3,r2,3
 4003a78:	00810074 	movhi	r2,1025
 4003a7c:	10be1704 	addi	r2,r2,-1956
 4003a80:	10c5883a 	add	r2,r2,r3
 4003a84:	11800017 	ldw	r6,0(r2)
 4003a88:	11c00117 	ldw	r7,4(r2)
 4003a8c:	a009883a 	mov	r4,r20
 4003a90:	880b883a 	mov	r5,r17
 4003a94:	a82bd13a 	srai	r21,r21,4
 4003a98:	400b9b40 	call	400b9b4 <__muldf3>
 4003a9c:	d8c00a15 	stw	r3,40(sp)
 4003aa0:	1025883a 	mov	r18,r2
 4003aa4:	a8013826 	beq	r21,zero,4003f88 <_dtoa_r+0x16ec>
 4003aa8:	02010074 	movhi	r8,1025
 4003aac:	04000084 	movi	r16,2
 4003ab0:	423e0d04 	addi	r8,r8,-1996
 4003ab4:	180b883a 	mov	r5,r3
 4003ab8:	dc400c15 	stw	r17,48(sp)
 4003abc:	1009883a 	mov	r4,r2
 4003ac0:	8023883a 	mov	r17,r16
 4003ac4:	0007883a 	mov	r3,zero
 4003ac8:	4021883a 	mov	r16,r8
 4003acc:	a980004c 	andi	r6,r21,1
 4003ad0:	30000726 	beq	r6,zero,4003af0 <_dtoa_r+0x1254>
 4003ad4:	81800017 	ldw	r6,0(r16)
 4003ad8:	81c00117 	ldw	r7,4(r16)
 4003adc:	8c400044 	addi	r17,r17,1
 4003ae0:	400b9b40 	call	400b9b4 <__muldf3>
 4003ae4:	180b883a 	mov	r5,r3
 4003ae8:	1009883a 	mov	r4,r2
 4003aec:	00c00044 	movi	r3,1
 4003af0:	a82bd07a 	srai	r21,r21,1
 4003af4:	84000204 	addi	r16,r16,8
 4003af8:	a83ff41e 	bne	r21,zero,4003acc <_dtoa_r+0x1230>
 4003afc:	18c03fcc 	andi	r3,r3,255
 4003b00:	8821883a 	mov	r16,r17
 4003b04:	dc400c17 	ldw	r17,48(sp)
 4003b08:	183c6526 	beq	r3,zero,4002ca0 <_dtoa_r+0x404>
 4003b0c:	2025883a 	mov	r18,r4
 4003b10:	d9400a15 	stw	r5,40(sp)
 4003b14:	003c6206 	br	4002ca0 <_dtoa_r+0x404>
 4003b18:	a03eb41e 	bne	r20,zero,40035ec <_dtoa_r+0xd50>
 4003b1c:	00800434 	movhi	r2,16
 4003b20:	10bfffc4 	addi	r2,r2,-1
 4003b24:	8884703a 	and	r2,r17,r2
 4003b28:	103f4426 	beq	r2,zero,400383c <_dtoa_r+0xfa0>
 4003b2c:	003eaf06 	br	40035ec <_dtoa_r+0xd50>
 4003b30:	d9000317 	ldw	r4,12(sp)
 4003b34:	e007883a 	mov	r3,fp
 4003b38:	df000817 	ldw	fp,32(sp)
 4003b3c:	21000044 	addi	r4,r4,1
 4003b40:	d9000315 	stw	r4,12(sp)
 4003b44:	00800f0e 	bge	zero,r2,4003b84 <_dtoa_r+0x12e8>
 4003b48:	b00b883a 	mov	r5,r22
 4003b4c:	01800044 	movi	r6,1
 4003b50:	b809883a 	mov	r4,r23
 4003b54:	d8c00115 	stw	r3,4(sp)
 4003b58:	4005fbc0 	call	4005fbc <__lshift>
 4003b5c:	a80b883a 	mov	r5,r21
 4003b60:	1009883a 	mov	r4,r2
 4003b64:	102d883a 	mov	r22,r2
 4003b68:	40061440 	call	4006144 <__mcmp>
 4003b6c:	d8c00117 	ldw	r3,4(sp)
 4003b70:	0080e40e 	bge	zero,r2,4003f04 <_dtoa_r+0x1668>
 4003b74:	18c00e60 	cmpeqi	r3,r3,57
 4003b78:	1800d21e 	bne	r3,zero,4003ec4 <_dtoa_r+0x1628>
 4003b7c:	d8800517 	ldw	r2,20(sp)
 4003b80:	10c00c44 	addi	r3,r2,49
 4003b84:	8023883a 	mov	r17,r16
 4003b88:	a0c00005 	stb	r3,0(r20)
 4003b8c:	9821883a 	mov	r16,r19
 4003b90:	003e2906 	br	4003438 <_dtoa_r+0xb9c>
 4003b94:	b027883a 	mov	r19,r22
 4003b98:	ddc00417 	ldw	r23,16(sp)
 4003b9c:	dd800217 	ldw	r22,8(sp)
 4003ba0:	200d883a 	mov	r6,r4
 4003ba4:	280f883a 	mov	r7,r5
 4003ba8:	400a57c0 	call	400a57c <__adddf3>
 4003bac:	dd400117 	ldw	r21,4(sp)
 4003bb0:	180b883a 	mov	r5,r3
 4003bb4:	900f883a 	mov	r7,r18
 4003bb8:	a80d883a 	mov	r6,r21
 4003bbc:	1009883a 	mov	r4,r2
 4003bc0:	1823883a 	mov	r17,r3
 4003bc4:	1029883a 	mov	r20,r2
 4003bc8:	400b7d40 	call	400b7d4 <__gedf2>
 4003bcc:	d8c00317 	ldw	r3,12(sp)
 4003bd0:	18c00044 	addi	r3,r3,1
 4003bd4:	d8c00315 	stw	r3,12(sp)
 4003bd8:	00bcc716 	blt	zero,r2,4002ef8 <_dtoa_r+0x65c>
 4003bdc:	a80d883a 	mov	r6,r21
 4003be0:	900f883a 	mov	r7,r18
 4003be4:	a009883a 	mov	r4,r20
 4003be8:	880b883a 	mov	r5,r17
 4003bec:	400b7540 	call	400b754 <__eqdf2>
 4003bf0:	1000021e 	bne	r2,zero,4003bfc <_dtoa_r+0x1360>
 4003bf4:	9cc0004c 	andi	r19,r19,1
 4003bf8:	983cbf1e 	bne	r19,zero,4002ef8 <_dtoa_r+0x65c>
 4003bfc:	8025883a 	mov	r18,r16
 4003c00:	003e1906 	br	4003468 <_dtoa_r+0xbcc>
 4003c04:	81400117 	ldw	r5,4(r16)
 4003c08:	b809883a 	mov	r4,r23
 4003c0c:	40057d40 	call	40057d4 <_Balloc>
 4003c10:	1023883a 	mov	r17,r2
 4003c14:	1000e526 	beq	r2,zero,4003fac <_dtoa_r+0x1710>
 4003c18:	81800417 	ldw	r6,16(r16)
 4003c1c:	81400304 	addi	r5,r16,12
 4003c20:	11000304 	addi	r4,r2,12
 4003c24:	31800084 	addi	r6,r6,2
 4003c28:	300c90ba 	slli	r6,r6,2
 4003c2c:	40055e40 	call	40055e4 <memcpy>
 4003c30:	01800044 	movi	r6,1
 4003c34:	880b883a 	mov	r5,r17
 4003c38:	b809883a 	mov	r4,r23
 4003c3c:	4005fbc0 	call	4005fbc <__lshift>
 4003c40:	1027883a 	mov	r19,r2
 4003c44:	003e8006 	br	4003648 <_dtoa_r+0xdac>
 4003c48:	b00b883a 	mov	r5,r22
 4003c4c:	b809883a 	mov	r4,r23
 4003c50:	4005ea40 	call	4005ea4 <__pow5mult>
 4003c54:	102d883a 	mov	r22,r2
 4003c58:	003d9906 	br	40032c0 <_dtoa_r+0xa24>
 4003c5c:	d8800517 	ldw	r2,20(sp)
 4003c60:	d8c00417 	ldw	r3,16(sp)
 4003c64:	10e5c83a 	sub	r18,r2,r3
 4003c68:	003d6e06 	br	4003224 <_dtoa_r+0x988>
 4003c6c:	d9000317 	ldw	r4,12(sp)
 4003c70:	e007883a 	mov	r3,fp
 4003c74:	18800e58 	cmpnei	r2,r3,57
 4003c78:	21000044 	addi	r4,r4,1
 4003c7c:	d9000315 	stw	r4,12(sp)
 4003c80:	df000817 	ldw	fp,32(sp)
 4003c84:	10008f26 	beq	r2,zero,4003ec4 <_dtoa_r+0x1628>
 4003c88:	18c00044 	addi	r3,r3,1
 4003c8c:	003fbd06 	br	4003b84 <_dtoa_r+0x12e8>
 4003c90:	d8800317 	ldw	r2,12(sp)
 4003c94:	e007883a 	mov	r3,fp
 4003c98:	8023883a 	mov	r17,r16
 4003c9c:	10800044 	addi	r2,r2,1
 4003ca0:	df000817 	ldw	fp,32(sp)
 4003ca4:	d8800315 	stw	r2,12(sp)
 4003ca8:	9821883a 	mov	r16,r19
 4003cac:	003dcb06 	br	40033dc <_dtoa_r+0xb40>
 4003cb0:	d9000c17 	ldw	r4,48(sp)
 4003cb4:	d9400d17 	ldw	r5,52(sp)
 4003cb8:	600d883a 	mov	r6,r12
 4003cbc:	680f883a 	mov	r7,r13
 4003cc0:	dac00a15 	stw	r11,40(sp)
 4003cc4:	400b9b40 	call	400b9b4 <__muldf3>
 4003cc8:	dac00a17 	ldw	r11,40(sp)
 4003ccc:	d9400e17 	ldw	r5,56(sp)
 4003cd0:	d8800a15 	stw	r2,40(sp)
 4003cd4:	e2c00005 	stb	r11,0(fp)
 4003cd8:	29000058 	cmpnei	r4,r5,1
 4003cdc:	d8c00c15 	stw	r3,48(sp)
 4003ce0:	e145883a 	add	r2,fp,r5
 4003ce4:	20002126 	beq	r4,zero,4003d6c <_dtoa_r+0x14d0>
 4003ce8:	dc400e15 	stw	r17,56(sp)
 4003cec:	dcc00d15 	stw	r19,52(sp)
 4003cf0:	8023883a 	mov	r17,r16
 4003cf4:	a809883a 	mov	r4,r21
 4003cf8:	900b883a 	mov	r5,r18
 4003cfc:	1021883a 	mov	r16,r2
 4003d00:	000d883a 	mov	r6,zero
 4003d04:	01d00934 	movhi	r7,16420
 4003d08:	400b9b40 	call	400b9b4 <__muldf3>
 4003d0c:	180b883a 	mov	r5,r3
 4003d10:	1009883a 	mov	r4,r2
 4003d14:	182b883a 	mov	r21,r3
 4003d18:	1027883a 	mov	r19,r2
 4003d1c:	400c9ac0 	call	400c9ac <__fixdfsi>
 4003d20:	1009883a 	mov	r4,r2
 4003d24:	1025883a 	mov	r18,r2
 4003d28:	400ca2c0 	call	400ca2c <__floatsidf>
 4003d2c:	9809883a 	mov	r4,r19
 4003d30:	a80b883a 	mov	r5,r21
 4003d34:	100d883a 	mov	r6,r2
 4003d38:	180f883a 	mov	r7,r3
 4003d3c:	8c400044 	addi	r17,r17,1
 4003d40:	94800c04 	addi	r18,r18,48
 4003d44:	400c0240 	call	400c024 <__subdf3>
 4003d48:	8cbfffc5 	stb	r18,-1(r17)
 4003d4c:	1009883a 	mov	r4,r2
 4003d50:	180b883a 	mov	r5,r3
 4003d54:	847fea1e 	bne	r16,r17,4003d00 <_dtoa_r+0x1464>
 4003d58:	8821883a 	mov	r16,r17
 4003d5c:	dcc00d17 	ldw	r19,52(sp)
 4003d60:	dc400e17 	ldw	r17,56(sp)
 4003d64:	102b883a 	mov	r21,r2
 4003d68:	1825883a 	mov	r18,r3
 4003d6c:	d9000a17 	ldw	r4,40(sp)
 4003d70:	d9400c17 	ldw	r5,48(sp)
 4003d74:	000d883a 	mov	r6,zero
 4003d78:	01cff834 	movhi	r7,16352
 4003d7c:	400a57c0 	call	400a57c <__adddf3>
 4003d80:	a80d883a 	mov	r6,r21
 4003d84:	900f883a 	mov	r7,r18
 4003d88:	1009883a 	mov	r4,r2
 4003d8c:	180b883a 	mov	r5,r3
 4003d90:	400b8c40 	call	400b8c4 <__ledf2>
 4003d94:	103c5316 	blt	r2,zero,4002ee4 <_dtoa_r+0x648>
 4003d98:	d9800a17 	ldw	r6,40(sp)
 4003d9c:	d9c00c17 	ldw	r7,48(sp)
 4003da0:	0009883a 	mov	r4,zero
 4003da4:	014ff834 	movhi	r5,16352
 4003da8:	400c0240 	call	400c024 <__subdf3>
 4003dac:	a80d883a 	mov	r6,r21
 4003db0:	900f883a 	mov	r7,r18
 4003db4:	1009883a 	mov	r4,r2
 4003db8:	180b883a 	mov	r5,r3
 4003dbc:	400b7d40 	call	400b7d4 <__gedf2>
 4003dc0:	00bc8d0e 	bge	zero,r2,4002ff8 <_dtoa_r+0x75c>
 4003dc4:	80bfffc7 	ldb	r2,-1(r16)
 4003dc8:	8025883a 	mov	r18,r16
 4003dcc:	843fffc4 	addi	r16,r16,-1
 4003dd0:	10800c20 	cmpeqi	r2,r2,48
 4003dd4:	103ffb1e 	bne	r2,zero,4003dc4 <_dtoa_r+0x1528>
 4003dd8:	d8801117 	ldw	r2,68(sp)
 4003ddc:	10800044 	addi	r2,r2,1
 4003de0:	d8800315 	stw	r2,12(sp)
 4003de4:	003da006 	br	4003468 <_dtoa_r+0xbcc>
 4003de8:	d8c01217 	ldw	r3,72(sp)
 4003dec:	00800d84 	movi	r2,54
 4003df0:	d9000517 	ldw	r4,20(sp)
 4003df4:	10c5c83a 	sub	r2,r2,r3
 4003df8:	d8c00217 	ldw	r3,8(sp)
 4003dfc:	dd400717 	ldw	r21,28(sp)
 4003e00:	2025883a 	mov	r18,r4
 4003e04:	1887883a 	add	r3,r3,r2
 4003e08:	2085883a 	add	r2,r4,r2
 4003e0c:	d8c00215 	stw	r3,8(sp)
 4003e10:	d8800515 	stw	r2,20(sp)
 4003e14:	003d0306 	br	4003224 <_dtoa_r+0x988>
 4003e18:	d8800417 	ldw	r2,16(sp)
 4003e1c:	103ee426 	beq	r2,zero,40039b0 <_dtoa_r+0x1114>
 4003e20:	d8800b17 	ldw	r2,44(sp)
 4003e24:	00bc740e 	bge	zero,r2,4002ff8 <_dtoa_r+0x75c>
 4003e28:	a80b883a 	mov	r5,r21
 4003e2c:	9009883a 	mov	r4,r18
 4003e30:	000d883a 	mov	r6,zero
 4003e34:	01d00934 	movhi	r7,16420
 4003e38:	400b9b40 	call	400b9b4 <__muldf3>
 4003e3c:	81000044 	addi	r4,r16,1
 4003e40:	1025883a 	mov	r18,r2
 4003e44:	182b883a 	mov	r21,r3
 4003e48:	d8c00a15 	stw	r3,40(sp)
 4003e4c:	400ca2c0 	call	400ca2c <__floatsidf>
 4003e50:	900d883a 	mov	r6,r18
 4003e54:	a80f883a 	mov	r7,r21
 4003e58:	1009883a 	mov	r4,r2
 4003e5c:	180b883a 	mov	r5,r3
 4003e60:	400b9b40 	call	400b9b4 <__muldf3>
 4003e64:	1009883a 	mov	r4,r2
 4003e68:	000d883a 	mov	r6,zero
 4003e6c:	01d00734 	movhi	r7,16412
 4003e70:	180b883a 	mov	r5,r3
 4003e74:	400a57c0 	call	400a57c <__adddf3>
 4003e78:	d9000317 	ldw	r4,12(sp)
 4003e7c:	d8800c15 	stw	r2,48(sp)
 4003e80:	00bf3034 	movhi	r2,64704
 4003e84:	1887883a 	add	r3,r3,r2
 4003e88:	d8800b17 	ldw	r2,44(sp)
 4003e8c:	213fffc4 	addi	r4,r4,-1
 4003e90:	d9001115 	stw	r4,68(sp)
 4003e94:	d8c00d15 	stw	r3,52(sp)
 4003e98:	d8800e15 	stw	r2,56(sp)
 4003e9c:	003b9f06 	br	4002d1c <_dtoa_r+0x480>
 4003ea0:	a025883a 	mov	r18,r20
 4003ea4:	dc400a15 	stw	r17,40(sp)
 4003ea8:	04000084 	movi	r16,2
 4003eac:	003b7c06 	br	4002ca0 <_dtoa_r+0x404>
 4003eb0:	d8800317 	ldw	r2,12(sp)
 4003eb4:	00c00c44 	movi	r3,49
 4003eb8:	10800044 	addi	r2,r2,1
 4003ebc:	d8800315 	stw	r2,12(sp)
 4003ec0:	003c1606 	br	4002f1c <_dtoa_r+0x680>
 4003ec4:	00800e44 	movi	r2,57
 4003ec8:	8023883a 	mov	r17,r16
 4003ecc:	a0800005 	stb	r2,0(r20)
 4003ed0:	9821883a 	mov	r16,r19
 4003ed4:	01000e44 	movi	r4,57
 4003ed8:	003d4f06 	br	4003418 <_dtoa_r+0xb7c>
 4003edc:	002b883a 	mov	r21,zero
 4003ee0:	0021883a 	mov	r16,zero
 4003ee4:	003e7206 	br	40038b0 <_dtoa_r+0x1014>
 4003ee8:	dd800d17 	ldw	r22,52(sp)
 4003eec:	ddc00e17 	ldw	r23,56(sp)
 4003ef0:	d8801117 	ldw	r2,68(sp)
 4003ef4:	8025883a 	mov	r18,r16
 4003ef8:	10800044 	addi	r2,r2,1
 4003efc:	d8800315 	stw	r2,12(sp)
 4003f00:	003d5906 	br	4003468 <_dtoa_r+0xbcc>
 4003f04:	103f1f1e 	bne	r2,zero,4003b84 <_dtoa_r+0x12e8>
 4003f08:	1880004c 	andi	r2,r3,1
 4003f0c:	103f191e 	bne	r2,zero,4003b74 <_dtoa_r+0x12d8>
 4003f10:	003f1c06 	br	4003b84 <_dtoa_r+0x12e8>
 4003f14:	dcc00f17 	ldw	r19,60(sp)
 4003f18:	dd800d17 	ldw	r22,52(sp)
 4003f1c:	ddc00e17 	ldw	r23,56(sp)
 4003f20:	dc400c17 	ldw	r17,48(sp)
 4003f24:	dd000a17 	ldw	r20,40(sp)
 4003f28:	003c3306 	br	4002ff8 <_dtoa_r+0x75c>
 4003f2c:	d9000317 	ldw	r4,12(sp)
 4003f30:	e007883a 	mov	r3,fp
 4003f34:	18800e60 	cmpeqi	r2,r3,57
 4003f38:	21000044 	addi	r4,r4,1
 4003f3c:	d9000315 	stw	r4,12(sp)
 4003f40:	df000817 	ldw	fp,32(sp)
 4003f44:	a4800044 	addi	r18,r20,1
 4003f48:	103fde1e 	bne	r2,zero,4003ec4 <_dtoa_r+0x1628>
 4003f4c:	047f0b16 	blt	zero,r17,4003b7c <_dtoa_r+0x12e0>
 4003f50:	003f0c06 	br	4003b84 <_dtoa_r+0x12e8>
 4003f54:	d8800117 	ldw	r2,4(sp)
 4003f58:	108000c8 	cmpgei	r2,r2,3
 4003f5c:	103e451e 	bne	r2,zero,4003874 <_dtoa_r+0xfd8>
 4003f60:	dcc00315 	stw	r19,12(sp)
 4003f64:	003e0c06 	br	4003798 <_dtoa_r+0xefc>
 4003f68:	d8800117 	ldw	r2,4(sp)
 4003f6c:	108000c8 	cmpgei	r2,r2,3
 4003f70:	103e401e 	bne	r2,zero,4003874 <_dtoa_r+0xfd8>
 4003f74:	d8800b17 	ldw	r2,44(sp)
 4003f78:	dcc00315 	stw	r19,12(sp)
 4003f7c:	d8800415 	stw	r2,16(sp)
 4003f80:	04bdaf0e 	bge	zero,r18,4003640 <_dtoa_r+0xda4>
 4003f84:	003e5806 	br	40038e8 <_dtoa_r+0x104c>
 4003f88:	04000084 	movi	r16,2
 4003f8c:	003b4406 	br	4002ca0 <_dtoa_r+0x404>
 4003f90:	01c10074 	movhi	r7,1025
 4003f94:	01010074 	movhi	r4,1025
 4003f98:	39fddd04 	addi	r7,r7,-2188
 4003f9c:	000d883a 	mov	r6,zero
 4003fa0:	01406a84 	movi	r5,426
 4003fa4:	213de204 	addi	r4,r4,-2168
 4003fa8:	40080480 	call	4008048 <__assert_func>
 4003fac:	01c10074 	movhi	r7,1025
 4003fb0:	01010074 	movhi	r4,1025
 4003fb4:	39fddd04 	addi	r7,r7,-2188
 4003fb8:	000d883a 	mov	r6,zero
 4003fbc:	0140ba84 	movi	r5,746
 4003fc0:	213de204 	addi	r4,r4,-2168
 4003fc4:	40080480 	call	4008048 <__assert_func>
 4003fc8:	e73dda04 	addi	fp,fp,-2200
 4003fcc:	003a6406 	br	4002960 <_dtoa_r+0xc4>
 4003fd0:	18c00120 	cmpeqi	r3,r3,4
 4003fd4:	183cd51e 	bne	r3,zero,400332c <_dtoa_r+0xa90>
 4003fd8:	00c00f04 	movi	r3,60
 4003fdc:	1885c83a 	sub	r2,r3,r2
 4003fe0:	003d6c06 	br	4003594 <_dtoa_r+0xcf8>
 4003fe4:	000b883a 	mov	r5,zero
 4003fe8:	003af006 	br	4002bac <_dtoa_r+0x310>

04003fec <__sflush_r>:
 4003fec:	2880030b 	ldhu	r2,12(r5)
 4003ff0:	defffb04 	addi	sp,sp,-20
 4003ff4:	dcc00315 	stw	r19,12(sp)
 4003ff8:	dc000015 	stw	r16,0(sp)
 4003ffc:	dfc00415 	stw	ra,16(sp)
 4004000:	dc800215 	stw	r18,8(sp)
 4004004:	dc400115 	stw	r17,4(sp)
 4004008:	10c0020c 	andi	r3,r2,8
 400400c:	2821883a 	mov	r16,r5
 4004010:	2027883a 	mov	r19,r4
 4004014:	18003f1e 	bne	r3,zero,4004114 <__sflush_r+0x128>
 4004018:	28c00117 	ldw	r3,4(r5)
 400401c:	10820014 	ori	r2,r2,2048
 4004020:	2880030d 	sth	r2,12(r5)
 4004024:	00c0550e 	bge	zero,r3,400417c <__sflush_r+0x190>
 4004028:	82000a17 	ldw	r8,40(r16)
 400402c:	40003126 	beq	r8,zero,40040f4 <__sflush_r+0x108>
 4004030:	9c400017 	ldw	r17,0(r19)
 4004034:	1104000c 	andi	r4,r2,4096
 4004038:	98000015 	stw	zero,0(r19)
 400403c:	81400717 	ldw	r5,28(r16)
 4004040:	1007883a 	mov	r3,r2
 4004044:	2000521e 	bne	r4,zero,4004190 <__sflush_r+0x1a4>
 4004048:	01c00044 	movi	r7,1
 400404c:	000d883a 	mov	r6,zero
 4004050:	9809883a 	mov	r4,r19
 4004054:	403ee83a 	callr	r8
 4004058:	10ffffd8 	cmpnei	r3,r2,-1
 400405c:	18005826 	beq	r3,zero,40041c0 <__sflush_r+0x1d4>
 4004060:	80c0030b 	ldhu	r3,12(r16)
 4004064:	82000a17 	ldw	r8,40(r16)
 4004068:	81400717 	ldw	r5,28(r16)
 400406c:	18c0010c 	andi	r3,r3,4
 4004070:	18000626 	beq	r3,zero,400408c <__sflush_r+0xa0>
 4004074:	81000117 	ldw	r4,4(r16)
 4004078:	80c00c17 	ldw	r3,48(r16)
 400407c:	1105c83a 	sub	r2,r2,r4
 4004080:	18000226 	beq	r3,zero,400408c <__sflush_r+0xa0>
 4004084:	80c00f17 	ldw	r3,60(r16)
 4004088:	10c5c83a 	sub	r2,r2,r3
 400408c:	100d883a 	mov	r6,r2
 4004090:	000f883a 	mov	r7,zero
 4004094:	9809883a 	mov	r4,r19
 4004098:	403ee83a 	callr	r8
 400409c:	10ffffd8 	cmpnei	r3,r2,-1
 40040a0:	18003d1e 	bne	r3,zero,4004198 <__sflush_r+0x1ac>
 40040a4:	99000017 	ldw	r4,0(r19)
 40040a8:	80c0030b 	ldhu	r3,12(r16)
 40040ac:	20004e26 	beq	r4,zero,40041e8 <__sflush_r+0x1fc>
 40040b0:	21400760 	cmpeqi	r5,r4,29
 40040b4:	2800021e 	bne	r5,zero,40040c0 <__sflush_r+0xd4>
 40040b8:	210005a0 	cmpeqi	r4,r4,22
 40040bc:	20002c26 	beq	r4,zero,4004170 <__sflush_r+0x184>
 40040c0:	80800417 	ldw	r2,16(r16)
 40040c4:	18fdffcc 	andi	r3,r3,63487
 40040c8:	80c0030d 	sth	r3,12(r16)
 40040cc:	80000115 	stw	zero,4(r16)
 40040d0:	80800015 	stw	r2,0(r16)
 40040d4:	81400c17 	ldw	r5,48(r16)
 40040d8:	9c400015 	stw	r17,0(r19)
 40040dc:	28000526 	beq	r5,zero,40040f4 <__sflush_r+0x108>
 40040e0:	80801004 	addi	r2,r16,64
 40040e4:	28800226 	beq	r5,r2,40040f0 <__sflush_r+0x104>
 40040e8:	9809883a 	mov	r4,r19
 40040ec:	40046fc0 	call	40046fc <_free_r>
 40040f0:	80000c15 	stw	zero,48(r16)
 40040f4:	0005883a 	mov	r2,zero
 40040f8:	dfc00417 	ldw	ra,16(sp)
 40040fc:	dcc00317 	ldw	r19,12(sp)
 4004100:	dc800217 	ldw	r18,8(sp)
 4004104:	dc400117 	ldw	r17,4(sp)
 4004108:	dc000017 	ldw	r16,0(sp)
 400410c:	dec00504 	addi	sp,sp,20
 4004110:	f800283a 	ret
 4004114:	2c800417 	ldw	r18,16(r5)
 4004118:	903ff626 	beq	r18,zero,40040f4 <__sflush_r+0x108>
 400411c:	2c400017 	ldw	r17,0(r5)
 4004120:	108000cc 	andi	r2,r2,3
 4004124:	2c800015 	stw	r18,0(r5)
 4004128:	8ca3c83a 	sub	r17,r17,r18
 400412c:	1000161e 	bne	r2,zero,4004188 <__sflush_r+0x19c>
 4004130:	28800517 	ldw	r2,20(r5)
 4004134:	80800215 	stw	r2,8(r16)
 4004138:	04400316 	blt	zero,r17,4004148 <__sflush_r+0x15c>
 400413c:	003fed06 	br	40040f4 <__sflush_r+0x108>
 4004140:	90a5883a 	add	r18,r18,r2
 4004144:	047feb0e 	bge	zero,r17,40040f4 <__sflush_r+0x108>
 4004148:	80800917 	ldw	r2,36(r16)
 400414c:	81400717 	ldw	r5,28(r16)
 4004150:	880f883a 	mov	r7,r17
 4004154:	900d883a 	mov	r6,r18
 4004158:	9809883a 	mov	r4,r19
 400415c:	103ee83a 	callr	r2
 4004160:	88a3c83a 	sub	r17,r17,r2
 4004164:	00bff616 	blt	zero,r2,4004140 <__sflush_r+0x154>
 4004168:	80c0030b 	ldhu	r3,12(r16)
 400416c:	00bfffc4 	movi	r2,-1
 4004170:	18c01014 	ori	r3,r3,64
 4004174:	80c0030d 	sth	r3,12(r16)
 4004178:	003fdf06 	br	40040f8 <__sflush_r+0x10c>
 400417c:	28c00f17 	ldw	r3,60(r5)
 4004180:	00ffa916 	blt	zero,r3,4004028 <__sflush_r+0x3c>
 4004184:	003fdb06 	br	40040f4 <__sflush_r+0x108>
 4004188:	0005883a 	mov	r2,zero
 400418c:	003fe906 	br	4004134 <__sflush_r+0x148>
 4004190:	80801417 	ldw	r2,80(r16)
 4004194:	003fb506 	br	400406c <__sflush_r+0x80>
 4004198:	80c0030b 	ldhu	r3,12(r16)
 400419c:	81000417 	ldw	r4,16(r16)
 40041a0:	80000115 	stw	zero,4(r16)
 40041a4:	197dffcc 	andi	r5,r3,63487
 40041a8:	8140030d 	sth	r5,12(r16)
 40041ac:	81000015 	stw	r4,0(r16)
 40041b0:	18c4000c 	andi	r3,r3,4096
 40041b4:	183fc726 	beq	r3,zero,40040d4 <__sflush_r+0xe8>
 40041b8:	80801415 	stw	r2,80(r16)
 40041bc:	003fc506 	br	40040d4 <__sflush_r+0xe8>
 40041c0:	98c00017 	ldw	r3,0(r19)
 40041c4:	183fa626 	beq	r3,zero,4004060 <__sflush_r+0x74>
 40041c8:	19000760 	cmpeqi	r4,r3,29
 40041cc:	20000e1e 	bne	r4,zero,4004208 <__sflush_r+0x21c>
 40041d0:	18c00598 	cmpnei	r3,r3,22
 40041d4:	18000c26 	beq	r3,zero,4004208 <__sflush_r+0x21c>
 40041d8:	80c0030b 	ldhu	r3,12(r16)
 40041dc:	18c01014 	ori	r3,r3,64
 40041e0:	80c0030d 	sth	r3,12(r16)
 40041e4:	003fc406 	br	40040f8 <__sflush_r+0x10c>
 40041e8:	81000417 	ldw	r4,16(r16)
 40041ec:	197dffcc 	andi	r5,r3,63487
 40041f0:	8140030d 	sth	r5,12(r16)
 40041f4:	80000115 	stw	zero,4(r16)
 40041f8:	81000015 	stw	r4,0(r16)
 40041fc:	18c4000c 	andi	r3,r3,4096
 4004200:	183fb426 	beq	r3,zero,40040d4 <__sflush_r+0xe8>
 4004204:	003fec06 	br	40041b8 <__sflush_r+0x1cc>
 4004208:	9c400015 	stw	r17,0(r19)
 400420c:	0005883a 	mov	r2,zero
 4004210:	003fb906 	br	40040f8 <__sflush_r+0x10c>

04004214 <_fflush_r>:
 4004214:	defffd04 	addi	sp,sp,-12
 4004218:	dc000115 	stw	r16,4(sp)
 400421c:	dfc00215 	stw	ra,8(sp)
 4004220:	2021883a 	mov	r16,r4
 4004224:	20000226 	beq	r4,zero,4004230 <_fflush_r+0x1c>
 4004228:	20800e17 	ldw	r2,56(r4)
 400422c:	10000726 	beq	r2,zero,400424c <_fflush_r+0x38>
 4004230:	2880030f 	ldh	r2,12(r5)
 4004234:	10000a1e 	bne	r2,zero,4004260 <_fflush_r+0x4c>
 4004238:	0005883a 	mov	r2,zero
 400423c:	dfc00217 	ldw	ra,8(sp)
 4004240:	dc000117 	ldw	r16,4(sp)
 4004244:	dec00304 	addi	sp,sp,12
 4004248:	f800283a 	ret
 400424c:	d9400015 	stw	r5,0(sp)
 4004250:	40045980 	call	4004598 <__sinit>
 4004254:	d9400017 	ldw	r5,0(sp)
 4004258:	2880030f 	ldh	r2,12(r5)
 400425c:	103ff626 	beq	r2,zero,4004238 <_fflush_r+0x24>
 4004260:	8009883a 	mov	r4,r16
 4004264:	dfc00217 	ldw	ra,8(sp)
 4004268:	dc000117 	ldw	r16,4(sp)
 400426c:	dec00304 	addi	sp,sp,12
 4004270:	4003fec1 	jmpi	4003fec <__sflush_r>

04004274 <fflush>:
 4004274:	200b883a 	mov	r5,r4
 4004278:	20000326 	beq	r4,zero,4004288 <fflush+0x14>
 400427c:	00810074 	movhi	r2,1025
 4004280:	11064817 	ldw	r4,6432(r2)
 4004284:	40042141 	jmpi	4004214 <_fflush_r>
 4004288:	00810074 	movhi	r2,1025
 400428c:	11064717 	ldw	r4,6428(r2)
 4004290:	01410034 	movhi	r5,1024
 4004294:	29508504 	addi	r5,r5,16916
 4004298:	4004a901 	jmpi	4004a90 <_fwalk_reent>

0400429c <__fp_lock>:
 400429c:	0005883a 	mov	r2,zero
 40042a0:	f800283a 	ret

040042a4 <_cleanup_r>:
 40042a4:	01410074 	movhi	r5,1025
 40042a8:	29605d04 	addi	r5,r5,-32396
 40042ac:	4004a901 	jmpi	4004a90 <_fwalk_reent>

040042b0 <__sinit.part.0>:
 40042b0:	00c10034 	movhi	r3,1024
 40042b4:	20800117 	ldw	r2,4(r4)
 40042b8:	18d0a904 	addi	r3,r3,17060
 40042bc:	20c00f15 	stw	r3,60(r4)
 40042c0:	2140bb04 	addi	r5,r4,748
 40042c4:	00c000c4 	movi	r3,3
 40042c8:	20c0b915 	stw	r3,740(r4)
 40042cc:	2140ba15 	stw	r5,744(r4)
 40042d0:	2000b815 	stw	zero,736(r4)
 40042d4:	10001705 	stb	zero,92(r2)
 40042d8:	10001745 	stb	zero,93(r2)
 40042dc:	10001785 	stb	zero,94(r2)
 40042e0:	100017c5 	stb	zero,95(r2)
 40042e4:	10001805 	stb	zero,96(r2)
 40042e8:	10001845 	stb	zero,97(r2)
 40042ec:	10001885 	stb	zero,98(r2)
 40042f0:	100018c5 	stb	zero,99(r2)
 40042f4:	00c00104 	movi	r3,4
 40042f8:	10c00315 	stw	r3,12(r2)
 40042fc:	02010034 	movhi	r8,1024
 4004300:	20c00217 	ldw	r3,8(r4)
 4004304:	01c10034 	movhi	r7,1024
 4004308:	01810034 	movhi	r6,1024
 400430c:	01410034 	movhi	r5,1024
 4004310:	421a3204 	addi	r8,r8,26824
 4004314:	39da4904 	addi	r7,r7,26916
 4004318:	319a6904 	addi	r6,r6,27044
 400431c:	295a8004 	addi	r5,r5,27136
 4004320:	02400074 	movhi	r9,1
 4004324:	10001915 	stw	zero,100(r2)
 4004328:	10000015 	stw	zero,0(r2)
 400432c:	10000115 	stw	zero,4(r2)
 4004330:	10000215 	stw	zero,8(r2)
 4004334:	10000415 	stw	zero,16(r2)
 4004338:	10000515 	stw	zero,20(r2)
 400433c:	10000615 	stw	zero,24(r2)
 4004340:	10800715 	stw	r2,28(r2)
 4004344:	12000815 	stw	r8,32(r2)
 4004348:	11c00915 	stw	r7,36(r2)
 400434c:	11800a15 	stw	r6,40(r2)
 4004350:	11400b15 	stw	r5,44(r2)
 4004354:	4a400284 	addi	r9,r9,10
 4004358:	1a400315 	stw	r9,12(r3)
 400435c:	18001915 	stw	zero,100(r3)
 4004360:	18000015 	stw	zero,0(r3)
 4004364:	18000115 	stw	zero,4(r3)
 4004368:	18000215 	stw	zero,8(r3)
 400436c:	18000415 	stw	zero,16(r3)
 4004370:	18001705 	stb	zero,92(r3)
 4004374:	18001745 	stb	zero,93(r3)
 4004378:	18001785 	stb	zero,94(r3)
 400437c:	180017c5 	stb	zero,95(r3)
 4004380:	18001805 	stb	zero,96(r3)
 4004384:	18001845 	stb	zero,97(r3)
 4004388:	18001885 	stb	zero,98(r3)
 400438c:	180018c5 	stb	zero,99(r3)
 4004390:	20800317 	ldw	r2,12(r4)
 4004394:	024000b4 	movhi	r9,2
 4004398:	18000515 	stw	zero,20(r3)
 400439c:	18000615 	stw	zero,24(r3)
 40043a0:	18c00715 	stw	r3,28(r3)
 40043a4:	1a000815 	stw	r8,32(r3)
 40043a8:	19c00915 	stw	r7,36(r3)
 40043ac:	19800a15 	stw	r6,40(r3)
 40043b0:	19400b15 	stw	r5,44(r3)
 40043b4:	4a400484 	addi	r9,r9,18
 40043b8:	10001915 	stw	zero,100(r2)
 40043bc:	10000015 	stw	zero,0(r2)
 40043c0:	10000115 	stw	zero,4(r2)
 40043c4:	10000215 	stw	zero,8(r2)
 40043c8:	12400315 	stw	r9,12(r2)
 40043cc:	10000415 	stw	zero,16(r2)
 40043d0:	10000515 	stw	zero,20(r2)
 40043d4:	10000615 	stw	zero,24(r2)
 40043d8:	10001705 	stb	zero,92(r2)
 40043dc:	10001745 	stb	zero,93(r2)
 40043e0:	10001785 	stb	zero,94(r2)
 40043e4:	100017c5 	stb	zero,95(r2)
 40043e8:	10001805 	stb	zero,96(r2)
 40043ec:	10001845 	stb	zero,97(r2)
 40043f0:	10001885 	stb	zero,98(r2)
 40043f4:	100018c5 	stb	zero,99(r2)
 40043f8:	10800715 	stw	r2,28(r2)
 40043fc:	12000815 	stw	r8,32(r2)
 4004400:	11c00915 	stw	r7,36(r2)
 4004404:	11800a15 	stw	r6,40(r2)
 4004408:	11400b15 	stw	r5,44(r2)
 400440c:	00800044 	movi	r2,1
 4004410:	20800e15 	stw	r2,56(r4)
 4004414:	f800283a 	ret

04004418 <__fp_unlock>:
 4004418:	0005883a 	mov	r2,zero
 400441c:	f800283a 	ret

04004420 <__sfmoreglue>:
 4004420:	defffc04 	addi	sp,sp,-16
 4004424:	dc400115 	stw	r17,4(sp)
 4004428:	2c7fffc4 	addi	r17,r5,-1
 400442c:	8c401a24 	muli	r17,r17,104
 4004430:	dc800215 	stw	r18,8(sp)
 4004434:	2825883a 	mov	r18,r5
 4004438:	89401d04 	addi	r5,r17,116
 400443c:	dc000015 	stw	r16,0(sp)
 4004440:	dfc00315 	stw	ra,12(sp)
 4004444:	4004d300 	call	4004d30 <_malloc_r>
 4004448:	1021883a 	mov	r16,r2
 400444c:	10000726 	beq	r2,zero,400446c <__sfmoreglue+0x4c>
 4004450:	11000304 	addi	r4,r2,12
 4004454:	10000015 	stw	zero,0(r2)
 4004458:	14800115 	stw	r18,4(r2)
 400445c:	11000215 	stw	r4,8(r2)
 4004460:	89801a04 	addi	r6,r17,104
 4004464:	000b883a 	mov	r5,zero
 4004468:	40056e40 	call	40056e4 <memset>
 400446c:	8005883a 	mov	r2,r16
 4004470:	dfc00317 	ldw	ra,12(sp)
 4004474:	dc800217 	ldw	r18,8(sp)
 4004478:	dc400117 	ldw	r17,4(sp)
 400447c:	dc000017 	ldw	r16,0(sp)
 4004480:	dec00404 	addi	sp,sp,16
 4004484:	f800283a 	ret

04004488 <__sfp>:
 4004488:	defffd04 	addi	sp,sp,-12
 400448c:	00810074 	movhi	r2,1025
 4004490:	dc000015 	stw	r16,0(sp)
 4004494:	14064717 	ldw	r16,6428(r2)
 4004498:	dc400115 	stw	r17,4(sp)
 400449c:	dfc00215 	stw	ra,8(sp)
 40044a0:	80800e17 	ldw	r2,56(r16)
 40044a4:	2023883a 	mov	r17,r4
 40044a8:	10002b26 	beq	r2,zero,4004558 <__sfp+0xd0>
 40044ac:	8400b804 	addi	r16,r16,736
 40044b0:	80c00117 	ldw	r3,4(r16)
 40044b4:	80800217 	ldw	r2,8(r16)
 40044b8:	18ffffc4 	addi	r3,r3,-1
 40044bc:	1800030e 	bge	r3,zero,40044cc <__sfp+0x44>
 40044c0:	00002106 	br	4004548 <__sfp+0xc0>
 40044c4:	10801a04 	addi	r2,r2,104
 40044c8:	30001f26 	beq	r6,zero,4004548 <__sfp+0xc0>
 40044cc:	1140030f 	ldh	r5,12(r2)
 40044d0:	18ffffc4 	addi	r3,r3,-1
 40044d4:	19bfffd8 	cmpnei	r6,r3,-1
 40044d8:	283ffa1e 	bne	r5,zero,40044c4 <__sfp+0x3c>
 40044dc:	00fffff4 	movhi	r3,65535
 40044e0:	18c00044 	addi	r3,r3,1
 40044e4:	10001915 	stw	zero,100(r2)
 40044e8:	10000015 	stw	zero,0(r2)
 40044ec:	10000115 	stw	zero,4(r2)
 40044f0:	10000215 	stw	zero,8(r2)
 40044f4:	10c00315 	stw	r3,12(r2)
 40044f8:	10000415 	stw	zero,16(r2)
 40044fc:	10000515 	stw	zero,20(r2)
 4004500:	10000615 	stw	zero,24(r2)
 4004504:	10001705 	stb	zero,92(r2)
 4004508:	10001745 	stb	zero,93(r2)
 400450c:	10001785 	stb	zero,94(r2)
 4004510:	100017c5 	stb	zero,95(r2)
 4004514:	10001805 	stb	zero,96(r2)
 4004518:	10001845 	stb	zero,97(r2)
 400451c:	10001885 	stb	zero,98(r2)
 4004520:	100018c5 	stb	zero,99(r2)
 4004524:	10000c15 	stw	zero,48(r2)
 4004528:	10000d15 	stw	zero,52(r2)
 400452c:	10001115 	stw	zero,68(r2)
 4004530:	10001215 	stw	zero,72(r2)
 4004534:	dfc00217 	ldw	ra,8(sp)
 4004538:	dc400117 	ldw	r17,4(sp)
 400453c:	dc000017 	ldw	r16,0(sp)
 4004540:	dec00304 	addi	sp,sp,12
 4004544:	f800283a 	ret
 4004548:	80800017 	ldw	r2,0(r16)
 400454c:	10000526 	beq	r2,zero,4004564 <__sfp+0xdc>
 4004550:	1021883a 	mov	r16,r2
 4004554:	003fd606 	br	40044b0 <__sfp+0x28>
 4004558:	8009883a 	mov	r4,r16
 400455c:	40042b00 	call	40042b0 <__sinit.part.0>
 4004560:	003fd206 	br	40044ac <__sfp+0x24>
 4004564:	01400104 	movi	r5,4
 4004568:	8809883a 	mov	r4,r17
 400456c:	40044200 	call	4004420 <__sfmoreglue>
 4004570:	80800015 	stw	r2,0(r16)
 4004574:	103ff61e 	bne	r2,zero,4004550 <__sfp+0xc8>
 4004578:	00c00304 	movi	r3,12
 400457c:	88c00015 	stw	r3,0(r17)
 4004580:	003fec06 	br	4004534 <__sfp+0xac>

04004584 <_cleanup>:
 4004584:	00810074 	movhi	r2,1025
 4004588:	11064717 	ldw	r4,6428(r2)
 400458c:	01410074 	movhi	r5,1025
 4004590:	29605d04 	addi	r5,r5,-32396
 4004594:	4004a901 	jmpi	4004a90 <_fwalk_reent>

04004598 <__sinit>:
 4004598:	20800e17 	ldw	r2,56(r4)
 400459c:	10000126 	beq	r2,zero,40045a4 <__sinit+0xc>
 40045a0:	f800283a 	ret
 40045a4:	40042b01 	jmpi	40042b0 <__sinit.part.0>

040045a8 <__sfp_lock_acquire>:
 40045a8:	f800283a 	ret

040045ac <__sfp_lock_release>:
 40045ac:	f800283a 	ret

040045b0 <__sinit_lock_acquire>:
 40045b0:	f800283a 	ret

040045b4 <__sinit_lock_release>:
 40045b4:	f800283a 	ret

040045b8 <__fp_lock_all>:
 40045b8:	00810074 	movhi	r2,1025
 40045bc:	11064817 	ldw	r4,6432(r2)
 40045c0:	01410034 	movhi	r5,1024
 40045c4:	2950a704 	addi	r5,r5,17052
 40045c8:	40049f81 	jmpi	40049f8 <_fwalk>

040045cc <__fp_unlock_all>:
 40045cc:	00810074 	movhi	r2,1025
 40045d0:	11064817 	ldw	r4,6432(r2)
 40045d4:	01410034 	movhi	r5,1024
 40045d8:	29510604 	addi	r5,r5,17432
 40045dc:	40049f81 	jmpi	40049f8 <_fwalk>

040045e0 <_malloc_trim_r>:
 40045e0:	defffb04 	addi	sp,sp,-20
 40045e4:	dcc00315 	stw	r19,12(sp)
 40045e8:	04c10074 	movhi	r19,1025
 40045ec:	dc800215 	stw	r18,8(sp)
 40045f0:	dc400115 	stw	r17,4(sp)
 40045f4:	dc000015 	stw	r16,0(sp)
 40045f8:	dfc00415 	stw	ra,16(sp)
 40045fc:	2821883a 	mov	r16,r5
 4004600:	9cc05d04 	addi	r19,r19,372
 4004604:	2025883a 	mov	r18,r4
 4004608:	400d3080 	call	400d308 <__malloc_lock>
 400460c:	98800217 	ldw	r2,8(r19)
 4004610:	14400117 	ldw	r17,4(r2)
 4004614:	00bfff04 	movi	r2,-4
 4004618:	88a2703a 	and	r17,r17,r2
 400461c:	8c21c83a 	sub	r16,r17,r16
 4004620:	8403fbc4 	addi	r16,r16,4079
 4004624:	8020d33a 	srli	r16,r16,12
 4004628:	843fffc4 	addi	r16,r16,-1
 400462c:	8020933a 	slli	r16,r16,12
 4004630:	80840008 	cmpgei	r2,r16,4096
 4004634:	10000626 	beq	r2,zero,4004650 <_malloc_trim_r+0x70>
 4004638:	000b883a 	mov	r5,zero
 400463c:	9009883a 	mov	r4,r18
 4004640:	40068700 	call	4006870 <_sbrk_r>
 4004644:	98c00217 	ldw	r3,8(r19)
 4004648:	1c47883a 	add	r3,r3,r17
 400464c:	10c00a26 	beq	r2,r3,4004678 <_malloc_trim_r+0x98>
 4004650:	9009883a 	mov	r4,r18
 4004654:	400d32c0 	call	400d32c <__malloc_unlock>
 4004658:	0005883a 	mov	r2,zero
 400465c:	dfc00417 	ldw	ra,16(sp)
 4004660:	dcc00317 	ldw	r19,12(sp)
 4004664:	dc800217 	ldw	r18,8(sp)
 4004668:	dc400117 	ldw	r17,4(sp)
 400466c:	dc000017 	ldw	r16,0(sp)
 4004670:	dec00504 	addi	sp,sp,20
 4004674:	f800283a 	ret
 4004678:	040bc83a 	sub	r5,zero,r16
 400467c:	9009883a 	mov	r4,r18
 4004680:	40068700 	call	4006870 <_sbrk_r>
 4004684:	10bfffd8 	cmpnei	r2,r2,-1
 4004688:	10000d26 	beq	r2,zero,40046c0 <_malloc_trim_r+0xe0>
 400468c:	00810074 	movhi	r2,1025
 4004690:	108d6217 	ldw	r2,13704(r2)
 4004694:	98c00217 	ldw	r3,8(r19)
 4004698:	8c23c83a 	sub	r17,r17,r16
 400469c:	8c400054 	ori	r17,r17,1
 40046a0:	1421c83a 	sub	r16,r2,r16
 40046a4:	1c400115 	stw	r17,4(r3)
 40046a8:	00810074 	movhi	r2,1025
 40046ac:	9009883a 	mov	r4,r18
 40046b0:	140d6215 	stw	r16,13704(r2)
 40046b4:	400d32c0 	call	400d32c <__malloc_unlock>
 40046b8:	00800044 	movi	r2,1
 40046bc:	003fe706 	br	400465c <_malloc_trim_r+0x7c>
 40046c0:	000b883a 	mov	r5,zero
 40046c4:	9009883a 	mov	r4,r18
 40046c8:	40068700 	call	4006870 <_sbrk_r>
 40046cc:	99000217 	ldw	r4,8(r19)
 40046d0:	1107c83a 	sub	r3,r2,r4
 40046d4:	19400410 	cmplti	r5,r3,16
 40046d8:	283fdd1e 	bne	r5,zero,4004650 <_malloc_trim_r+0x70>
 40046dc:	01410074 	movhi	r5,1025
 40046e0:	29464917 	ldw	r5,6436(r5)
 40046e4:	18c00054 	ori	r3,r3,1
 40046e8:	20c00115 	stw	r3,4(r4)
 40046ec:	1145c83a 	sub	r2,r2,r5
 40046f0:	01410074 	movhi	r5,1025
 40046f4:	288d6215 	stw	r2,13704(r5)
 40046f8:	003fd506 	br	4004650 <_malloc_trim_r+0x70>

040046fc <_free_r>:
 40046fc:	28004f26 	beq	r5,zero,400483c <_free_r+0x140>
 4004700:	defffd04 	addi	sp,sp,-12
 4004704:	dc400115 	stw	r17,4(sp)
 4004708:	dc000015 	stw	r16,0(sp)
 400470c:	2023883a 	mov	r17,r4
 4004710:	2821883a 	mov	r16,r5
 4004714:	dfc00215 	stw	ra,8(sp)
 4004718:	400d3080 	call	400d308 <__malloc_lock>
 400471c:	81ffff17 	ldw	r7,-4(r16)
 4004720:	00bfff84 	movi	r2,-2
 4004724:	80fffe04 	addi	r3,r16,-8
 4004728:	3884703a 	and	r2,r7,r2
 400472c:	01010074 	movhi	r4,1025
 4004730:	188d883a 	add	r6,r3,r2
 4004734:	21005d04 	addi	r4,r4,372
 4004738:	31400117 	ldw	r5,4(r6)
 400473c:	22000217 	ldw	r8,8(r4)
 4004740:	027fff04 	movi	r9,-4
 4004744:	2a4a703a 	and	r5,r5,r9
 4004748:	41806426 	beq	r8,r6,40048dc <_free_r+0x1e0>
 400474c:	31400115 	stw	r5,4(r6)
 4004750:	39c0004c 	andi	r7,r7,1
 4004754:	3151883a 	add	r8,r6,r5
 4004758:	3800281e 	bne	r7,zero,40047fc <_free_r+0x100>
 400475c:	82bffe17 	ldw	r10,-8(r16)
 4004760:	42000117 	ldw	r8,4(r8)
 4004764:	01c10074 	movhi	r7,1025
 4004768:	1a87c83a 	sub	r3,r3,r10
 400476c:	1a400217 	ldw	r9,8(r3)
 4004770:	39c05f04 	addi	r7,r7,380
 4004774:	1285883a 	add	r2,r2,r10
 4004778:	4200004c 	andi	r8,r8,1
 400477c:	49c04c26 	beq	r9,r7,40048b0 <_free_r+0x1b4>
 4004780:	1a800317 	ldw	r10,12(r3)
 4004784:	4a800315 	stw	r10,12(r9)
 4004788:	52400215 	stw	r9,8(r10)
 400478c:	40007126 	beq	r8,zero,4004954 <_free_r+0x258>
 4004790:	11400054 	ori	r5,r2,1
 4004794:	19400115 	stw	r5,4(r3)
 4004798:	30800015 	stw	r2,0(r6)
 400479c:	11408028 	cmpgeui	r5,r2,512
 40047a0:	28002c1e 	bne	r5,zero,4004854 <_free_r+0x158>
 40047a4:	100ad0fa 	srli	r5,r2,3
 40047a8:	100cd17a 	srli	r6,r2,5
 40047ac:	00800044 	movi	r2,1
 40047b0:	29400044 	addi	r5,r5,1
 40047b4:	280a90fa 	slli	r5,r5,3
 40047b8:	21c00117 	ldw	r7,4(r4)
 40047bc:	1184983a 	sll	r2,r2,r6
 40047c0:	214b883a 	add	r5,r4,r5
 40047c4:	29800017 	ldw	r6,0(r5)
 40047c8:	11c4b03a 	or	r2,r2,r7
 40047cc:	29fffe04 	addi	r7,r5,-8
 40047d0:	19c00315 	stw	r7,12(r3)
 40047d4:	19800215 	stw	r6,8(r3)
 40047d8:	20800115 	stw	r2,4(r4)
 40047dc:	28c00015 	stw	r3,0(r5)
 40047e0:	30c00315 	stw	r3,12(r6)
 40047e4:	8809883a 	mov	r4,r17
 40047e8:	dfc00217 	ldw	ra,8(sp)
 40047ec:	dc400117 	ldw	r17,4(sp)
 40047f0:	dc000017 	ldw	r16,0(sp)
 40047f4:	dec00304 	addi	sp,sp,12
 40047f8:	400d32c1 	jmpi	400d32c <__malloc_unlock>
 40047fc:	41c00117 	ldw	r7,4(r8)
 4004800:	39c0004c 	andi	r7,r7,1
 4004804:	38000e1e 	bne	r7,zero,4004840 <_free_r+0x144>
 4004808:	01c10074 	movhi	r7,1025
 400480c:	1145883a 	add	r2,r2,r5
 4004810:	39c05f04 	addi	r7,r7,380
 4004814:	31400217 	ldw	r5,8(r6)
 4004818:	12400054 	ori	r9,r2,1
 400481c:	1891883a 	add	r8,r3,r2
 4004820:	29c05226 	beq	r5,r7,400496c <_free_r+0x270>
 4004824:	31800317 	ldw	r6,12(r6)
 4004828:	29800315 	stw	r6,12(r5)
 400482c:	31400215 	stw	r5,8(r6)
 4004830:	1a400115 	stw	r9,4(r3)
 4004834:	40800015 	stw	r2,0(r8)
 4004838:	003fd806 	br	400479c <_free_r+0xa0>
 400483c:	f800283a 	ret
 4004840:	11400054 	ori	r5,r2,1
 4004844:	817fff15 	stw	r5,-4(r16)
 4004848:	30800015 	stw	r2,0(r6)
 400484c:	11408028 	cmpgeui	r5,r2,512
 4004850:	283fd426 	beq	r5,zero,40047a4 <_free_r+0xa8>
 4004854:	100ad27a 	srli	r5,r2,9
 4004858:	29800168 	cmpgeui	r6,r5,5
 400485c:	3000341e 	bne	r6,zero,4004930 <_free_r+0x234>
 4004860:	100ad1ba 	srli	r5,r2,6
 4004864:	29800e44 	addi	r6,r5,57
 4004868:	300c90fa 	slli	r6,r6,3
 400486c:	29c00e04 	addi	r7,r5,56
 4004870:	218d883a 	add	r6,r4,r6
 4004874:	31400017 	ldw	r5,0(r6)
 4004878:	31bffe04 	addi	r6,r6,-8
 400487c:	31404226 	beq	r6,r5,4004988 <_free_r+0x28c>
 4004880:	01ffff04 	movi	r7,-4
 4004884:	29000117 	ldw	r4,4(r5)
 4004888:	21c8703a 	and	r4,r4,r7
 400488c:	1100022e 	bgeu	r2,r4,4004898 <_free_r+0x19c>
 4004890:	29400217 	ldw	r5,8(r5)
 4004894:	317ffb1e 	bne	r6,r5,4004884 <_free_r+0x188>
 4004898:	29800317 	ldw	r6,12(r5)
 400489c:	19800315 	stw	r6,12(r3)
 40048a0:	19400215 	stw	r5,8(r3)
 40048a4:	30c00215 	stw	r3,8(r6)
 40048a8:	28c00315 	stw	r3,12(r5)
 40048ac:	003fcd06 	br	40047e4 <_free_r+0xe8>
 40048b0:	40004d1e 	bne	r8,zero,40049e8 <_free_r+0x2ec>
 40048b4:	31000317 	ldw	r4,12(r6)
 40048b8:	31800217 	ldw	r6,8(r6)
 40048bc:	2885883a 	add	r2,r5,r2
 40048c0:	11400054 	ori	r5,r2,1
 40048c4:	31000315 	stw	r4,12(r6)
 40048c8:	21800215 	stw	r6,8(r4)
 40048cc:	19400115 	stw	r5,4(r3)
 40048d0:	1887883a 	add	r3,r3,r2
 40048d4:	18800015 	stw	r2,0(r3)
 40048d8:	003fc206 	br	40047e4 <_free_r+0xe8>
 40048dc:	39c0004c 	andi	r7,r7,1
 40048e0:	1145883a 	add	r2,r2,r5
 40048e4:	3800071e 	bne	r7,zero,4004904 <_free_r+0x208>
 40048e8:	81fffe17 	ldw	r7,-8(r16)
 40048ec:	19c7c83a 	sub	r3,r3,r7
 40048f0:	19400317 	ldw	r5,12(r3)
 40048f4:	19800217 	ldw	r6,8(r3)
 40048f8:	11c5883a 	add	r2,r2,r7
 40048fc:	31400315 	stw	r5,12(r6)
 4004900:	29800215 	stw	r6,8(r5)
 4004904:	01410074 	movhi	r5,1025
 4004908:	11800054 	ori	r6,r2,1
 400490c:	29464a17 	ldw	r5,6440(r5)
 4004910:	19800115 	stw	r6,4(r3)
 4004914:	20c00215 	stw	r3,8(r4)
 4004918:	117fb236 	bltu	r2,r5,40047e4 <_free_r+0xe8>
 400491c:	00810074 	movhi	r2,1025
 4004920:	114d5817 	ldw	r5,13664(r2)
 4004924:	8809883a 	mov	r4,r17
 4004928:	40045e00 	call	40045e0 <_malloc_trim_r>
 400492c:	003fad06 	br	40047e4 <_free_r+0xe8>
 4004930:	29800568 	cmpgeui	r6,r5,21
 4004934:	30000926 	beq	r6,zero,400495c <_free_r+0x260>
 4004938:	29801568 	cmpgeui	r6,r5,85
 400493c:	3000191e 	bne	r6,zero,40049a4 <_free_r+0x2a8>
 4004940:	100ad33a 	srli	r5,r2,12
 4004944:	29801bc4 	addi	r6,r5,111
 4004948:	300c90fa 	slli	r6,r6,3
 400494c:	29c01b84 	addi	r7,r5,110
 4004950:	003fc706 	br	4004870 <_free_r+0x174>
 4004954:	1145883a 	add	r2,r2,r5
 4004958:	003fae06 	br	4004814 <_free_r+0x118>
 400495c:	29801704 	addi	r6,r5,92
 4004960:	300c90fa 	slli	r6,r6,3
 4004964:	29c016c4 	addi	r7,r5,91
 4004968:	003fc106 	br	4004870 <_free_r+0x174>
 400496c:	20c00515 	stw	r3,20(r4)
 4004970:	20c00415 	stw	r3,16(r4)
 4004974:	19c00315 	stw	r7,12(r3)
 4004978:	19c00215 	stw	r7,8(r3)
 400497c:	1a400115 	stw	r9,4(r3)
 4004980:	40800015 	stw	r2,0(r8)
 4004984:	003f9706 	br	40047e4 <_free_r+0xe8>
 4004988:	380fd0ba 	srai	r7,r7,2
 400498c:	00800044 	movi	r2,1
 4004990:	22000117 	ldw	r8,4(r4)
 4004994:	11ce983a 	sll	r7,r2,r7
 4004998:	3a0eb03a 	or	r7,r7,r8
 400499c:	21c00115 	stw	r7,4(r4)
 40049a0:	003fbe06 	br	400489c <_free_r+0x1a0>
 40049a4:	29805568 	cmpgeui	r6,r5,341
 40049a8:	3000051e 	bne	r6,zero,40049c0 <_free_r+0x2c4>
 40049ac:	100ad3fa 	srli	r5,r2,15
 40049b0:	29801e04 	addi	r6,r5,120
 40049b4:	300c90fa 	slli	r6,r6,3
 40049b8:	29c01dc4 	addi	r7,r5,119
 40049bc:	003fac06 	br	4004870 <_free_r+0x174>
 40049c0:	29415568 	cmpgeui	r5,r5,1365
 40049c4:	2800051e 	bne	r5,zero,40049dc <_free_r+0x2e0>
 40049c8:	100ad4ba 	srli	r5,r2,18
 40049cc:	29801f44 	addi	r6,r5,125
 40049d0:	300c90fa 	slli	r6,r6,3
 40049d4:	29c01f04 	addi	r7,r5,124
 40049d8:	003fa506 	br	4004870 <_free_r+0x174>
 40049dc:	0180fe04 	movi	r6,1016
 40049e0:	01c01f84 	movi	r7,126
 40049e4:	003fa206 	br	4004870 <_free_r+0x174>
 40049e8:	11000054 	ori	r4,r2,1
 40049ec:	19000115 	stw	r4,4(r3)
 40049f0:	30800015 	stw	r2,0(r6)
 40049f4:	003f7b06 	br	40047e4 <_free_r+0xe8>

040049f8 <_fwalk>:
 40049f8:	defffa04 	addi	sp,sp,-24
 40049fc:	dd000415 	stw	r20,16(sp)
 4004a00:	dcc00315 	stw	r19,12(sp)
 4004a04:	dc800215 	stw	r18,8(sp)
 4004a08:	dfc00515 	stw	ra,20(sp)
 4004a0c:	dc400115 	stw	r17,4(sp)
 4004a10:	dc000015 	stw	r16,0(sp)
 4004a14:	2827883a 	mov	r19,r5
 4004a18:	2480b804 	addi	r18,r4,736
 4004a1c:	0029883a 	mov	r20,zero
 4004a20:	94400117 	ldw	r17,4(r18)
 4004a24:	94000217 	ldw	r16,8(r18)
 4004a28:	8c7fffc4 	addi	r17,r17,-1
 4004a2c:	88000d16 	blt	r17,zero,4004a64 <_fwalk+0x6c>
 4004a30:	8080030b 	ldhu	r2,12(r16)
 4004a34:	8c7fffc4 	addi	r17,r17,-1
 4004a38:	108000b0 	cmpltui	r2,r2,2
 4004a3c:	1000061e 	bne	r2,zero,4004a58 <_fwalk+0x60>
 4004a40:	8080038f 	ldh	r2,14(r16)
 4004a44:	8009883a 	mov	r4,r16
 4004a48:	10bfffe0 	cmpeqi	r2,r2,-1
 4004a4c:	1000021e 	bne	r2,zero,4004a58 <_fwalk+0x60>
 4004a50:	983ee83a 	callr	r19
 4004a54:	a0a8b03a 	or	r20,r20,r2
 4004a58:	88bfffd8 	cmpnei	r2,r17,-1
 4004a5c:	84001a04 	addi	r16,r16,104
 4004a60:	103ff31e 	bne	r2,zero,4004a30 <_fwalk+0x38>
 4004a64:	94800017 	ldw	r18,0(r18)
 4004a68:	903fed1e 	bne	r18,zero,4004a20 <_fwalk+0x28>
 4004a6c:	a005883a 	mov	r2,r20
 4004a70:	dfc00517 	ldw	ra,20(sp)
 4004a74:	dd000417 	ldw	r20,16(sp)
 4004a78:	dcc00317 	ldw	r19,12(sp)
 4004a7c:	dc800217 	ldw	r18,8(sp)
 4004a80:	dc400117 	ldw	r17,4(sp)
 4004a84:	dc000017 	ldw	r16,0(sp)
 4004a88:	dec00604 	addi	sp,sp,24
 4004a8c:	f800283a 	ret

04004a90 <_fwalk_reent>:
 4004a90:	defff904 	addi	sp,sp,-28
 4004a94:	dd400515 	stw	r21,20(sp)
 4004a98:	dd000415 	stw	r20,16(sp)
 4004a9c:	dcc00315 	stw	r19,12(sp)
 4004aa0:	dc800215 	stw	r18,8(sp)
 4004aa4:	dfc00615 	stw	ra,24(sp)
 4004aa8:	dc400115 	stw	r17,4(sp)
 4004aac:	dc000015 	stw	r16,0(sp)
 4004ab0:	202b883a 	mov	r21,r4
 4004ab4:	2827883a 	mov	r19,r5
 4004ab8:	2480b804 	addi	r18,r4,736
 4004abc:	0029883a 	mov	r20,zero
 4004ac0:	94400117 	ldw	r17,4(r18)
 4004ac4:	94000217 	ldw	r16,8(r18)
 4004ac8:	8c7fffc4 	addi	r17,r17,-1
 4004acc:	88000e16 	blt	r17,zero,4004b08 <_fwalk_reent+0x78>
 4004ad0:	8080030b 	ldhu	r2,12(r16)
 4004ad4:	8c7fffc4 	addi	r17,r17,-1
 4004ad8:	108000b0 	cmpltui	r2,r2,2
 4004adc:	1000071e 	bne	r2,zero,4004afc <_fwalk_reent+0x6c>
 4004ae0:	8080038f 	ldh	r2,14(r16)
 4004ae4:	800b883a 	mov	r5,r16
 4004ae8:	a809883a 	mov	r4,r21
 4004aec:	10bfffe0 	cmpeqi	r2,r2,-1
 4004af0:	1000021e 	bne	r2,zero,4004afc <_fwalk_reent+0x6c>
 4004af4:	983ee83a 	callr	r19
 4004af8:	a0a8b03a 	or	r20,r20,r2
 4004afc:	88bfffd8 	cmpnei	r2,r17,-1
 4004b00:	84001a04 	addi	r16,r16,104
 4004b04:	103ff21e 	bne	r2,zero,4004ad0 <_fwalk_reent+0x40>
 4004b08:	94800017 	ldw	r18,0(r18)
 4004b0c:	903fec1e 	bne	r18,zero,4004ac0 <_fwalk_reent+0x30>
 4004b10:	a005883a 	mov	r2,r20
 4004b14:	dfc00617 	ldw	ra,24(sp)
 4004b18:	dd400517 	ldw	r21,20(sp)
 4004b1c:	dd000417 	ldw	r20,16(sp)
 4004b20:	dcc00317 	ldw	r19,12(sp)
 4004b24:	dc800217 	ldw	r18,8(sp)
 4004b28:	dc400117 	ldw	r17,4(sp)
 4004b2c:	dc000017 	ldw	r16,0(sp)
 4004b30:	dec00704 	addi	sp,sp,28
 4004b34:	f800283a 	ret

04004b38 <__localeconv_l>:
 4004b38:	20803c04 	addi	r2,r4,240
 4004b3c:	f800283a 	ret

04004b40 <_localeconv_r>:
 4004b40:	00810074 	movhi	r2,1025
 4004b44:	10819b04 	addi	r2,r2,1644
 4004b48:	f800283a 	ret

04004b4c <localeconv>:
 4004b4c:	00810074 	movhi	r2,1025
 4004b50:	10819b04 	addi	r2,r2,1644
 4004b54:	f800283a 	ret

04004b58 <__swhatbuf_r>:
 4004b58:	deffea04 	addi	sp,sp,-88
 4004b5c:	dc001215 	stw	r16,72(sp)
 4004b60:	2821883a 	mov	r16,r5
 4004b64:	2940038f 	ldh	r5,14(r5)
 4004b68:	dc801415 	stw	r18,80(sp)
 4004b6c:	dc401315 	stw	r17,76(sp)
 4004b70:	dfc01515 	stw	ra,84(sp)
 4004b74:	3023883a 	mov	r17,r6
 4004b78:	3825883a 	mov	r18,r7
 4004b7c:	28001016 	blt	r5,zero,4004bc0 <__swhatbuf_r+0x68>
 4004b80:	d80d883a 	mov	r6,sp
 4004b84:	40084d40 	call	40084d4 <_fstat_r>
 4004b88:	10000d16 	blt	r2,zero,4004bc0 <__swhatbuf_r+0x68>
 4004b8c:	d8c00117 	ldw	r3,4(sp)
 4004b90:	00820004 	movi	r2,2048
 4004b94:	18fc000c 	andi	r3,r3,61440
 4004b98:	18c80020 	cmpeqi	r3,r3,8192
 4004b9c:	90c00015 	stw	r3,0(r18)
 4004ba0:	00c10004 	movi	r3,1024
 4004ba4:	88c00015 	stw	r3,0(r17)
 4004ba8:	dfc01517 	ldw	ra,84(sp)
 4004bac:	dc801417 	ldw	r18,80(sp)
 4004bb0:	dc401317 	ldw	r17,76(sp)
 4004bb4:	dc001217 	ldw	r16,72(sp)
 4004bb8:	dec01604 	addi	sp,sp,88
 4004bbc:	f800283a 	ret
 4004bc0:	8080030b 	ldhu	r2,12(r16)
 4004bc4:	90000015 	stw	zero,0(r18)
 4004bc8:	1080200c 	andi	r2,r2,128
 4004bcc:	10000426 	beq	r2,zero,4004be0 <__swhatbuf_r+0x88>
 4004bd0:	00801004 	movi	r2,64
 4004bd4:	88800015 	stw	r2,0(r17)
 4004bd8:	0005883a 	mov	r2,zero
 4004bdc:	003ff206 	br	4004ba8 <__swhatbuf_r+0x50>
 4004be0:	00810004 	movi	r2,1024
 4004be4:	88800015 	stw	r2,0(r17)
 4004be8:	0005883a 	mov	r2,zero
 4004bec:	003fee06 	br	4004ba8 <__swhatbuf_r+0x50>

04004bf0 <__smakebuf_r>:
 4004bf0:	2880030b 	ldhu	r2,12(r5)
 4004bf4:	defffa04 	addi	sp,sp,-24
 4004bf8:	dc000215 	stw	r16,8(sp)
 4004bfc:	dfc00515 	stw	ra,20(sp)
 4004c00:	dc800415 	stw	r18,16(sp)
 4004c04:	dc400315 	stw	r17,12(sp)
 4004c08:	1080008c 	andi	r2,r2,2
 4004c0c:	2821883a 	mov	r16,r5
 4004c10:	10000b26 	beq	r2,zero,4004c40 <__smakebuf_r+0x50>
 4004c14:	288010c4 	addi	r2,r5,67
 4004c18:	28800015 	stw	r2,0(r5)
 4004c1c:	28800415 	stw	r2,16(r5)
 4004c20:	00800044 	movi	r2,1
 4004c24:	28800515 	stw	r2,20(r5)
 4004c28:	dfc00517 	ldw	ra,20(sp)
 4004c2c:	dc800417 	ldw	r18,16(sp)
 4004c30:	dc400317 	ldw	r17,12(sp)
 4004c34:	dc000217 	ldw	r16,8(sp)
 4004c38:	dec00604 	addi	sp,sp,24
 4004c3c:	f800283a 	ret
 4004c40:	d9c00104 	addi	r7,sp,4
 4004c44:	d80d883a 	mov	r6,sp
 4004c48:	2023883a 	mov	r17,r4
 4004c4c:	4004b580 	call	4004b58 <__swhatbuf_r>
 4004c50:	d9000117 	ldw	r4,4(sp)
 4004c54:	1025883a 	mov	r18,r2
 4004c58:	2000131e 	bne	r4,zero,4004ca8 <__smakebuf_r+0xb8>
 4004c5c:	d9400017 	ldw	r5,0(sp)
 4004c60:	8809883a 	mov	r4,r17
 4004c64:	4004d300 	call	4004d30 <_malloc_r>
 4004c68:	10001c26 	beq	r2,zero,4004cdc <__smakebuf_r+0xec>
 4004c6c:	01010034 	movhi	r4,1024
 4004c70:	2110a904 	addi	r4,r4,17060
 4004c74:	80c0030b 	ldhu	r3,12(r16)
 4004c78:	89000f15 	stw	r4,60(r17)
 4004c7c:	80800015 	stw	r2,0(r16)
 4004c80:	80800415 	stw	r2,16(r16)
 4004c84:	d8800017 	ldw	r2,0(sp)
 4004c88:	d9400117 	ldw	r5,4(sp)
 4004c8c:	18c02014 	ori	r3,r3,128
 4004c90:	80c0030d 	sth	r3,12(r16)
 4004c94:	80800515 	stw	r2,20(r16)
 4004c98:	28001d1e 	bne	r5,zero,4004d10 <__smakebuf_r+0x120>
 4004c9c:	90c6b03a 	or	r3,r18,r3
 4004ca0:	80c0030d 	sth	r3,12(r16)
 4004ca4:	003fe006 	br	4004c28 <__smakebuf_r+0x38>
 4004ca8:	8140038f 	ldh	r5,14(r16)
 4004cac:	8809883a 	mov	r4,r17
 4004cb0:	40089f00 	call	40089f0 <_isatty_r>
 4004cb4:	103fe926 	beq	r2,zero,4004c5c <__smakebuf_r+0x6c>
 4004cb8:	8080030b 	ldhu	r2,12(r16)
 4004cbc:	80c010c4 	addi	r3,r16,67
 4004cc0:	80c00015 	stw	r3,0(r16)
 4004cc4:	10800054 	ori	r2,r2,1
 4004cc8:	8080030d 	sth	r2,12(r16)
 4004ccc:	00800044 	movi	r2,1
 4004cd0:	80c00415 	stw	r3,16(r16)
 4004cd4:	80800515 	stw	r2,20(r16)
 4004cd8:	003fe006 	br	4004c5c <__smakebuf_r+0x6c>
 4004cdc:	8080030b 	ldhu	r2,12(r16)
 4004ce0:	10c0800c 	andi	r3,r2,512
 4004ce4:	183fd01e 	bne	r3,zero,4004c28 <__smakebuf_r+0x38>
 4004ce8:	00ffff04 	movi	r3,-4
 4004cec:	10c4703a 	and	r2,r2,r3
 4004cf0:	10800094 	ori	r2,r2,2
 4004cf4:	80c010c4 	addi	r3,r16,67
 4004cf8:	8080030d 	sth	r2,12(r16)
 4004cfc:	00800044 	movi	r2,1
 4004d00:	80c00015 	stw	r3,0(r16)
 4004d04:	80c00415 	stw	r3,16(r16)
 4004d08:	80800515 	stw	r2,20(r16)
 4004d0c:	003fc606 	br	4004c28 <__smakebuf_r+0x38>
 4004d10:	8140038f 	ldh	r5,14(r16)
 4004d14:	8809883a 	mov	r4,r17
 4004d18:	40089f00 	call	40089f0 <_isatty_r>
 4004d1c:	80c0030b 	ldhu	r3,12(r16)
 4004d20:	103fde26 	beq	r2,zero,4004c9c <__smakebuf_r+0xac>
 4004d24:	18ffff0c 	andi	r3,r3,65532
 4004d28:	18c00054 	ori	r3,r3,1
 4004d2c:	003fdb06 	br	4004c9c <__smakebuf_r+0xac>

04004d30 <_malloc_r>:
 4004d30:	defff604 	addi	sp,sp,-40
 4004d34:	dc400115 	stw	r17,4(sp)
 4004d38:	2c4002c4 	addi	r17,r5,11
 4004d3c:	dc800215 	stw	r18,8(sp)
 4004d40:	dfc00915 	stw	ra,36(sp)
 4004d44:	df000815 	stw	fp,32(sp)
 4004d48:	ddc00715 	stw	r23,28(sp)
 4004d4c:	dd800615 	stw	r22,24(sp)
 4004d50:	dd400515 	stw	r21,20(sp)
 4004d54:	dd000415 	stw	r20,16(sp)
 4004d58:	dcc00315 	stw	r19,12(sp)
 4004d5c:	dc000015 	stw	r16,0(sp)
 4004d60:	888005e8 	cmpgeui	r2,r17,23
 4004d64:	2025883a 	mov	r18,r4
 4004d68:	10001b1e 	bne	r2,zero,4004dd8 <_malloc_r+0xa8>
 4004d6c:	29400468 	cmpgeui	r5,r5,17
 4004d70:	2800821e 	bne	r5,zero,4004f7c <_malloc_r+0x24c>
 4004d74:	400d3080 	call	400d308 <__malloc_lock>
 4004d78:	04400404 	movi	r17,16
 4004d7c:	01c00084 	movi	r7,2
 4004d80:	00800604 	movi	r2,24
 4004d84:	04c10074 	movhi	r19,1025
 4004d88:	9cc05d04 	addi	r19,r19,372
 4004d8c:	9885883a 	add	r2,r19,r2
 4004d90:	14000117 	ldw	r16,4(r2)
 4004d94:	10fffe04 	addi	r3,r2,-8
 4004d98:	80c08b26 	beq	r16,r3,4004fc8 <_malloc_r+0x298>
 4004d9c:	80800117 	ldw	r2,4(r16)
 4004da0:	81000317 	ldw	r4,12(r16)
 4004da4:	00ffff04 	movi	r3,-4
 4004da8:	10c4703a 	and	r2,r2,r3
 4004dac:	81400217 	ldw	r5,8(r16)
 4004db0:	8085883a 	add	r2,r16,r2
 4004db4:	10c00117 	ldw	r3,4(r2)
 4004db8:	29000315 	stw	r4,12(r5)
 4004dbc:	21400215 	stw	r5,8(r4)
 4004dc0:	18c00054 	ori	r3,r3,1
 4004dc4:	10c00115 	stw	r3,4(r2)
 4004dc8:	9009883a 	mov	r4,r18
 4004dcc:	400d32c0 	call	400d32c <__malloc_unlock>
 4004dd0:	80800204 	addi	r2,r16,8
 4004dd4:	00006c06 	br	4004f88 <_malloc_r+0x258>
 4004dd8:	00bffe04 	movi	r2,-8
 4004ddc:	88a2703a 	and	r17,r17,r2
 4004de0:	88006616 	blt	r17,zero,4004f7c <_malloc_r+0x24c>
 4004de4:	89406536 	bltu	r17,r5,4004f7c <_malloc_r+0x24c>
 4004de8:	400d3080 	call	400d308 <__malloc_lock>
 4004dec:	88807e28 	cmpgeui	r2,r17,504
 4004df0:	10012226 	beq	r2,zero,400527c <_malloc_r+0x54c>
 4004df4:	8804d27a 	srli	r2,r17,9
 4004df8:	10006f26 	beq	r2,zero,4004fb8 <_malloc_r+0x288>
 4004dfc:	10c00168 	cmpgeui	r3,r2,5
 4004e00:	1800fe1e 	bne	r3,zero,40051fc <_malloc_r+0x4cc>
 4004e04:	8804d1ba 	srli	r2,r17,6
 4004e08:	11c00e44 	addi	r7,r2,57
 4004e0c:	380890fa 	slli	r4,r7,3
 4004e10:	12000e04 	addi	r8,r2,56
 4004e14:	04c10074 	movhi	r19,1025
 4004e18:	9cc05d04 	addi	r19,r19,372
 4004e1c:	9909883a 	add	r4,r19,r4
 4004e20:	24000117 	ldw	r16,4(r4)
 4004e24:	213ffe04 	addi	r4,r4,-8
 4004e28:	24000b26 	beq	r4,r16,4004e58 <_malloc_r+0x128>
 4004e2c:	01bfff04 	movi	r6,-4
 4004e30:	00000306 	br	4004e40 <_malloc_r+0x110>
 4004e34:	1800d60e 	bge	r3,zero,4005190 <_malloc_r+0x460>
 4004e38:	84000317 	ldw	r16,12(r16)
 4004e3c:	24000626 	beq	r4,r16,4004e58 <_malloc_r+0x128>
 4004e40:	80800117 	ldw	r2,4(r16)
 4004e44:	1184703a 	and	r2,r2,r6
 4004e48:	1447c83a 	sub	r3,r2,r17
 4004e4c:	19400408 	cmpgei	r5,r3,16
 4004e50:	283ff826 	beq	r5,zero,4004e34 <_malloc_r+0x104>
 4004e54:	400f883a 	mov	r7,r8
 4004e58:	9c000417 	ldw	r16,16(r19)
 4004e5c:	02410074 	movhi	r9,1025
 4004e60:	4a405f04 	addi	r9,r9,380
 4004e64:	82405f26 	beq	r16,r9,4004fe4 <_malloc_r+0x2b4>
 4004e68:	80c00117 	ldw	r3,4(r16)
 4004e6c:	00bfff04 	movi	r2,-4
 4004e70:	1884703a 	and	r2,r3,r2
 4004e74:	1447c83a 	sub	r3,r2,r17
 4004e78:	19000410 	cmplti	r4,r3,16
 4004e7c:	20010a26 	beq	r4,zero,40052a8 <_malloc_r+0x578>
 4004e80:	9a400515 	stw	r9,20(r19)
 4004e84:	9a400415 	stw	r9,16(r19)
 4004e88:	1800ff0e 	bge	r3,zero,4005288 <_malloc_r+0x558>
 4004e8c:	10c08028 	cmpgeui	r3,r2,512
 4004e90:	1800c11e 	bne	r3,zero,4005198 <_malloc_r+0x468>
 4004e94:	1006d0fa 	srli	r3,r2,3
 4004e98:	1008d17a 	srli	r4,r2,5
 4004e9c:	00800044 	movi	r2,1
 4004ea0:	18c00044 	addi	r3,r3,1
 4004ea4:	180690fa 	slli	r3,r3,3
 4004ea8:	99400117 	ldw	r5,4(r19)
 4004eac:	1104983a 	sll	r2,r2,r4
 4004eb0:	98c7883a 	add	r3,r19,r3
 4004eb4:	19000017 	ldw	r4,0(r3)
 4004eb8:	1144b03a 	or	r2,r2,r5
 4004ebc:	197ffe04 	addi	r5,r3,-8
 4004ec0:	81400315 	stw	r5,12(r16)
 4004ec4:	81000215 	stw	r4,8(r16)
 4004ec8:	98800115 	stw	r2,4(r19)
 4004ecc:	1c000015 	stw	r16,0(r3)
 4004ed0:	24000315 	stw	r16,12(r4)
 4004ed4:	3807d0ba 	srai	r3,r7,2
 4004ed8:	01000044 	movi	r4,1
 4004edc:	20c8983a 	sll	r4,r4,r3
 4004ee0:	11004536 	bltu	r2,r4,4004ff8 <_malloc_r+0x2c8>
 4004ee4:	2086703a 	and	r3,r4,r2
 4004ee8:	18000a1e 	bne	r3,zero,4004f14 <_malloc_r+0x1e4>
 4004eec:	00ffff04 	movi	r3,-4
 4004ef0:	2109883a 	add	r4,r4,r4
 4004ef4:	38ce703a 	and	r7,r7,r3
 4004ef8:	2086703a 	and	r3,r4,r2
 4004efc:	39c00104 	addi	r7,r7,4
 4004f00:	1800041e 	bne	r3,zero,4004f14 <_malloc_r+0x1e4>
 4004f04:	2109883a 	add	r4,r4,r4
 4004f08:	2086703a 	and	r3,r4,r2
 4004f0c:	39c00104 	addi	r7,r7,4
 4004f10:	183ffc26 	beq	r3,zero,4004f04 <_malloc_r+0x1d4>
 4004f14:	02bfff04 	movi	r10,-4
 4004f18:	381690fa 	slli	r11,r7,3
 4004f1c:	3819883a 	mov	r12,r7
 4004f20:	9ad7883a 	add	r11,r19,r11
 4004f24:	5811883a 	mov	r8,r11
 4004f28:	40800317 	ldw	r2,12(r8)
 4004f2c:	4080bc26 	beq	r8,r2,4005220 <_malloc_r+0x4f0>
 4004f30:	10c00117 	ldw	r3,4(r2)
 4004f34:	1021883a 	mov	r16,r2
 4004f38:	10800317 	ldw	r2,12(r2)
 4004f3c:	1a86703a 	and	r3,r3,r10
 4004f40:	1c4bc83a 	sub	r5,r3,r17
 4004f44:	29800410 	cmplti	r6,r5,16
 4004f48:	3000ba26 	beq	r6,zero,4005234 <_malloc_r+0x504>
 4004f4c:	283ff716 	blt	r5,zero,4004f2c <_malloc_r+0x1fc>
 4004f50:	80c7883a 	add	r3,r16,r3
 4004f54:	19400117 	ldw	r5,4(r3)
 4004f58:	81800217 	ldw	r6,8(r16)
 4004f5c:	9009883a 	mov	r4,r18
 4004f60:	29400054 	ori	r5,r5,1
 4004f64:	19400115 	stw	r5,4(r3)
 4004f68:	30800315 	stw	r2,12(r6)
 4004f6c:	11800215 	stw	r6,8(r2)
 4004f70:	400d32c0 	call	400d32c <__malloc_unlock>
 4004f74:	80800204 	addi	r2,r16,8
 4004f78:	00000306 	br	4004f88 <_malloc_r+0x258>
 4004f7c:	00800304 	movi	r2,12
 4004f80:	90800015 	stw	r2,0(r18)
 4004f84:	0005883a 	mov	r2,zero
 4004f88:	dfc00917 	ldw	ra,36(sp)
 4004f8c:	df000817 	ldw	fp,32(sp)
 4004f90:	ddc00717 	ldw	r23,28(sp)
 4004f94:	dd800617 	ldw	r22,24(sp)
 4004f98:	dd400517 	ldw	r21,20(sp)
 4004f9c:	dd000417 	ldw	r20,16(sp)
 4004fa0:	dcc00317 	ldw	r19,12(sp)
 4004fa4:	dc800217 	ldw	r18,8(sp)
 4004fa8:	dc400117 	ldw	r17,4(sp)
 4004fac:	dc000017 	ldw	r16,0(sp)
 4004fb0:	dec00a04 	addi	sp,sp,40
 4004fb4:	f800283a 	ret
 4004fb8:	01008004 	movi	r4,512
 4004fbc:	01c01004 	movi	r7,64
 4004fc0:	02000fc4 	movi	r8,63
 4004fc4:	003f9306 	br	4004e14 <_malloc_r+0xe4>
 4004fc8:	14000317 	ldw	r16,12(r2)
 4004fcc:	39c00084 	addi	r7,r7,2
 4004fd0:	143f721e 	bne	r2,r16,4004d9c <_malloc_r+0x6c>
 4004fd4:	9c000417 	ldw	r16,16(r19)
 4004fd8:	02410074 	movhi	r9,1025
 4004fdc:	4a405f04 	addi	r9,r9,380
 4004fe0:	827fa11e 	bne	r16,r9,4004e68 <_malloc_r+0x138>
 4004fe4:	3807d0ba 	srai	r3,r7,2
 4004fe8:	01000044 	movi	r4,1
 4004fec:	98800117 	ldw	r2,4(r19)
 4004ff0:	20c8983a 	sll	r4,r4,r3
 4004ff4:	113fbb2e 	bgeu	r2,r4,4004ee4 <_malloc_r+0x1b4>
 4004ff8:	9c000217 	ldw	r16,8(r19)
 4004ffc:	00bfff04 	movi	r2,-4
 4005000:	85400117 	ldw	r21,4(r16)
 4005004:	a8ac703a 	and	r22,r21,r2
 4005008:	b4400336 	bltu	r22,r17,4005018 <_malloc_r+0x2e8>
 400500c:	b445c83a 	sub	r2,r22,r17
 4005010:	10c00408 	cmpgei	r3,r2,16
 4005014:	1800541e 	bne	r3,zero,4005168 <_malloc_r+0x438>
 4005018:	00810074 	movhi	r2,1025
 400501c:	10864917 	ldw	r2,6436(r2)
 4005020:	00c10074 	movhi	r3,1025
 4005024:	1d4d5817 	ldw	r21,13664(r3)
 4005028:	10bfffd8 	cmpnei	r2,r2,-1
 400502c:	85b9883a 	add	fp,r16,r22
 4005030:	8d6b883a 	add	r21,r17,r21
 4005034:	1000d626 	beq	r2,zero,4005390 <_malloc_r+0x660>
 4005038:	ad4403c4 	addi	r21,r21,4111
 400503c:	00bc0004 	movi	r2,-4096
 4005040:	a8aa703a 	and	r21,r21,r2
 4005044:	a80b883a 	mov	r5,r21
 4005048:	9009883a 	mov	r4,r18
 400504c:	40068700 	call	4006870 <_sbrk_r>
 4005050:	102f883a 	mov	r23,r2
 4005054:	10bfffd8 	cmpnei	r2,r2,-1
 4005058:	1000a826 	beq	r2,zero,40052fc <_malloc_r+0x5cc>
 400505c:	bf00a636 	bltu	r23,fp,40052f8 <_malloc_r+0x5c8>
 4005060:	00810074 	movhi	r2,1025
 4005064:	150d6217 	ldw	r20,13704(r2)
 4005068:	ad29883a 	add	r20,r21,r20
 400506c:	150d6215 	stw	r20,13704(r2)
 4005070:	a007883a 	mov	r3,r20
 4005074:	e5c0ec26 	beq	fp,r23,4005428 <_malloc_r+0x6f8>
 4005078:	00810074 	movhi	r2,1025
 400507c:	10864917 	ldw	r2,6436(r2)
 4005080:	10bfffd8 	cmpnei	r2,r2,-1
 4005084:	1000ef26 	beq	r2,zero,4005444 <_malloc_r+0x714>
 4005088:	bf39c83a 	sub	fp,r23,fp
 400508c:	e0c7883a 	add	r3,fp,r3
 4005090:	00810074 	movhi	r2,1025
 4005094:	10cd6215 	stw	r3,13704(r2)
 4005098:	bf0001cc 	andi	fp,r23,7
 400509c:	e000c526 	beq	fp,zero,40053b4 <_malloc_r+0x684>
 40050a0:	bf2fc83a 	sub	r23,r23,fp
 40050a4:	bdc00204 	addi	r23,r23,8
 40050a8:	05040204 	movi	r20,4104
 40050ac:	a729c83a 	sub	r20,r20,fp
 40050b0:	bd6b883a 	add	r21,r23,r21
 40050b4:	a569c83a 	sub	r20,r20,r21
 40050b8:	a503ffcc 	andi	r20,r20,4095
 40050bc:	a00b883a 	mov	r5,r20
 40050c0:	9009883a 	mov	r4,r18
 40050c4:	40068700 	call	4006870 <_sbrk_r>
 40050c8:	10ffffe0 	cmpeqi	r3,r2,-1
 40050cc:	1800f31e 	bne	r3,zero,400549c <_malloc_r+0x76c>
 40050d0:	15c5c83a 	sub	r2,r2,r23
 40050d4:	152b883a 	add	r21,r2,r20
 40050d8:	00810074 	movhi	r2,1025
 40050dc:	114d6217 	ldw	r5,13704(r2)
 40050e0:	9dc00215 	stw	r23,8(r19)
 40050e4:	ad400054 	ori	r21,r21,1
 40050e8:	a169883a 	add	r20,r20,r5
 40050ec:	150d6215 	stw	r20,13704(r2)
 40050f0:	bd400115 	stw	r21,4(r23)
 40050f4:	84c0d626 	beq	r16,r19,4005450 <_malloc_r+0x720>
 40050f8:	b0800428 	cmpgeui	r2,r22,16
 40050fc:	1000d626 	beq	r2,zero,4005458 <_malloc_r+0x728>
 4005100:	80c00117 	ldw	r3,4(r16)
 4005104:	013ffe04 	movi	r4,-8
 4005108:	b0bffd04 	addi	r2,r22,-12
 400510c:	1104703a 	and	r2,r2,r4
 4005110:	18c0004c 	andi	r3,r3,1
 4005114:	1886b03a 	or	r3,r3,r2
 4005118:	80c00115 	stw	r3,4(r16)
 400511c:	01000144 	movi	r4,5
 4005120:	8087883a 	add	r3,r16,r2
 4005124:	19000115 	stw	r4,4(r3)
 4005128:	19000215 	stw	r4,8(r3)
 400512c:	10800428 	cmpgeui	r2,r2,16
 4005130:	1000df1e 	bne	r2,zero,40054b0 <_malloc_r+0x780>
 4005134:	bd400117 	ldw	r21,4(r23)
 4005138:	b821883a 	mov	r16,r23
 400513c:	00810074 	movhi	r2,1025
 4005140:	108d5717 	ldw	r2,13660(r2)
 4005144:	1500022e 	bgeu	r2,r20,4005150 <_malloc_r+0x420>
 4005148:	00810074 	movhi	r2,1025
 400514c:	150d5715 	stw	r20,13660(r2)
 4005150:	00810074 	movhi	r2,1025
 4005154:	108d5617 	ldw	r2,13656(r2)
 4005158:	15006a2e 	bgeu	r2,r20,4005304 <_malloc_r+0x5d4>
 400515c:	00810074 	movhi	r2,1025
 4005160:	150d5615 	stw	r20,13656(r2)
 4005164:	00006706 	br	4005304 <_malloc_r+0x5d4>
 4005168:	88c00054 	ori	r3,r17,1
 400516c:	80c00115 	stw	r3,4(r16)
 4005170:	8463883a 	add	r17,r16,r17
 4005174:	10800054 	ori	r2,r2,1
 4005178:	9c400215 	stw	r17,8(r19)
 400517c:	88800115 	stw	r2,4(r17)
 4005180:	9009883a 	mov	r4,r18
 4005184:	400d32c0 	call	400d32c <__malloc_unlock>
 4005188:	80800204 	addi	r2,r16,8
 400518c:	003f7e06 	br	4004f88 <_malloc_r+0x258>
 4005190:	81000317 	ldw	r4,12(r16)
 4005194:	003f0506 	br	4004dac <_malloc_r+0x7c>
 4005198:	1006d27a 	srli	r3,r2,9
 400519c:	19000168 	cmpgeui	r4,r3,5
 40051a0:	20005026 	beq	r4,zero,40052e4 <_malloc_r+0x5b4>
 40051a4:	19000568 	cmpgeui	r4,r3,21
 40051a8:	20008c1e 	bne	r4,zero,40053dc <_malloc_r+0x6ac>
 40051ac:	19401704 	addi	r5,r3,92
 40051b0:	280a90fa 	slli	r5,r5,3
 40051b4:	190016c4 	addi	r4,r3,91
 40051b8:	994b883a 	add	r5,r19,r5
 40051bc:	28c00017 	ldw	r3,0(r5)
 40051c0:	297ffe04 	addi	r5,r5,-8
 40051c4:	28c07426 	beq	r5,r3,4005398 <_malloc_r+0x668>
 40051c8:	01bfff04 	movi	r6,-4
 40051cc:	19000117 	ldw	r4,4(r3)
 40051d0:	2188703a 	and	r4,r4,r6
 40051d4:	1100022e 	bgeu	r2,r4,40051e0 <_malloc_r+0x4b0>
 40051d8:	18c00217 	ldw	r3,8(r3)
 40051dc:	28fffb1e 	bne	r5,r3,40051cc <_malloc_r+0x49c>
 40051e0:	19400317 	ldw	r5,12(r3)
 40051e4:	98800117 	ldw	r2,4(r19)
 40051e8:	81400315 	stw	r5,12(r16)
 40051ec:	80c00215 	stw	r3,8(r16)
 40051f0:	2c000215 	stw	r16,8(r5)
 40051f4:	1c000315 	stw	r16,12(r3)
 40051f8:	003f3606 	br	4004ed4 <_malloc_r+0x1a4>
 40051fc:	10c00568 	cmpgeui	r3,r2,21
 4005200:	18004a26 	beq	r3,zero,400532c <_malloc_r+0x5fc>
 4005204:	10c01568 	cmpgeui	r3,r2,85
 4005208:	18007b1e 	bne	r3,zero,40053f8 <_malloc_r+0x6c8>
 400520c:	8804d33a 	srli	r2,r17,12
 4005210:	11c01bc4 	addi	r7,r2,111
 4005214:	380890fa 	slli	r4,r7,3
 4005218:	12001b84 	addi	r8,r2,110
 400521c:	003efd06 	br	4004e14 <_malloc_r+0xe4>
 4005220:	63000044 	addi	r12,r12,1
 4005224:	608000cc 	andi	r2,r12,3
 4005228:	42000204 	addi	r8,r8,8
 400522c:	103f3e1e 	bne	r2,zero,4004f28 <_malloc_r+0x1f8>
 4005230:	00004506 	br	4005348 <_malloc_r+0x618>
 4005234:	81000217 	ldw	r4,8(r16)
 4005238:	89800054 	ori	r6,r17,1
 400523c:	81800115 	stw	r6,4(r16)
 4005240:	20800315 	stw	r2,12(r4)
 4005244:	11000215 	stw	r4,8(r2)
 4005248:	8463883a 	add	r17,r16,r17
 400524c:	9c400515 	stw	r17,20(r19)
 4005250:	9c400415 	stw	r17,16(r19)
 4005254:	28800054 	ori	r2,r5,1
 4005258:	88800115 	stw	r2,4(r17)
 400525c:	8a400315 	stw	r9,12(r17)
 4005260:	8a400215 	stw	r9,8(r17)
 4005264:	80c7883a 	add	r3,r16,r3
 4005268:	19400015 	stw	r5,0(r3)
 400526c:	9009883a 	mov	r4,r18
 4005270:	400d32c0 	call	400d32c <__malloc_unlock>
 4005274:	80800204 	addi	r2,r16,8
 4005278:	003f4306 	br	4004f88 <_malloc_r+0x258>
 400527c:	880ed0fa 	srli	r7,r17,3
 4005280:	88800204 	addi	r2,r17,8
 4005284:	003ebf06 	br	4004d84 <_malloc_r+0x54>
 4005288:	8085883a 	add	r2,r16,r2
 400528c:	10c00117 	ldw	r3,4(r2)
 4005290:	9009883a 	mov	r4,r18
 4005294:	18c00054 	ori	r3,r3,1
 4005298:	10c00115 	stw	r3,4(r2)
 400529c:	400d32c0 	call	400d32c <__malloc_unlock>
 40052a0:	80800204 	addi	r2,r16,8
 40052a4:	003f3806 	br	4004f88 <_malloc_r+0x258>
 40052a8:	89000054 	ori	r4,r17,1
 40052ac:	81000115 	stw	r4,4(r16)
 40052b0:	8463883a 	add	r17,r16,r17
 40052b4:	9c400515 	stw	r17,20(r19)
 40052b8:	9c400415 	stw	r17,16(r19)
 40052bc:	19000054 	ori	r4,r3,1
 40052c0:	89000115 	stw	r4,4(r17)
 40052c4:	8085883a 	add	r2,r16,r2
 40052c8:	8a400315 	stw	r9,12(r17)
 40052cc:	8a400215 	stw	r9,8(r17)
 40052d0:	10c00015 	stw	r3,0(r2)
 40052d4:	9009883a 	mov	r4,r18
 40052d8:	400d32c0 	call	400d32c <__malloc_unlock>
 40052dc:	80800204 	addi	r2,r16,8
 40052e0:	003f2906 	br	4004f88 <_malloc_r+0x258>
 40052e4:	1006d1ba 	srli	r3,r2,6
 40052e8:	19400e44 	addi	r5,r3,57
 40052ec:	280a90fa 	slli	r5,r5,3
 40052f0:	19000e04 	addi	r4,r3,56
 40052f4:	003fb006 	br	40051b8 <_malloc_r+0x488>
 40052f8:	84c04626 	beq	r16,r19,4005414 <_malloc_r+0x6e4>
 40052fc:	9c000217 	ldw	r16,8(r19)
 4005300:	85400117 	ldw	r21,4(r16)
 4005304:	00bfff04 	movi	r2,-4
 4005308:	a8aa703a 	and	r21,r21,r2
 400530c:	ac45c83a 	sub	r2,r21,r17
 4005310:	ac400236 	bltu	r21,r17,400531c <_malloc_r+0x5ec>
 4005314:	10c00408 	cmpgei	r3,r2,16
 4005318:	183f931e 	bne	r3,zero,4005168 <_malloc_r+0x438>
 400531c:	9009883a 	mov	r4,r18
 4005320:	400d32c0 	call	400d32c <__malloc_unlock>
 4005324:	0005883a 	mov	r2,zero
 4005328:	003f1706 	br	4004f88 <_malloc_r+0x258>
 400532c:	11c01704 	addi	r7,r2,92
 4005330:	380890fa 	slli	r4,r7,3
 4005334:	120016c4 	addi	r8,r2,91
 4005338:	003eb606 	br	4004e14 <_malloc_r+0xe4>
 400533c:	58800217 	ldw	r2,8(r11)
 4005340:	39ffffc4 	addi	r7,r7,-1
 4005344:	12c0701e 	bne	r2,r11,4005508 <_malloc_r+0x7d8>
 4005348:	388000cc 	andi	r2,r7,3
 400534c:	5afffe04 	addi	r11,r11,-8
 4005350:	103ffa1e 	bne	r2,zero,400533c <_malloc_r+0x60c>
 4005354:	98c00117 	ldw	r3,4(r19)
 4005358:	0104303a 	nor	r2,zero,r4
 400535c:	10c4703a 	and	r2,r2,r3
 4005360:	98800115 	stw	r2,4(r19)
 4005364:	2109883a 	add	r4,r4,r4
 4005368:	113f2336 	bltu	r2,r4,4004ff8 <_malloc_r+0x2c8>
 400536c:	203f2226 	beq	r4,zero,4004ff8 <_malloc_r+0x2c8>
 4005370:	2086703a 	and	r3,r4,r2
 4005374:	1800041e 	bne	r3,zero,4005388 <_malloc_r+0x658>
 4005378:	2109883a 	add	r4,r4,r4
 400537c:	2086703a 	and	r3,r4,r2
 4005380:	63000104 	addi	r12,r12,4
 4005384:	183ffc26 	beq	r3,zero,4005378 <_malloc_r+0x648>
 4005388:	600f883a 	mov	r7,r12
 400538c:	003ee206 	br	4004f18 <_malloc_r+0x1e8>
 4005390:	ad400404 	addi	r21,r21,16
 4005394:	003f2b06 	br	4005044 <_malloc_r+0x314>
 4005398:	2009d0ba 	srai	r4,r4,2
 400539c:	00800044 	movi	r2,1
 40053a0:	99800117 	ldw	r6,4(r19)
 40053a4:	1104983a 	sll	r2,r2,r4
 40053a8:	1184b03a 	or	r2,r2,r6
 40053ac:	98800115 	stw	r2,4(r19)
 40053b0:	003f8d06 	br	40051e8 <_malloc_r+0x4b8>
 40053b4:	bd69883a 	add	r20,r23,r21
 40053b8:	0529c83a 	sub	r20,zero,r20
 40053bc:	a503ffcc 	andi	r20,r20,4095
 40053c0:	a00b883a 	mov	r5,r20
 40053c4:	9009883a 	mov	r4,r18
 40053c8:	40068700 	call	4006870 <_sbrk_r>
 40053cc:	10ffffe0 	cmpeqi	r3,r2,-1
 40053d0:	183f3f26 	beq	r3,zero,40050d0 <_malloc_r+0x3a0>
 40053d4:	0029883a 	mov	r20,zero
 40053d8:	003f3f06 	br	40050d8 <_malloc_r+0x3a8>
 40053dc:	19001568 	cmpgeui	r4,r3,85
 40053e0:	2000201e 	bne	r4,zero,4005464 <_malloc_r+0x734>
 40053e4:	1006d33a 	srli	r3,r2,12
 40053e8:	19401bc4 	addi	r5,r3,111
 40053ec:	280a90fa 	slli	r5,r5,3
 40053f0:	19001b84 	addi	r4,r3,110
 40053f4:	003f7006 	br	40051b8 <_malloc_r+0x488>
 40053f8:	10c05568 	cmpgeui	r3,r2,341
 40053fc:	1800201e 	bne	r3,zero,4005480 <_malloc_r+0x750>
 4005400:	8804d3fa 	srli	r2,r17,15
 4005404:	11c01e04 	addi	r7,r2,120
 4005408:	380890fa 	slli	r4,r7,3
 400540c:	12001dc4 	addi	r8,r2,119
 4005410:	003e8006 	br	4004e14 <_malloc_r+0xe4>
 4005414:	00810074 	movhi	r2,1025
 4005418:	10cd6217 	ldw	r3,13704(r2)
 400541c:	a8c7883a 	add	r3,r21,r3
 4005420:	10cd6215 	stw	r3,13704(r2)
 4005424:	003f1406 	br	4005078 <_malloc_r+0x348>
 4005428:	e083ffcc 	andi	r2,fp,4095
 400542c:	103f121e 	bne	r2,zero,4005078 <_malloc_r+0x348>
 4005430:	9c000217 	ldw	r16,8(r19)
 4005434:	b56b883a 	add	r21,r22,r21
 4005438:	ad400054 	ori	r21,r21,1
 400543c:	85400115 	stw	r21,4(r16)
 4005440:	003f3e06 	br	400513c <_malloc_r+0x40c>
 4005444:	00810074 	movhi	r2,1025
 4005448:	15c64915 	stw	r23,6436(r2)
 400544c:	003f1206 	br	4005098 <_malloc_r+0x368>
 4005450:	b821883a 	mov	r16,r23
 4005454:	003f3906 	br	400513c <_malloc_r+0x40c>
 4005458:	00800044 	movi	r2,1
 400545c:	b8800115 	stw	r2,4(r23)
 4005460:	003fae06 	br	400531c <_malloc_r+0x5ec>
 4005464:	19005568 	cmpgeui	r4,r3,341
 4005468:	2000191e 	bne	r4,zero,40054d0 <_malloc_r+0x7a0>
 400546c:	1006d3fa 	srli	r3,r2,15
 4005470:	19401e04 	addi	r5,r3,120
 4005474:	280a90fa 	slli	r5,r5,3
 4005478:	19001dc4 	addi	r4,r3,119
 400547c:	003f4e06 	br	40051b8 <_malloc_r+0x488>
 4005480:	10815568 	cmpgeui	r2,r2,1365
 4005484:	1000191e 	bne	r2,zero,40054ec <_malloc_r+0x7bc>
 4005488:	8804d4ba 	srli	r2,r17,18
 400548c:	11c01f44 	addi	r7,r2,125
 4005490:	380890fa 	slli	r4,r7,3
 4005494:	12001f04 	addi	r8,r2,124
 4005498:	003e5e06 	br	4004e14 <_malloc_r+0xe4>
 400549c:	e73ffe04 	addi	fp,fp,-8
 40054a0:	af2b883a 	add	r21,r21,fp
 40054a4:	adebc83a 	sub	r21,r21,r23
 40054a8:	0029883a 	mov	r20,zero
 40054ac:	003f0a06 	br	40050d8 <_malloc_r+0x3a8>
 40054b0:	81400204 	addi	r5,r16,8
 40054b4:	9009883a 	mov	r4,r18
 40054b8:	40046fc0 	call	40046fc <_free_r>
 40054bc:	9c000217 	ldw	r16,8(r19)
 40054c0:	00810074 	movhi	r2,1025
 40054c4:	150d6217 	ldw	r20,13704(r2)
 40054c8:	85400117 	ldw	r21,4(r16)
 40054cc:	003f1b06 	br	400513c <_malloc_r+0x40c>
 40054d0:	18c15568 	cmpgeui	r3,r3,1365
 40054d4:	1800091e 	bne	r3,zero,40054fc <_malloc_r+0x7cc>
 40054d8:	1006d4ba 	srli	r3,r2,18
 40054dc:	19401f44 	addi	r5,r3,125
 40054e0:	280a90fa 	slli	r5,r5,3
 40054e4:	19001f04 	addi	r4,r3,124
 40054e8:	003f3306 	br	40051b8 <_malloc_r+0x488>
 40054ec:	0100fe04 	movi	r4,1016
 40054f0:	01c01fc4 	movi	r7,127
 40054f4:	02001f84 	movi	r8,126
 40054f8:	003e4606 	br	4004e14 <_malloc_r+0xe4>
 40054fc:	0140fe04 	movi	r5,1016
 4005500:	01001f84 	movi	r4,126
 4005504:	003f2c06 	br	40051b8 <_malloc_r+0x488>
 4005508:	98800117 	ldw	r2,4(r19)
 400550c:	003f9506 	br	4005364 <_malloc_r+0x634>

04005510 <memchr>:
 4005510:	208000cc 	andi	r2,r4,3
 4005514:	280f883a 	mov	r7,r5
 4005518:	10000e26 	beq	r2,zero,4005554 <memchr+0x44>
 400551c:	30bfffc4 	addi	r2,r6,-1
 4005520:	30001726 	beq	r6,zero,4005580 <memchr+0x70>
 4005524:	29803fcc 	andi	r6,r5,255
 4005528:	00000606 	br	4005544 <memchr+0x34>
 400552c:	21000044 	addi	r4,r4,1
 4005530:	20c000cc 	andi	r3,r4,3
 4005534:	18000826 	beq	r3,zero,4005558 <memchr+0x48>
 4005538:	10bfffc4 	addi	r2,r2,-1
 400553c:	10ffffe0 	cmpeqi	r3,r2,-1
 4005540:	18000f1e 	bne	r3,zero,4005580 <memchr+0x70>
 4005544:	20c00003 	ldbu	r3,0(r4)
 4005548:	19bff81e 	bne	r3,r6,400552c <memchr+0x1c>
 400554c:	2005883a 	mov	r2,r4
 4005550:	f800283a 	ret
 4005554:	3005883a 	mov	r2,r6
 4005558:	10c00128 	cmpgeui	r3,r2,4
 400555c:	18000a1e 	bne	r3,zero,4005588 <memchr+0x78>
 4005560:	10001f26 	beq	r2,zero,40055e0 <memchr+0xd0>
 4005564:	2087883a 	add	r3,r4,r2
 4005568:	39803fcc 	andi	r6,r7,255
 400556c:	2005883a 	mov	r2,r4
 4005570:	11000003 	ldbu	r4,0(r2)
 4005574:	21bff626 	beq	r4,r6,4005550 <memchr+0x40>
 4005578:	10800044 	addi	r2,r2,1
 400557c:	18bffc1e 	bne	r3,r2,4005570 <memchr+0x60>
 4005580:	0005883a 	mov	r2,zero
 4005584:	f800283a 	ret
 4005588:	2810923a 	slli	r8,r5,8
 400558c:	29403fcc 	andi	r5,r5,255
 4005590:	027fbff4 	movhi	r9,65279
 4005594:	423fffcc 	andi	r8,r8,65535
 4005598:	414ab03a 	or	r5,r8,r5
 400559c:	2810943a 	slli	r8,r5,16
 40055a0:	01a02074 	movhi	r6,32897
 40055a4:	4a7fbfc4 	addi	r9,r9,-257
 40055a8:	4150b03a 	or	r8,r8,r5
 40055ac:	31a02004 	addi	r6,r6,-32640
 40055b0:	20c00017 	ldw	r3,0(r4)
 40055b4:	40c6f03a 	xor	r3,r8,r3
 40055b8:	1a4b883a 	add	r5,r3,r9
 40055bc:	00c6303a 	nor	r3,zero,r3
 40055c0:	28c6703a 	and	r3,r5,r3
 40055c4:	1986703a 	and	r3,r3,r6
 40055c8:	183fe61e 	bne	r3,zero,4005564 <memchr+0x54>
 40055cc:	10bfff04 	addi	r2,r2,-4
 40055d0:	10c00128 	cmpgeui	r3,r2,4
 40055d4:	21000104 	addi	r4,r4,4
 40055d8:	183ff51e 	bne	r3,zero,40055b0 <memchr+0xa0>
 40055dc:	003fe006 	br	4005560 <memchr+0x50>
 40055e0:	f800283a 	ret

040055e4 <memcpy>:
 40055e4:	30c00430 	cmpltui	r3,r6,16
 40055e8:	2005883a 	mov	r2,r4
 40055ec:	18002d1e 	bne	r3,zero,40056a4 <memcpy+0xc0>
 40055f0:	2906b03a 	or	r3,r5,r4
 40055f4:	18c000cc 	andi	r3,r3,3
 40055f8:	1800351e 	bne	r3,zero,40056d0 <memcpy+0xec>
 40055fc:	32fffc04 	addi	r11,r6,-16
 4005600:	5816d13a 	srli	r11,r11,4
 4005604:	280f883a 	mov	r7,r5
 4005608:	2007883a 	mov	r3,r4
 400560c:	5ac00044 	addi	r11,r11,1
 4005610:	5816913a 	slli	r11,r11,4
 4005614:	22d5883a 	add	r10,r4,r11
 4005618:	39000117 	ldw	r4,4(r7)
 400561c:	3a400017 	ldw	r9,0(r7)
 4005620:	3a000217 	ldw	r8,8(r7)
 4005624:	19000115 	stw	r4,4(r3)
 4005628:	39000317 	ldw	r4,12(r7)
 400562c:	1a400015 	stw	r9,0(r3)
 4005630:	1a000215 	stw	r8,8(r3)
 4005634:	19000315 	stw	r4,12(r3)
 4005638:	18c00404 	addi	r3,r3,16
 400563c:	39c00404 	addi	r7,r7,16
 4005640:	50fff51e 	bne	r10,r3,4005618 <memcpy+0x34>
 4005644:	3100030c 	andi	r4,r6,12
 4005648:	2acb883a 	add	r5,r5,r11
 400564c:	320003cc 	andi	r8,r6,15
 4005650:	20002226 	beq	r4,zero,40056dc <memcpy+0xf8>
 4005654:	280f883a 	mov	r7,r5
 4005658:	1813883a 	mov	r9,r3
 400565c:	39c00104 	addi	r7,r7,4
 4005660:	3abfff17 	ldw	r10,-4(r7)
 4005664:	41c9c83a 	sub	r4,r8,r7
 4005668:	2909883a 	add	r4,r5,r4
 400566c:	4a800015 	stw	r10,0(r9)
 4005670:	21000128 	cmpgeui	r4,r4,4
 4005674:	4a400104 	addi	r9,r9,4
 4005678:	203ff81e 	bne	r4,zero,400565c <memcpy+0x78>
 400567c:	413fff04 	addi	r4,r8,-4
 4005680:	2008d0ba 	srli	r4,r4,2
 4005684:	318000cc 	andi	r6,r6,3
 4005688:	31ffffc4 	addi	r7,r6,-1
 400568c:	21000044 	addi	r4,r4,1
 4005690:	200890ba 	slli	r4,r4,2
 4005694:	1907883a 	add	r3,r3,r4
 4005698:	290b883a 	add	r5,r5,r4
 400569c:	3000041e 	bne	r6,zero,40056b0 <memcpy+0xcc>
 40056a0:	f800283a 	ret
 40056a4:	2007883a 	mov	r3,r4
 40056a8:	31ffffc4 	addi	r7,r6,-1
 40056ac:	303ffc26 	beq	r6,zero,40056a0 <memcpy+0xbc>
 40056b0:	39c00044 	addi	r7,r7,1
 40056b4:	19cf883a 	add	r7,r3,r7
 40056b8:	29800003 	ldbu	r6,0(r5)
 40056bc:	18c00044 	addi	r3,r3,1
 40056c0:	29400044 	addi	r5,r5,1
 40056c4:	19bfffc5 	stb	r6,-1(r3)
 40056c8:	38fffb1e 	bne	r7,r3,40056b8 <memcpy+0xd4>
 40056cc:	f800283a 	ret
 40056d0:	31ffffc4 	addi	r7,r6,-1
 40056d4:	2007883a 	mov	r3,r4
 40056d8:	003ff506 	br	40056b0 <memcpy+0xcc>
 40056dc:	400d883a 	mov	r6,r8
 40056e0:	003ff106 	br	40056a8 <memcpy+0xc4>

040056e4 <memset>:
 40056e4:	20c000cc 	andi	r3,r4,3
 40056e8:	2005883a 	mov	r2,r4
 40056ec:	18003626 	beq	r3,zero,40057c8 <memset+0xe4>
 40056f0:	31ffffc4 	addi	r7,r6,-1
 40056f4:	30003326 	beq	r6,zero,40057c4 <memset+0xe0>
 40056f8:	2811883a 	mov	r8,r5
 40056fc:	2007883a 	mov	r3,r4
 4005700:	00000306 	br	4005710 <memset+0x2c>
 4005704:	39ffffc4 	addi	r7,r7,-1
 4005708:	39bfffe0 	cmpeqi	r6,r7,-1
 400570c:	30002d1e 	bne	r6,zero,40057c4 <memset+0xe0>
 4005710:	18c00044 	addi	r3,r3,1
 4005714:	198000cc 	andi	r6,r3,3
 4005718:	1a3fffc5 	stb	r8,-1(r3)
 400571c:	303ff91e 	bne	r6,zero,4005704 <memset+0x20>
 4005720:	39000130 	cmpltui	r4,r7,4
 4005724:	2000221e 	bne	r4,zero,40057b0 <memset+0xcc>
 4005728:	29003fcc 	andi	r4,r5,255
 400572c:	200c923a 	slli	r6,r4,8
 4005730:	3a000430 	cmpltui	r8,r7,16
 4005734:	3108b03a 	or	r4,r6,r4
 4005738:	200c943a 	slli	r6,r4,16
 400573c:	310cb03a 	or	r6,r6,r4
 4005740:	40000e1e 	bne	r8,zero,400577c <memset+0x98>
 4005744:	393ffc04 	addi	r4,r7,-16
 4005748:	2008d13a 	srli	r4,r4,4
 400574c:	21000044 	addi	r4,r4,1
 4005750:	2008913a 	slli	r4,r4,4
 4005754:	1909883a 	add	r4,r3,r4
 4005758:	19800015 	stw	r6,0(r3)
 400575c:	19800115 	stw	r6,4(r3)
 4005760:	19800215 	stw	r6,8(r3)
 4005764:	19800315 	stw	r6,12(r3)
 4005768:	18c00404 	addi	r3,r3,16
 400576c:	20fffa1e 	bne	r4,r3,4005758 <memset+0x74>
 4005770:	3900030c 	andi	r4,r7,12
 4005774:	39c003cc 	andi	r7,r7,15
 4005778:	20000d26 	beq	r4,zero,40057b0 <memset+0xcc>
 400577c:	1811883a 	mov	r8,r3
 4005780:	42000104 	addi	r8,r8,4
 4005784:	3a09c83a 	sub	r4,r7,r8
 4005788:	1909883a 	add	r4,r3,r4
 400578c:	21000128 	cmpgeui	r4,r4,4
 4005790:	41bfff15 	stw	r6,-4(r8)
 4005794:	203ffa1e 	bne	r4,zero,4005780 <memset+0x9c>
 4005798:	393fff04 	addi	r4,r7,-4
 400579c:	2008d0ba 	srli	r4,r4,2
 40057a0:	39c000cc 	andi	r7,r7,3
 40057a4:	21000044 	addi	r4,r4,1
 40057a8:	200890ba 	slli	r4,r4,2
 40057ac:	1907883a 	add	r3,r3,r4
 40057b0:	38000426 	beq	r7,zero,40057c4 <memset+0xe0>
 40057b4:	19cf883a 	add	r7,r3,r7
 40057b8:	18c00044 	addi	r3,r3,1
 40057bc:	197fffc5 	stb	r5,-1(r3)
 40057c0:	38fffd1e 	bne	r7,r3,40057b8 <memset+0xd4>
 40057c4:	f800283a 	ret
 40057c8:	2007883a 	mov	r3,r4
 40057cc:	300f883a 	mov	r7,r6
 40057d0:	003fd306 	br	4005720 <memset+0x3c>

040057d4 <_Balloc>:
 40057d4:	20801317 	ldw	r2,76(r4)
 40057d8:	defffc04 	addi	sp,sp,-16
 40057dc:	dc400115 	stw	r17,4(sp)
 40057e0:	dc000015 	stw	r16,0(sp)
 40057e4:	dfc00315 	stw	ra,12(sp)
 40057e8:	dc800215 	stw	r18,8(sp)
 40057ec:	2021883a 	mov	r16,r4
 40057f0:	2823883a 	mov	r17,r5
 40057f4:	10000e26 	beq	r2,zero,4005830 <_Balloc+0x5c>
 40057f8:	880690ba 	slli	r3,r17,2
 40057fc:	10c7883a 	add	r3,r2,r3
 4005800:	18800017 	ldw	r2,0(r3)
 4005804:	10001126 	beq	r2,zero,400584c <_Balloc+0x78>
 4005808:	11000017 	ldw	r4,0(r2)
 400580c:	19000015 	stw	r4,0(r3)
 4005810:	10000415 	stw	zero,16(r2)
 4005814:	10000315 	stw	zero,12(r2)
 4005818:	dfc00317 	ldw	ra,12(sp)
 400581c:	dc800217 	ldw	r18,8(sp)
 4005820:	dc400117 	ldw	r17,4(sp)
 4005824:	dc000017 	ldw	r16,0(sp)
 4005828:	dec00404 	addi	sp,sp,16
 400582c:	f800283a 	ret
 4005830:	01800844 	movi	r6,33
 4005834:	01400104 	movi	r5,4
 4005838:	40080c00 	call	40080c0 <_calloc_r>
 400583c:	80801315 	stw	r2,76(r16)
 4005840:	103fed1e 	bne	r2,zero,40057f8 <_Balloc+0x24>
 4005844:	0005883a 	mov	r2,zero
 4005848:	003ff306 	br	4005818 <_Balloc+0x44>
 400584c:	04800044 	movi	r18,1
 4005850:	9464983a 	sll	r18,r18,r17
 4005854:	01400044 	movi	r5,1
 4005858:	8009883a 	mov	r4,r16
 400585c:	91800144 	addi	r6,r18,5
 4005860:	300c90ba 	slli	r6,r6,2
 4005864:	40080c00 	call	40080c0 <_calloc_r>
 4005868:	103ff626 	beq	r2,zero,4005844 <_Balloc+0x70>
 400586c:	14400115 	stw	r17,4(r2)
 4005870:	14800215 	stw	r18,8(r2)
 4005874:	003fe606 	br	4005810 <_Balloc+0x3c>

04005878 <_Bfree>:
 4005878:	28000726 	beq	r5,zero,4005898 <_Bfree+0x20>
 400587c:	28c00117 	ldw	r3,4(r5)
 4005880:	20801317 	ldw	r2,76(r4)
 4005884:	180690ba 	slli	r3,r3,2
 4005888:	10c5883a 	add	r2,r2,r3
 400588c:	10c00017 	ldw	r3,0(r2)
 4005890:	28c00015 	stw	r3,0(r5)
 4005894:	11400015 	stw	r5,0(r2)
 4005898:	f800283a 	ret

0400589c <__multadd>:
 400589c:	defffa04 	addi	sp,sp,-24
 40058a0:	dc400115 	stw	r17,4(sp)
 40058a4:	2c400417 	ldw	r17,16(r5)
 40058a8:	dcc00315 	stw	r19,12(sp)
 40058ac:	dc800215 	stw	r18,8(sp)
 40058b0:	dc000015 	stw	r16,0(sp)
 40058b4:	dfc00515 	stw	ra,20(sp)
 40058b8:	dd000415 	stw	r20,16(sp)
 40058bc:	2825883a 	mov	r18,r5
 40058c0:	2027883a 	mov	r19,r4
 40058c4:	3821883a 	mov	r16,r7
 40058c8:	2a000504 	addi	r8,r5,20
 40058cc:	0013883a 	mov	r9,zero
 40058d0:	40800017 	ldw	r2,0(r8)
 40058d4:	42000104 	addi	r8,r8,4
 40058d8:	4a400044 	addi	r9,r9,1
 40058dc:	10ffffcc 	andi	r3,r2,65535
 40058e0:	1987383a 	mul	r3,r3,r6
 40058e4:	100ed43a 	srli	r7,r2,16
 40058e8:	1c05883a 	add	r2,r3,r16
 40058ec:	1006d43a 	srli	r3,r2,16
 40058f0:	398f383a 	mul	r7,r7,r6
 40058f4:	10bfffcc 	andi	r2,r2,65535
 40058f8:	38cf883a 	add	r7,r7,r3
 40058fc:	3806943a 	slli	r3,r7,16
 4005900:	3820d43a 	srli	r16,r7,16
 4005904:	1885883a 	add	r2,r3,r2
 4005908:	40bfff15 	stw	r2,-4(r8)
 400590c:	4c7ff016 	blt	r9,r17,40058d0 <__multadd+0x34>
 4005910:	80000826 	beq	r16,zero,4005934 <__multadd+0x98>
 4005914:	90800217 	ldw	r2,8(r18)
 4005918:	88800f0e 	bge	r17,r2,4005958 <__multadd+0xbc>
 400591c:	88800144 	addi	r2,r17,5
 4005920:	100490ba 	slli	r2,r2,2
 4005924:	8c400044 	addi	r17,r17,1
 4005928:	9085883a 	add	r2,r18,r2
 400592c:	14000015 	stw	r16,0(r2)
 4005930:	94400415 	stw	r17,16(r18)
 4005934:	9005883a 	mov	r2,r18
 4005938:	dfc00517 	ldw	ra,20(sp)
 400593c:	dd000417 	ldw	r20,16(sp)
 4005940:	dcc00317 	ldw	r19,12(sp)
 4005944:	dc800217 	ldw	r18,8(sp)
 4005948:	dc400117 	ldw	r17,4(sp)
 400594c:	dc000017 	ldw	r16,0(sp)
 4005950:	dec00604 	addi	sp,sp,24
 4005954:	f800283a 	ret
 4005958:	91400117 	ldw	r5,4(r18)
 400595c:	9809883a 	mov	r4,r19
 4005960:	29400044 	addi	r5,r5,1
 4005964:	40057d40 	call	40057d4 <_Balloc>
 4005968:	1029883a 	mov	r20,r2
 400596c:	10001226 	beq	r2,zero,40059b8 <__multadd+0x11c>
 4005970:	91800417 	ldw	r6,16(r18)
 4005974:	91400304 	addi	r5,r18,12
 4005978:	11000304 	addi	r4,r2,12
 400597c:	31800084 	addi	r6,r6,2
 4005980:	300c90ba 	slli	r6,r6,2
 4005984:	40055e40 	call	40055e4 <memcpy>
 4005988:	90000926 	beq	r18,zero,40059b0 <__multadd+0x114>
 400598c:	90c00117 	ldw	r3,4(r18)
 4005990:	98801317 	ldw	r2,76(r19)
 4005994:	180690ba 	slli	r3,r3,2
 4005998:	10c5883a 	add	r2,r2,r3
 400599c:	10c00017 	ldw	r3,0(r2)
 40059a0:	90c00015 	stw	r3,0(r18)
 40059a4:	14800015 	stw	r18,0(r2)
 40059a8:	a025883a 	mov	r18,r20
 40059ac:	003fdb06 	br	400591c <__multadd+0x80>
 40059b0:	a025883a 	mov	r18,r20
 40059b4:	003fd906 	br	400591c <__multadd+0x80>
 40059b8:	01c10074 	movhi	r7,1025
 40059bc:	01010074 	movhi	r4,1025
 40059c0:	39fddd04 	addi	r7,r7,-2188
 40059c4:	000d883a 	mov	r6,zero
 40059c8:	01402d44 	movi	r5,181
 40059cc:	213df104 	addi	r4,r4,-2108
 40059d0:	40080480 	call	4008048 <__assert_func>

040059d4 <__s2b>:
 40059d4:	defff904 	addi	sp,sp,-28
 40059d8:	dc800215 	stw	r18,8(sp)
 40059dc:	dc000015 	stw	r16,0(sp)
 40059e0:	2025883a 	mov	r18,r4
 40059e4:	2821883a 	mov	r16,r5
 40059e8:	39000204 	addi	r4,r7,8
 40059ec:	01400244 	movi	r5,9
 40059f0:	dcc00315 	stw	r19,12(sp)
 40059f4:	dc400115 	stw	r17,4(sp)
 40059f8:	dfc00615 	stw	ra,24(sp)
 40059fc:	3823883a 	mov	r17,r7
 4005a00:	dd400515 	stw	r21,20(sp)
 4005a04:	dd000415 	stw	r20,16(sp)
 4005a08:	3027883a 	mov	r19,r6
 4005a0c:	400a3c80 	call	400a3c8 <__divsi3>
 4005a10:	88c00290 	cmplti	r3,r17,10
 4005a14:	1800341e 	bne	r3,zero,4005ae8 <__s2b+0x114>
 4005a18:	00c00044 	movi	r3,1
 4005a1c:	000b883a 	mov	r5,zero
 4005a20:	18c7883a 	add	r3,r3,r3
 4005a24:	29400044 	addi	r5,r5,1
 4005a28:	18bffd16 	blt	r3,r2,4005a20 <__s2b+0x4c>
 4005a2c:	9009883a 	mov	r4,r18
 4005a30:	40057d40 	call	40057d4 <_Balloc>
 4005a34:	100b883a 	mov	r5,r2
 4005a38:	10002d26 	beq	r2,zero,4005af0 <__s2b+0x11c>
 4005a3c:	d8800717 	ldw	r2,28(sp)
 4005a40:	28800515 	stw	r2,20(r5)
 4005a44:	00800044 	movi	r2,1
 4005a48:	28800415 	stw	r2,16(r5)
 4005a4c:	98800290 	cmplti	r2,r19,10
 4005a50:	1000221e 	bne	r2,zero,4005adc <__s2b+0x108>
 4005a54:	85400244 	addi	r21,r16,9
 4005a58:	a829883a 	mov	r20,r21
 4005a5c:	84e1883a 	add	r16,r16,r19
 4005a60:	a1c00007 	ldb	r7,0(r20)
 4005a64:	01800284 	movi	r6,10
 4005a68:	9009883a 	mov	r4,r18
 4005a6c:	39fff404 	addi	r7,r7,-48
 4005a70:	400589c0 	call	400589c <__multadd>
 4005a74:	a5000044 	addi	r20,r20,1
 4005a78:	100b883a 	mov	r5,r2
 4005a7c:	a43ff81e 	bne	r20,r16,4005a60 <__s2b+0x8c>
 4005a80:	9c3ffe04 	addi	r16,r19,-8
 4005a84:	ac21883a 	add	r16,r21,r16
 4005a88:	9c400a0e 	bge	r19,r17,4005ab4 <__s2b+0xe0>
 4005a8c:	8ce3c83a 	sub	r17,r17,r19
 4005a90:	8463883a 	add	r17,r16,r17
 4005a94:	81c00007 	ldb	r7,0(r16)
 4005a98:	01800284 	movi	r6,10
 4005a9c:	9009883a 	mov	r4,r18
 4005aa0:	39fff404 	addi	r7,r7,-48
 4005aa4:	400589c0 	call	400589c <__multadd>
 4005aa8:	84000044 	addi	r16,r16,1
 4005aac:	100b883a 	mov	r5,r2
 4005ab0:	8c3ff81e 	bne	r17,r16,4005a94 <__s2b+0xc0>
 4005ab4:	2805883a 	mov	r2,r5
 4005ab8:	dfc00617 	ldw	ra,24(sp)
 4005abc:	dd400517 	ldw	r21,20(sp)
 4005ac0:	dd000417 	ldw	r20,16(sp)
 4005ac4:	dcc00317 	ldw	r19,12(sp)
 4005ac8:	dc800217 	ldw	r18,8(sp)
 4005acc:	dc400117 	ldw	r17,4(sp)
 4005ad0:	dc000017 	ldw	r16,0(sp)
 4005ad4:	dec00704 	addi	sp,sp,28
 4005ad8:	f800283a 	ret
 4005adc:	84000284 	addi	r16,r16,10
 4005ae0:	04c00244 	movi	r19,9
 4005ae4:	003fe806 	br	4005a88 <__s2b+0xb4>
 4005ae8:	000b883a 	mov	r5,zero
 4005aec:	003fcf06 	br	4005a2c <__s2b+0x58>
 4005af0:	01c10074 	movhi	r7,1025
 4005af4:	01010074 	movhi	r4,1025
 4005af8:	39fddd04 	addi	r7,r7,-2188
 4005afc:	000d883a 	mov	r6,zero
 4005b00:	01403384 	movi	r5,206
 4005b04:	213df104 	addi	r4,r4,-2108
 4005b08:	40080480 	call	4008048 <__assert_func>

04005b0c <__hi0bits>:
 4005b0c:	20bfffec 	andhi	r2,r4,65535
 4005b10:	1000131e 	bne	r2,zero,4005b60 <__hi0bits+0x54>
 4005b14:	2008943a 	slli	r4,r4,16
 4005b18:	00800404 	movi	r2,16
 4005b1c:	20ffc02c 	andhi	r3,r4,65280
 4005b20:	1800021e 	bne	r3,zero,4005b2c <__hi0bits+0x20>
 4005b24:	2008923a 	slli	r4,r4,8
 4005b28:	10800204 	addi	r2,r2,8
 4005b2c:	20fc002c 	andhi	r3,r4,61440
 4005b30:	1800021e 	bne	r3,zero,4005b3c <__hi0bits+0x30>
 4005b34:	2008913a 	slli	r4,r4,4
 4005b38:	10800104 	addi	r2,r2,4
 4005b3c:	20f0002c 	andhi	r3,r4,49152
 4005b40:	1800021e 	bne	r3,zero,4005b4c <__hi0bits+0x40>
 4005b44:	200890ba 	slli	r4,r4,2
 4005b48:	10800084 	addi	r2,r2,2
 4005b4c:	20000316 	blt	r4,zero,4005b5c <__hi0bits+0x50>
 4005b50:	2110002c 	andhi	r4,r4,16384
 4005b54:	10800044 	addi	r2,r2,1
 4005b58:	20000326 	beq	r4,zero,4005b68 <__hi0bits+0x5c>
 4005b5c:	f800283a 	ret
 4005b60:	0005883a 	mov	r2,zero
 4005b64:	003fed06 	br	4005b1c <__hi0bits+0x10>
 4005b68:	00800804 	movi	r2,32
 4005b6c:	f800283a 	ret

04005b70 <__lo0bits>:
 4005b70:	20c00017 	ldw	r3,0(r4)
 4005b74:	188001cc 	andi	r2,r3,7
 4005b78:	10000826 	beq	r2,zero,4005b9c <__lo0bits+0x2c>
 4005b7c:	1880004c 	andi	r2,r3,1
 4005b80:	10001f1e 	bne	r2,zero,4005c00 <__lo0bits+0x90>
 4005b84:	1880008c 	andi	r2,r3,2
 4005b88:	10002126 	beq	r2,zero,4005c10 <__lo0bits+0xa0>
 4005b8c:	1806d07a 	srli	r3,r3,1
 4005b90:	00800044 	movi	r2,1
 4005b94:	20c00015 	stw	r3,0(r4)
 4005b98:	f800283a 	ret
 4005b9c:	18bfffcc 	andi	r2,r3,65535
 4005ba0:	10001426 	beq	r2,zero,4005bf4 <__lo0bits+0x84>
 4005ba4:	0005883a 	mov	r2,zero
 4005ba8:	19403fcc 	andi	r5,r3,255
 4005bac:	2800021e 	bne	r5,zero,4005bb8 <__lo0bits+0x48>
 4005bb0:	1806d23a 	srli	r3,r3,8
 4005bb4:	10800204 	addi	r2,r2,8
 4005bb8:	194003cc 	andi	r5,r3,15
 4005bbc:	2800021e 	bne	r5,zero,4005bc8 <__lo0bits+0x58>
 4005bc0:	1806d13a 	srli	r3,r3,4
 4005bc4:	10800104 	addi	r2,r2,4
 4005bc8:	194000cc 	andi	r5,r3,3
 4005bcc:	2800021e 	bne	r5,zero,4005bd8 <__lo0bits+0x68>
 4005bd0:	1806d0ba 	srli	r3,r3,2
 4005bd4:	10800084 	addi	r2,r2,2
 4005bd8:	1940004c 	andi	r5,r3,1
 4005bdc:	2800031e 	bne	r5,zero,4005bec <__lo0bits+0x7c>
 4005be0:	1806d07a 	srli	r3,r3,1
 4005be4:	10800044 	addi	r2,r2,1
 4005be8:	18000726 	beq	r3,zero,4005c08 <__lo0bits+0x98>
 4005bec:	20c00015 	stw	r3,0(r4)
 4005bf0:	f800283a 	ret
 4005bf4:	1806d43a 	srli	r3,r3,16
 4005bf8:	00800404 	movi	r2,16
 4005bfc:	003fea06 	br	4005ba8 <__lo0bits+0x38>
 4005c00:	0005883a 	mov	r2,zero
 4005c04:	f800283a 	ret
 4005c08:	00800804 	movi	r2,32
 4005c0c:	f800283a 	ret
 4005c10:	1806d0ba 	srli	r3,r3,2
 4005c14:	00800084 	movi	r2,2
 4005c18:	20c00015 	stw	r3,0(r4)
 4005c1c:	f800283a 	ret

04005c20 <__i2b>:
 4005c20:	defffe04 	addi	sp,sp,-8
 4005c24:	dc000015 	stw	r16,0(sp)
 4005c28:	2821883a 	mov	r16,r5
 4005c2c:	01400044 	movi	r5,1
 4005c30:	dfc00115 	stw	ra,4(sp)
 4005c34:	40057d40 	call	40057d4 <_Balloc>
 4005c38:	10000726 	beq	r2,zero,4005c58 <__i2b+0x38>
 4005c3c:	01000044 	movi	r4,1
 4005c40:	14000515 	stw	r16,20(r2)
 4005c44:	11000415 	stw	r4,16(r2)
 4005c48:	dfc00117 	ldw	ra,4(sp)
 4005c4c:	dc000017 	ldw	r16,0(sp)
 4005c50:	dec00204 	addi	sp,sp,8
 4005c54:	f800283a 	ret
 4005c58:	01c10074 	movhi	r7,1025
 4005c5c:	01010074 	movhi	r4,1025
 4005c60:	39fddd04 	addi	r7,r7,-2188
 4005c64:	000d883a 	mov	r6,zero
 4005c68:	01405004 	movi	r5,320
 4005c6c:	213df104 	addi	r4,r4,-2108
 4005c70:	40080480 	call	4008048 <__assert_func>

04005c74 <__multiply>:
 4005c74:	defffa04 	addi	sp,sp,-24
 4005c78:	dcc00315 	stw	r19,12(sp)
 4005c7c:	dc800215 	stw	r18,8(sp)
 4005c80:	34c00417 	ldw	r19,16(r6)
 4005c84:	2c800417 	ldw	r18,16(r5)
 4005c88:	dd000415 	stw	r20,16(sp)
 4005c8c:	dc400115 	stw	r17,4(sp)
 4005c90:	dfc00515 	stw	ra,20(sp)
 4005c94:	dc000015 	stw	r16,0(sp)
 4005c98:	2829883a 	mov	r20,r5
 4005c9c:	3023883a 	mov	r17,r6
 4005ca0:	94c00516 	blt	r18,r19,4005cb8 <__multiply+0x44>
 4005ca4:	9807883a 	mov	r3,r19
 4005ca8:	2823883a 	mov	r17,r5
 4005cac:	9027883a 	mov	r19,r18
 4005cb0:	3029883a 	mov	r20,r6
 4005cb4:	1825883a 	mov	r18,r3
 4005cb8:	88800217 	ldw	r2,8(r17)
 4005cbc:	9ca1883a 	add	r16,r19,r18
 4005cc0:	89400117 	ldw	r5,4(r17)
 4005cc4:	1400010e 	bge	r2,r16,4005ccc <__multiply+0x58>
 4005cc8:	29400044 	addi	r5,r5,1
 4005ccc:	40057d40 	call	40057d4 <_Balloc>
 4005cd0:	10006d26 	beq	r2,zero,4005e88 <__multiply+0x214>
 4005cd4:	801290ba 	slli	r9,r16,2
 4005cd8:	12800504 	addi	r10,r2,20
 4005cdc:	5007883a 	mov	r3,r10
 4005ce0:	5253883a 	add	r9,r10,r9
 4005ce4:	5240032e 	bgeu	r10,r9,4005cf4 <__multiply+0x80>
 4005ce8:	18000015 	stw	zero,0(r3)
 4005cec:	18c00104 	addi	r3,r3,4
 4005cf0:	1a7ffd36 	bltu	r3,r9,4005ce8 <__multiply+0x74>
 4005cf4:	901690ba 	slli	r11,r18,2
 4005cf8:	980e90ba 	slli	r7,r19,2
 4005cfc:	a2000504 	addi	r8,r20,20
 4005d00:	8b000504 	addi	r12,r17,20
 4005d04:	42d7883a 	add	r11,r8,r11
 4005d08:	61cf883a 	add	r7,r12,r7
 4005d0c:	42c02e2e 	bgeu	r8,r11,4005dc8 <__multiply+0x154>
 4005d10:	88c00544 	addi	r3,r17,21
 4005d14:	38c03c36 	bltu	r7,r3,4005e08 <__multiply+0x194>
 4005d18:	3c4dc83a 	sub	r6,r7,r17
 4005d1c:	31bffac4 	addi	r6,r6,-21
 4005d20:	300cd0ba 	srli	r6,r6,2
 4005d24:	31800044 	addi	r6,r6,1
 4005d28:	300c90ba 	slli	r6,r6,2
 4005d2c:	00000306 	br	4005d3c <__multiply+0xc8>
 4005d30:	42000104 	addi	r8,r8,4
 4005d34:	52800104 	addi	r10,r10,4
 4005d38:	42c0232e 	bgeu	r8,r11,4005dc8 <__multiply+0x154>
 4005d3c:	43800017 	ldw	r14,0(r8)
 4005d40:	77ffffcc 	andi	ra,r14,65535
 4005d44:	f800341e 	bne	ra,zero,4005e18 <__multiply+0x1a4>
 4005d48:	701cd43a 	srli	r14,r14,16
 4005d4c:	703ff826 	beq	r14,zero,4005d30 <__multiply+0xbc>
 4005d50:	50c00017 	ldw	r3,0(r10)
 4005d54:	501f883a 	mov	r15,r10
 4005d58:	601b883a 	mov	r13,r12
 4005d5c:	183f883a 	mov	ra,r3
 4005d60:	0023883a 	mov	r17,zero
 4005d64:	6940000b 	ldhu	r5,0(r13)
 4005d68:	f824d43a 	srli	r18,ra,16
 4005d6c:	193fffcc 	andi	r4,r3,65535
 4005d70:	2b8b383a 	mul	r5,r5,r14
 4005d74:	6b400104 	addi	r13,r13,4
 4005d78:	7fc00117 	ldw	ra,4(r15)
 4005d7c:	2c8b883a 	add	r5,r5,r18
 4005d80:	2c4b883a 	add	r5,r5,r17
 4005d84:	2806943a 	slli	r3,r5,16
 4005d88:	280ad43a 	srli	r5,r5,16
 4005d8c:	fc7fffcc 	andi	r17,ra,65535
 4005d90:	1908b03a 	or	r4,r3,r4
 4005d94:	79000015 	stw	r4,0(r15)
 4005d98:	68ffff8b 	ldhu	r3,-2(r13)
 4005d9c:	7bc00104 	addi	r15,r15,4
 4005da0:	1b87383a 	mul	r3,r3,r14
 4005da4:	1c47883a 	add	r3,r3,r17
 4005da8:	1947883a 	add	r3,r3,r5
 4005dac:	1822d43a 	srli	r17,r3,16
 4005db0:	69ffec36 	bltu	r13,r7,4005d64 <__multiply+0xf0>
 4005db4:	5189883a 	add	r4,r10,r6
 4005db8:	20c00015 	stw	r3,0(r4)
 4005dbc:	42000104 	addi	r8,r8,4
 4005dc0:	52800104 	addi	r10,r10,4
 4005dc4:	42ffdd36 	bltu	r8,r11,4005d3c <__multiply+0xc8>
 4005dc8:	04000316 	blt	zero,r16,4005dd8 <__multiply+0x164>
 4005dcc:	00000506 	br	4005de4 <__multiply+0x170>
 4005dd0:	843fffc4 	addi	r16,r16,-1
 4005dd4:	80000326 	beq	r16,zero,4005de4 <__multiply+0x170>
 4005dd8:	48ffff17 	ldw	r3,-4(r9)
 4005ddc:	4a7fff04 	addi	r9,r9,-4
 4005de0:	183ffb26 	beq	r3,zero,4005dd0 <__multiply+0x15c>
 4005de4:	14000415 	stw	r16,16(r2)
 4005de8:	dfc00517 	ldw	ra,20(sp)
 4005dec:	dd000417 	ldw	r20,16(sp)
 4005df0:	dcc00317 	ldw	r19,12(sp)
 4005df4:	dc800217 	ldw	r18,8(sp)
 4005df8:	dc400117 	ldw	r17,4(sp)
 4005dfc:	dc000017 	ldw	r16,0(sp)
 4005e00:	dec00604 	addi	sp,sp,24
 4005e04:	f800283a 	ret
 4005e08:	43800017 	ldw	r14,0(r8)
 4005e0c:	01800104 	movi	r6,4
 4005e10:	77ffffcc 	andi	ra,r14,65535
 4005e14:	f83fcc26 	beq	ra,zero,4005d48 <__multiply+0xd4>
 4005e18:	501f883a 	mov	r15,r10
 4005e1c:	601d883a 	mov	r14,r12
 4005e20:	0023883a 	mov	r17,zero
 4005e24:	71000017 	ldw	r4,0(r14)
 4005e28:	7b400017 	ldw	r13,0(r15)
 4005e2c:	7bc00104 	addi	r15,r15,4
 4005e30:	217fffcc 	andi	r5,r4,65535
 4005e34:	2fcb383a 	mul	r5,r5,ra
 4005e38:	2006d43a 	srli	r3,r4,16
 4005e3c:	693fffcc 	andi	r4,r13,65535
 4005e40:	290b883a 	add	r5,r5,r4
 4005e44:	2c4b883a 	add	r5,r5,r17
 4005e48:	1fc7383a 	mul	r3,r3,ra
 4005e4c:	681ad43a 	srli	r13,r13,16
 4005e50:	2808d43a 	srli	r4,r5,16
 4005e54:	297fffcc 	andi	r5,r5,65535
 4005e58:	1b47883a 	add	r3,r3,r13
 4005e5c:	1907883a 	add	r3,r3,r4
 4005e60:	1808943a 	slli	r4,r3,16
 4005e64:	73800104 	addi	r14,r14,4
 4005e68:	1822d43a 	srli	r17,r3,16
 4005e6c:	214ab03a 	or	r5,r4,r5
 4005e70:	797fff15 	stw	r5,-4(r15)
 4005e74:	71ffeb36 	bltu	r14,r7,4005e24 <__multiply+0x1b0>
 4005e78:	5187883a 	add	r3,r10,r6
 4005e7c:	1c400015 	stw	r17,0(r3)
 4005e80:	43800017 	ldw	r14,0(r8)
 4005e84:	003fb006 	br	4005d48 <__multiply+0xd4>
 4005e88:	01c10074 	movhi	r7,1025
 4005e8c:	01010074 	movhi	r4,1025
 4005e90:	39fddd04 	addi	r7,r7,-2188
 4005e94:	000d883a 	mov	r6,zero
 4005e98:	01405744 	movi	r5,349
 4005e9c:	213df104 	addi	r4,r4,-2108
 4005ea0:	40080480 	call	4008048 <__assert_func>

04005ea4 <__pow5mult>:
 4005ea4:	defffb04 	addi	sp,sp,-20
 4005ea8:	dcc00315 	stw	r19,12(sp)
 4005eac:	dc000015 	stw	r16,0(sp)
 4005eb0:	dfc00415 	stw	ra,16(sp)
 4005eb4:	dc800215 	stw	r18,8(sp)
 4005eb8:	dc400115 	stw	r17,4(sp)
 4005ebc:	308000cc 	andi	r2,r6,3
 4005ec0:	3021883a 	mov	r16,r6
 4005ec4:	2027883a 	mov	r19,r4
 4005ec8:	10002d1e 	bne	r2,zero,4005f80 <__pow5mult+0xdc>
 4005ecc:	2825883a 	mov	r18,r5
 4005ed0:	8021d0ba 	srai	r16,r16,2
 4005ed4:	80001926 	beq	r16,zero,4005f3c <__pow5mult+0x98>
 4005ed8:	9c401217 	ldw	r17,72(r19)
 4005edc:	8800061e 	bne	r17,zero,4005ef8 <__pow5mult+0x54>
 4005ee0:	00002f06 	br	4005fa0 <__pow5mult+0xfc>
 4005ee4:	8021d07a 	srai	r16,r16,1
 4005ee8:	80001426 	beq	r16,zero,4005f3c <__pow5mult+0x98>
 4005eec:	88800017 	ldw	r2,0(r17)
 4005ef0:	10001a26 	beq	r2,zero,4005f5c <__pow5mult+0xb8>
 4005ef4:	1023883a 	mov	r17,r2
 4005ef8:	8080004c 	andi	r2,r16,1
 4005efc:	103ff926 	beq	r2,zero,4005ee4 <__pow5mult+0x40>
 4005f00:	880d883a 	mov	r6,r17
 4005f04:	900b883a 	mov	r5,r18
 4005f08:	9809883a 	mov	r4,r19
 4005f0c:	4005c740 	call	4005c74 <__multiply>
 4005f10:	90001926 	beq	r18,zero,4005f78 <__pow5mult+0xd4>
 4005f14:	91000117 	ldw	r4,4(r18)
 4005f18:	98c01317 	ldw	r3,76(r19)
 4005f1c:	8021d07a 	srai	r16,r16,1
 4005f20:	200890ba 	slli	r4,r4,2
 4005f24:	1907883a 	add	r3,r3,r4
 4005f28:	19000017 	ldw	r4,0(r3)
 4005f2c:	91000015 	stw	r4,0(r18)
 4005f30:	1c800015 	stw	r18,0(r3)
 4005f34:	1025883a 	mov	r18,r2
 4005f38:	803fec1e 	bne	r16,zero,4005eec <__pow5mult+0x48>
 4005f3c:	9005883a 	mov	r2,r18
 4005f40:	dfc00417 	ldw	ra,16(sp)
 4005f44:	dcc00317 	ldw	r19,12(sp)
 4005f48:	dc800217 	ldw	r18,8(sp)
 4005f4c:	dc400117 	ldw	r17,4(sp)
 4005f50:	dc000017 	ldw	r16,0(sp)
 4005f54:	dec00504 	addi	sp,sp,20
 4005f58:	f800283a 	ret
 4005f5c:	880d883a 	mov	r6,r17
 4005f60:	880b883a 	mov	r5,r17
 4005f64:	9809883a 	mov	r4,r19
 4005f68:	4005c740 	call	4005c74 <__multiply>
 4005f6c:	88800015 	stw	r2,0(r17)
 4005f70:	10000015 	stw	zero,0(r2)
 4005f74:	003fdf06 	br	4005ef4 <__pow5mult+0x50>
 4005f78:	1025883a 	mov	r18,r2
 4005f7c:	003fd906 	br	4005ee4 <__pow5mult+0x40>
 4005f80:	100490ba 	slli	r2,r2,2
 4005f84:	00c10074 	movhi	r3,1025
 4005f88:	000f883a 	mov	r7,zero
 4005f8c:	10c7883a 	add	r3,r2,r3
 4005f90:	19bdff17 	ldw	r6,-2052(r3)
 4005f94:	400589c0 	call	400589c <__multadd>
 4005f98:	1025883a 	mov	r18,r2
 4005f9c:	003fcc06 	br	4005ed0 <__pow5mult+0x2c>
 4005fa0:	01409c44 	movi	r5,625
 4005fa4:	9809883a 	mov	r4,r19
 4005fa8:	4005c200 	call	4005c20 <__i2b>
 4005fac:	98801215 	stw	r2,72(r19)
 4005fb0:	1023883a 	mov	r17,r2
 4005fb4:	10000015 	stw	zero,0(r2)
 4005fb8:	003fcf06 	br	4005ef8 <__pow5mult+0x54>

04005fbc <__lshift>:
 4005fbc:	defff904 	addi	sp,sp,-28
 4005fc0:	dd400515 	stw	r21,20(sp)
 4005fc4:	dc800215 	stw	r18,8(sp)
 4005fc8:	302bd17a 	srai	r21,r6,5
 4005fcc:	2c800417 	ldw	r18,16(r5)
 4005fd0:	28800217 	ldw	r2,8(r5)
 4005fd4:	dd000415 	stw	r20,16(sp)
 4005fd8:	aca5883a 	add	r18,r21,r18
 4005fdc:	dcc00315 	stw	r19,12(sp)
 4005fe0:	dc400115 	stw	r17,4(sp)
 4005fe4:	dc000015 	stw	r16,0(sp)
 4005fe8:	dfc00615 	stw	ra,24(sp)
 4005fec:	94400044 	addi	r17,r18,1
 4005ff0:	2821883a 	mov	r16,r5
 4005ff4:	3029883a 	mov	r20,r6
 4005ff8:	29400117 	ldw	r5,4(r5)
 4005ffc:	2027883a 	mov	r19,r4
 4006000:	1440030e 	bge	r2,r17,4006010 <__lshift+0x54>
 4006004:	1085883a 	add	r2,r2,r2
 4006008:	29400044 	addi	r5,r5,1
 400600c:	147ffd16 	blt	r2,r17,4006004 <__lshift+0x48>
 4006010:	9809883a 	mov	r4,r19
 4006014:	40057d40 	call	40057d4 <_Balloc>
 4006018:	10004326 	beq	r2,zero,4006128 <__lshift+0x16c>
 400601c:	12000504 	addi	r8,r2,20
 4006020:	0540090e 	bge	zero,r21,4006048 <__lshift+0x8c>
 4006024:	ad400144 	addi	r21,r21,5
 4006028:	a82a90ba 	slli	r21,r21,2
 400602c:	4007883a 	mov	r3,r8
 4006030:	1549883a 	add	r4,r2,r21
 4006034:	18c00104 	addi	r3,r3,4
 4006038:	183fff15 	stw	zero,-4(r3)
 400603c:	193ffd1e 	bne	r3,r4,4006034 <__lshift+0x78>
 4006040:	ad7ffb04 	addi	r21,r21,-20
 4006044:	4551883a 	add	r8,r8,r21
 4006048:	82400417 	ldw	r9,16(r16)
 400604c:	80c00504 	addi	r3,r16,20
 4006050:	a14007cc 	andi	r5,r20,31
 4006054:	481290ba 	slli	r9,r9,2
 4006058:	1a53883a 	add	r9,r3,r9
 400605c:	28002a26 	beq	r5,zero,4006108 <__lshift+0x14c>
 4006060:	02800804 	movi	r10,32
 4006064:	5155c83a 	sub	r10,r10,r5
 4006068:	4009883a 	mov	r4,r8
 400606c:	000f883a 	mov	r7,zero
 4006070:	19800017 	ldw	r6,0(r3)
 4006074:	21000104 	addi	r4,r4,4
 4006078:	18c00104 	addi	r3,r3,4
 400607c:	314c983a 	sll	r6,r6,r5
 4006080:	31ccb03a 	or	r6,r6,r7
 4006084:	21bfff15 	stw	r6,-4(r4)
 4006088:	19bfff17 	ldw	r6,-4(r3)
 400608c:	328ed83a 	srl	r7,r6,r10
 4006090:	1a7ff736 	bltu	r3,r9,4006070 <__lshift+0xb4>
 4006094:	80c00544 	addi	r3,r16,21
 4006098:	48c02136 	bltu	r9,r3,4006120 <__lshift+0x164>
 400609c:	4c07c83a 	sub	r3,r9,r16
 40060a0:	18fffac4 	addi	r3,r3,-21
 40060a4:	1806d0ba 	srli	r3,r3,2
 40060a8:	18c00044 	addi	r3,r3,1
 40060ac:	180690ba 	slli	r3,r3,2
 40060b0:	40d1883a 	add	r8,r8,r3
 40060b4:	41c00015 	stw	r7,0(r8)
 40060b8:	38000126 	beq	r7,zero,40060c0 <__lshift+0x104>
 40060bc:	8825883a 	mov	r18,r17
 40060c0:	14800415 	stw	r18,16(r2)
 40060c4:	80000726 	beq	r16,zero,40060e4 <__lshift+0x128>
 40060c8:	81000117 	ldw	r4,4(r16)
 40060cc:	98c01317 	ldw	r3,76(r19)
 40060d0:	200890ba 	slli	r4,r4,2
 40060d4:	1907883a 	add	r3,r3,r4
 40060d8:	19000017 	ldw	r4,0(r3)
 40060dc:	81000015 	stw	r4,0(r16)
 40060e0:	1c000015 	stw	r16,0(r3)
 40060e4:	dfc00617 	ldw	ra,24(sp)
 40060e8:	dd400517 	ldw	r21,20(sp)
 40060ec:	dd000417 	ldw	r20,16(sp)
 40060f0:	dcc00317 	ldw	r19,12(sp)
 40060f4:	dc800217 	ldw	r18,8(sp)
 40060f8:	dc400117 	ldw	r17,4(sp)
 40060fc:	dc000017 	ldw	r16,0(sp)
 4006100:	dec00704 	addi	sp,sp,28
 4006104:	f800283a 	ret
 4006108:	19000017 	ldw	r4,0(r3)
 400610c:	18c00104 	addi	r3,r3,4
 4006110:	42000104 	addi	r8,r8,4
 4006114:	413fff15 	stw	r4,-4(r8)
 4006118:	1a7ffb36 	bltu	r3,r9,4006108 <__lshift+0x14c>
 400611c:	003fe806 	br	40060c0 <__lshift+0x104>
 4006120:	00c00104 	movi	r3,4
 4006124:	003fe206 	br	40060b0 <__lshift+0xf4>
 4006128:	01c10074 	movhi	r7,1025
 400612c:	01010074 	movhi	r4,1025
 4006130:	39fddd04 	addi	r7,r7,-2188
 4006134:	000d883a 	mov	r6,zero
 4006138:	01407644 	movi	r5,473
 400613c:	213df104 	addi	r4,r4,-2108
 4006140:	40080480 	call	4008048 <__assert_func>

04006144 <__mcmp>:
 4006144:	21800417 	ldw	r6,16(r4)
 4006148:	28c00417 	ldw	r3,16(r5)
 400614c:	30c5c83a 	sub	r2,r6,r3
 4006150:	30c00e1e 	bne	r6,r3,400618c <__mcmp+0x48>
 4006154:	180690ba 	slli	r3,r3,2
 4006158:	21c00504 	addi	r7,r4,20
 400615c:	29400504 	addi	r5,r5,20
 4006160:	38c9883a 	add	r4,r7,r3
 4006164:	28c7883a 	add	r3,r5,r3
 4006168:	00000106 	br	4006170 <__mcmp+0x2c>
 400616c:	3900082e 	bgeu	r7,r4,4006190 <__mcmp+0x4c>
 4006170:	21bfff17 	ldw	r6,-4(r4)
 4006174:	197fff17 	ldw	r5,-4(r3)
 4006178:	213fff04 	addi	r4,r4,-4
 400617c:	18ffff04 	addi	r3,r3,-4
 4006180:	317ffa26 	beq	r6,r5,400616c <__mcmp+0x28>
 4006184:	3140032e 	bgeu	r6,r5,4006194 <__mcmp+0x50>
 4006188:	00bfffc4 	movi	r2,-1
 400618c:	f800283a 	ret
 4006190:	f800283a 	ret
 4006194:	00800044 	movi	r2,1
 4006198:	f800283a 	ret

0400619c <__mdiff>:
 400619c:	28800417 	ldw	r2,16(r5)
 40061a0:	30c00417 	ldw	r3,16(r6)
 40061a4:	defffc04 	addi	sp,sp,-16
 40061a8:	dc800215 	stw	r18,8(sp)
 40061ac:	dc400115 	stw	r17,4(sp)
 40061b0:	dc000015 	stw	r16,0(sp)
 40061b4:	dfc00315 	stw	ra,12(sp)
 40061b8:	2823883a 	mov	r17,r5
 40061bc:	3021883a 	mov	r16,r6
 40061c0:	10e5c83a 	sub	r18,r2,r3
 40061c4:	10c0641e 	bne	r2,r3,4006358 <__mdiff+0x1bc>
 40061c8:	180c90ba 	slli	r6,r3,2
 40061cc:	29400504 	addi	r5,r5,20
 40061d0:	80c00504 	addi	r3,r16,20
 40061d4:	2985883a 	add	r2,r5,r6
 40061d8:	1987883a 	add	r3,r3,r6
 40061dc:	00000106 	br	40061e4 <__mdiff+0x48>
 40061e0:	2880642e 	bgeu	r5,r2,4006374 <__mdiff+0x1d8>
 40061e4:	11ffff17 	ldw	r7,-4(r2)
 40061e8:	19bfff17 	ldw	r6,-4(r3)
 40061ec:	10bfff04 	addi	r2,r2,-4
 40061f0:	18ffff04 	addi	r3,r3,-4
 40061f4:	39bffa26 	beq	r7,r6,40061e0 <__mdiff+0x44>
 40061f8:	39805236 	bltu	r7,r6,4006344 <__mdiff+0x1a8>
 40061fc:	89400117 	ldw	r5,4(r17)
 4006200:	40057d40 	call	40057d4 <_Balloc>
 4006204:	10006226 	beq	r2,zero,4006390 <__mdiff+0x1f4>
 4006208:	8a400417 	ldw	r9,16(r17)
 400620c:	83000417 	ldw	r12,16(r16)
 4006210:	8ac00504 	addi	r11,r17,20
 4006214:	481090ba 	slli	r8,r9,2
 4006218:	601890ba 	slli	r12,r12,2
 400621c:	81800504 	addi	r6,r16,20
 4006220:	13400504 	addi	r13,r2,20
 4006224:	14800315 	stw	r18,12(r2)
 4006228:	5a11883a 	add	r8,r11,r8
 400622c:	3319883a 	add	r12,r6,r12
 4006230:	681d883a 	mov	r14,r13
 4006234:	5815883a 	mov	r10,r11
 4006238:	0007883a 	mov	r3,zero
 400623c:	51000017 	ldw	r4,0(r10)
 4006240:	31c00017 	ldw	r7,0(r6)
 4006244:	73800104 	addi	r14,r14,4
 4006248:	217fffcc 	andi	r5,r4,65535
 400624c:	28cb883a 	add	r5,r5,r3
 4006250:	38ffffcc 	andi	r3,r7,65535
 4006254:	28cbc83a 	sub	r5,r5,r3
 4006258:	380ed43a 	srli	r7,r7,16
 400625c:	2006d43a 	srli	r3,r4,16
 4006260:	2809d43a 	srai	r4,r5,16
 4006264:	297fffcc 	andi	r5,r5,65535
 4006268:	19c7c83a 	sub	r3,r3,r7
 400626c:	1907883a 	add	r3,r3,r4
 4006270:	1808943a 	slli	r4,r3,16
 4006274:	31800104 	addi	r6,r6,4
 4006278:	1807d43a 	srai	r3,r3,16
 400627c:	214ab03a 	or	r5,r4,r5
 4006280:	717fff15 	stw	r5,-4(r14)
 4006284:	52800104 	addi	r10,r10,4
 4006288:	333fec36 	bltu	r6,r12,400623c <__mdiff+0xa0>
 400628c:	640fc83a 	sub	r7,r12,r16
 4006290:	39fffac4 	addi	r7,r7,-21
 4006294:	84000544 	addi	r16,r16,21
 4006298:	380ed0ba 	srli	r7,r7,2
 400629c:	64003336 	bltu	r12,r16,400636c <__mdiff+0x1d0>
 40062a0:	380890ba 	slli	r4,r7,2
 40062a4:	6909883a 	add	r4,r13,r4
 40062a8:	64002e36 	bltu	r12,r16,4006364 <__mdiff+0x1c8>
 40062ac:	39800044 	addi	r6,r7,1
 40062b0:	300c90ba 	slli	r6,r6,2
 40062b4:	5997883a 	add	r11,r11,r6
 40062b8:	699b883a 	add	r13,r13,r6
 40062bc:	5a00152e 	bgeu	r11,r8,4006314 <__mdiff+0x178>
 40062c0:	680f883a 	mov	r7,r13
 40062c4:	580d883a 	mov	r6,r11
 40062c8:	31000017 	ldw	r4,0(r6)
 40062cc:	39c00104 	addi	r7,r7,4
 40062d0:	31800104 	addi	r6,r6,4
 40062d4:	217fffcc 	andi	r5,r4,65535
 40062d8:	28cb883a 	add	r5,r5,r3
 40062dc:	2815d43a 	srai	r10,r5,16
 40062e0:	2006d43a 	srli	r3,r4,16
 40062e4:	297fffcc 	andi	r5,r5,65535
 40062e8:	1a87883a 	add	r3,r3,r10
 40062ec:	1814943a 	slli	r10,r3,16
 40062f0:	1807d43a 	srai	r3,r3,16
 40062f4:	514ab03a 	or	r5,r10,r5
 40062f8:	397fff15 	stw	r5,-4(r7)
 40062fc:	323ff236 	bltu	r6,r8,40062c8 <__mdiff+0x12c>
 4006300:	413fffc4 	addi	r4,r8,-1
 4006304:	22c9c83a 	sub	r4,r4,r11
 4006308:	2008d0ba 	srli	r4,r4,2
 400630c:	200890ba 	slli	r4,r4,2
 4006310:	6909883a 	add	r4,r13,r4
 4006314:	2800041e 	bne	r5,zero,4006328 <__mdiff+0x18c>
 4006318:	20ffff17 	ldw	r3,-4(r4)
 400631c:	4a7fffc4 	addi	r9,r9,-1
 4006320:	213fff04 	addi	r4,r4,-4
 4006324:	183ffc26 	beq	r3,zero,4006318 <__mdiff+0x17c>
 4006328:	12400415 	stw	r9,16(r2)
 400632c:	dfc00317 	ldw	ra,12(sp)
 4006330:	dc800217 	ldw	r18,8(sp)
 4006334:	dc400117 	ldw	r17,4(sp)
 4006338:	dc000017 	ldw	r16,0(sp)
 400633c:	dec00404 	addi	sp,sp,16
 4006340:	f800283a 	ret
 4006344:	8805883a 	mov	r2,r17
 4006348:	04800044 	movi	r18,1
 400634c:	8023883a 	mov	r17,r16
 4006350:	1021883a 	mov	r16,r2
 4006354:	003fa906 	br	40061fc <__mdiff+0x60>
 4006358:	903ffa16 	blt	r18,zero,4006344 <__mdiff+0x1a8>
 400635c:	0025883a 	mov	r18,zero
 4006360:	003fa606 	br	40061fc <__mdiff+0x60>
 4006364:	01800104 	movi	r6,4
 4006368:	003fd206 	br	40062b4 <__mdiff+0x118>
 400636c:	0009883a 	mov	r4,zero
 4006370:	003fcc06 	br	40062a4 <__mdiff+0x108>
 4006374:	000b883a 	mov	r5,zero
 4006378:	40057d40 	call	40057d4 <_Balloc>
 400637c:	10000b26 	beq	r2,zero,40063ac <__mdiff+0x210>
 4006380:	00c00044 	movi	r3,1
 4006384:	10c00415 	stw	r3,16(r2)
 4006388:	10000515 	stw	zero,20(r2)
 400638c:	003fe706 	br	400632c <__mdiff+0x190>
 4006390:	01c10074 	movhi	r7,1025
 4006394:	01010074 	movhi	r4,1025
 4006398:	39fddd04 	addi	r7,r7,-2188
 400639c:	000d883a 	mov	r6,zero
 40063a0:	01409004 	movi	r5,576
 40063a4:	213df104 	addi	r4,r4,-2108
 40063a8:	40080480 	call	4008048 <__assert_func>
 40063ac:	01c10074 	movhi	r7,1025
 40063b0:	01010074 	movhi	r4,1025
 40063b4:	39fddd04 	addi	r7,r7,-2188
 40063b8:	000d883a 	mov	r6,zero
 40063bc:	01408c84 	movi	r5,562
 40063c0:	213df104 	addi	r4,r4,-2108
 40063c4:	40080480 	call	4008048 <__assert_func>

040063c8 <__ulp>:
 40063c8:	28dffc2c 	andhi	r3,r5,32752
 40063cc:	017f3034 	movhi	r5,64704
 40063d0:	1947883a 	add	r3,r3,r5
 40063d4:	00c0020e 	bge	zero,r3,40063e0 <__ulp+0x18>
 40063d8:	0005883a 	mov	r2,zero
 40063dc:	f800283a 	ret
 40063e0:	00c7c83a 	sub	r3,zero,r3
 40063e4:	1807d53a 	srai	r3,r3,20
 40063e8:	18800508 	cmpgei	r2,r3,20
 40063ec:	1000041e 	bne	r2,zero,4006400 <__ulp+0x38>
 40063f0:	00800234 	movhi	r2,8
 40063f4:	10c7d83a 	sra	r3,r2,r3
 40063f8:	0005883a 	mov	r2,zero
 40063fc:	f800283a 	ret
 4006400:	193ffb04 	addi	r4,r3,-20
 4006404:	208007c8 	cmpgei	r2,r4,31
 4006408:	0007883a 	mov	r3,zero
 400640c:	1000031e 	bne	r2,zero,400641c <__ulp+0x54>
 4006410:	00a00034 	movhi	r2,32768
 4006414:	1104d83a 	srl	r2,r2,r4
 4006418:	f800283a 	ret
 400641c:	00800044 	movi	r2,1
 4006420:	f800283a 	ret

04006424 <__b2d>:
 4006424:	defffa04 	addi	sp,sp,-24
 4006428:	dc400115 	stw	r17,4(sp)
 400642c:	24400417 	ldw	r17,16(r4)
 4006430:	dc000015 	stw	r16,0(sp)
 4006434:	24000504 	addi	r16,r4,20
 4006438:	882290ba 	slli	r17,r17,2
 400643c:	dc800215 	stw	r18,8(sp)
 4006440:	dd000415 	stw	r20,16(sp)
 4006444:	8463883a 	add	r17,r16,r17
 4006448:	8cbfff17 	ldw	r18,-4(r17)
 400644c:	dcc00315 	stw	r19,12(sp)
 4006450:	dfc00515 	stw	ra,20(sp)
 4006454:	9009883a 	mov	r4,r18
 4006458:	2827883a 	mov	r19,r5
 400645c:	4005b0c0 	call	4005b0c <__hi0bits>
 4006460:	01000804 	movi	r4,32
 4006464:	2087c83a 	sub	r3,r4,r2
 4006468:	98c00015 	stw	r3,0(r19)
 400646c:	10c002c8 	cmpgei	r3,r2,11
 4006470:	8d3fff04 	addi	r20,r17,-4
 4006474:	18001f26 	beq	r3,zero,40064f4 <__b2d+0xd0>
 4006478:	10fffd44 	addi	r3,r2,-11
 400647c:	85000e2e 	bgeu	r16,r20,40064b8 <__b2d+0x94>
 4006480:	88bffe17 	ldw	r2,-8(r17)
 4006484:	18001226 	beq	r3,zero,40064d0 <__b2d+0xac>
 4006488:	20c9c83a 	sub	r4,r4,r3
 400648c:	110cd83a 	srl	r6,r2,r4
 4006490:	90e4983a 	sll	r18,r18,r3
 4006494:	10c4983a 	sll	r2,r2,r3
 4006498:	897ffe04 	addi	r5,r17,-8
 400649c:	9186b03a 	or	r3,r18,r6
 40064a0:	18cffc34 	orhi	r3,r3,16368
 40064a4:	81400b2e 	bgeu	r16,r5,40064d4 <__b2d+0xb0>
 40064a8:	897ffd17 	ldw	r5,-12(r17)
 40064ac:	2908d83a 	srl	r4,r5,r4
 40064b0:	1104b03a 	or	r2,r2,r4
 40064b4:	00000706 	br	40064d4 <__b2d+0xb0>
 40064b8:	18000426 	beq	r3,zero,40064cc <__b2d+0xa8>
 40064bc:	90c6983a 	sll	r3,r18,r3
 40064c0:	0005883a 	mov	r2,zero
 40064c4:	18cffc34 	orhi	r3,r3,16368
 40064c8:	00000206 	br	40064d4 <__b2d+0xb0>
 40064cc:	0005883a 	mov	r2,zero
 40064d0:	90cffc34 	orhi	r3,r18,16368
 40064d4:	dfc00517 	ldw	ra,20(sp)
 40064d8:	dd000417 	ldw	r20,16(sp)
 40064dc:	dcc00317 	ldw	r19,12(sp)
 40064e0:	dc800217 	ldw	r18,8(sp)
 40064e4:	dc400117 	ldw	r17,4(sp)
 40064e8:	dc000017 	ldw	r16,0(sp)
 40064ec:	dec00604 	addi	sp,sp,24
 40064f0:	f800283a 	ret
 40064f4:	014002c4 	movi	r5,11
 40064f8:	2889c83a 	sub	r4,r5,r2
 40064fc:	9106d83a 	srl	r3,r18,r4
 4006500:	18cffc34 	orhi	r3,r3,16368
 4006504:	85000536 	bltu	r16,r20,400651c <__b2d+0xf8>
 4006508:	000b883a 	mov	r5,zero
 400650c:	10800544 	addi	r2,r2,21
 4006510:	9084983a 	sll	r2,r18,r2
 4006514:	1144b03a 	or	r2,r2,r5
 4006518:	003fee06 	br	40064d4 <__b2d+0xb0>
 400651c:	897ffe17 	ldw	r5,-8(r17)
 4006520:	290ad83a 	srl	r5,r5,r4
 4006524:	003ff906 	br	400650c <__b2d+0xe8>

04006528 <__d2b>:
 4006528:	defff804 	addi	sp,sp,-32
 400652c:	dd000615 	stw	r20,24(sp)
 4006530:	2829883a 	mov	r20,r5
 4006534:	01400044 	movi	r5,1
 4006538:	dcc00515 	stw	r19,20(sp)
 400653c:	dc000215 	stw	r16,8(sp)
 4006540:	dfc00715 	stw	ra,28(sp)
 4006544:	dc800415 	stw	r18,16(sp)
 4006548:	dc400315 	stw	r17,12(sp)
 400654c:	3021883a 	mov	r16,r6
 4006550:	3827883a 	mov	r19,r7
 4006554:	40057d40 	call	40057d4 <_Balloc>
 4006558:	10004526 	beq	r2,zero,4006670 <__d2b+0x148>
 400655c:	8024d53a 	srli	r18,r16,20
 4006560:	01800434 	movhi	r6,16
 4006564:	31bfffc4 	addi	r6,r6,-1
 4006568:	9481ffcc 	andi	r18,r18,2047
 400656c:	1023883a 	mov	r17,r2
 4006570:	81a0703a 	and	r16,r16,r6
 4006574:	90000126 	beq	r18,zero,400657c <__d2b+0x54>
 4006578:	84000434 	orhi	r16,r16,16
 400657c:	dc000115 	stw	r16,4(sp)
 4006580:	a0002226 	beq	r20,zero,400660c <__d2b+0xe4>
 4006584:	d809883a 	mov	r4,sp
 4006588:	dd000015 	stw	r20,0(sp)
 400658c:	4005b700 	call	4005b70 <__lo0bits>
 4006590:	d8c00117 	ldw	r3,4(sp)
 4006594:	10003326 	beq	r2,zero,4006664 <__d2b+0x13c>
 4006598:	01000804 	movi	r4,32
 400659c:	2089c83a 	sub	r4,r4,r2
 40065a0:	1908983a 	sll	r4,r3,r4
 40065a4:	d9400017 	ldw	r5,0(sp)
 40065a8:	1886d83a 	srl	r3,r3,r2
 40065ac:	2148b03a 	or	r4,r4,r5
 40065b0:	89000515 	stw	r4,20(r17)
 40065b4:	d8c00115 	stw	r3,4(sp)
 40065b8:	88c00615 	stw	r3,24(r17)
 40065bc:	1800271e 	bne	r3,zero,400665c <__d2b+0x134>
 40065c0:	04000044 	movi	r16,1
 40065c4:	8c000415 	stw	r16,16(r17)
 40065c8:	90001926 	beq	r18,zero,4006630 <__d2b+0x108>
 40065cc:	00c00d44 	movi	r3,53
 40065d0:	94bef344 	addi	r18,r18,-1075
 40065d4:	90a5883a 	add	r18,r18,r2
 40065d8:	1885c83a 	sub	r2,r3,r2
 40065dc:	d8c00817 	ldw	r3,32(sp)
 40065e0:	9c800015 	stw	r18,0(r19)
 40065e4:	18800015 	stw	r2,0(r3)
 40065e8:	8805883a 	mov	r2,r17
 40065ec:	dfc00717 	ldw	ra,28(sp)
 40065f0:	dd000617 	ldw	r20,24(sp)
 40065f4:	dcc00517 	ldw	r19,20(sp)
 40065f8:	dc800417 	ldw	r18,16(sp)
 40065fc:	dc400317 	ldw	r17,12(sp)
 4006600:	dc000217 	ldw	r16,8(sp)
 4006604:	dec00804 	addi	sp,sp,32
 4006608:	f800283a 	ret
 400660c:	d9000104 	addi	r4,sp,4
 4006610:	4005b700 	call	4005b70 <__lo0bits>
 4006614:	00c00044 	movi	r3,1
 4006618:	88c00415 	stw	r3,16(r17)
 400661c:	d8c00117 	ldw	r3,4(sp)
 4006620:	10800804 	addi	r2,r2,32
 4006624:	04000044 	movi	r16,1
 4006628:	88c00515 	stw	r3,20(r17)
 400662c:	903fe71e 	bne	r18,zero,40065cc <__d2b+0xa4>
 4006630:	800690ba 	slli	r3,r16,2
 4006634:	10bef384 	addi	r2,r2,-1074
 4006638:	98800015 	stw	r2,0(r19)
 400663c:	88c5883a 	add	r2,r17,r3
 4006640:	11000417 	ldw	r4,16(r2)
 4006644:	8020917a 	slli	r16,r16,5
 4006648:	4005b0c0 	call	4005b0c <__hi0bits>
 400664c:	80a1c83a 	sub	r16,r16,r2
 4006650:	d8800817 	ldw	r2,32(sp)
 4006654:	14000015 	stw	r16,0(r2)
 4006658:	003fe306 	br	40065e8 <__d2b+0xc0>
 400665c:	04000084 	movi	r16,2
 4006660:	003fd806 	br	40065c4 <__d2b+0x9c>
 4006664:	d9000017 	ldw	r4,0(sp)
 4006668:	89000515 	stw	r4,20(r17)
 400666c:	003fd206 	br	40065b8 <__d2b+0x90>
 4006670:	01c10074 	movhi	r7,1025
 4006674:	01010074 	movhi	r4,1025
 4006678:	39fddd04 	addi	r7,r7,-2188
 400667c:	000d883a 	mov	r6,zero
 4006680:	0140c284 	movi	r5,778
 4006684:	213df104 	addi	r4,r4,-2108
 4006688:	40080480 	call	4008048 <__assert_func>

0400668c <__ratio>:
 400668c:	defff904 	addi	sp,sp,-28
 4006690:	dc400315 	stw	r17,12(sp)
 4006694:	2823883a 	mov	r17,r5
 4006698:	d80b883a 	mov	r5,sp
 400669c:	dfc00615 	stw	ra,24(sp)
 40066a0:	dcc00515 	stw	r19,20(sp)
 40066a4:	dc800415 	stw	r18,16(sp)
 40066a8:	2027883a 	mov	r19,r4
 40066ac:	dc000215 	stw	r16,8(sp)
 40066b0:	40064240 	call	4006424 <__b2d>
 40066b4:	d9400104 	addi	r5,sp,4
 40066b8:	8809883a 	mov	r4,r17
 40066bc:	1025883a 	mov	r18,r2
 40066c0:	1821883a 	mov	r16,r3
 40066c4:	40064240 	call	4006424 <__b2d>
 40066c8:	89400417 	ldw	r5,16(r17)
 40066cc:	99000417 	ldw	r4,16(r19)
 40066d0:	d9800117 	ldw	r6,4(sp)
 40066d4:	180f883a 	mov	r7,r3
 40066d8:	2149c83a 	sub	r4,r4,r5
 40066dc:	d9400017 	ldw	r5,0(sp)
 40066e0:	2008917a 	slli	r4,r4,5
 40066e4:	298bc83a 	sub	r5,r5,r6
 40066e8:	2149883a 	add	r4,r4,r5
 40066ec:	100d883a 	mov	r6,r2
 40066f0:	01000c0e 	bge	zero,r4,4006724 <__ratio+0x98>
 40066f4:	2008953a 	slli	r4,r4,20
 40066f8:	2421883a 	add	r16,r4,r16
 40066fc:	9009883a 	mov	r4,r18
 4006700:	800b883a 	mov	r5,r16
 4006704:	400aef40 	call	400aef4 <__divdf3>
 4006708:	dfc00617 	ldw	ra,24(sp)
 400670c:	dcc00517 	ldw	r19,20(sp)
 4006710:	dc800417 	ldw	r18,16(sp)
 4006714:	dc400317 	ldw	r17,12(sp)
 4006718:	dc000217 	ldw	r16,8(sp)
 400671c:	dec00704 	addi	sp,sp,28
 4006720:	f800283a 	ret
 4006724:	00bffc34 	movhi	r2,65520
 4006728:	2089383a 	mul	r4,r4,r2
 400672c:	20cf883a 	add	r7,r4,r3
 4006730:	003ff206 	br	40066fc <__ratio+0x70>

04006734 <_mprec_log10>:
 4006734:	defffe04 	addi	sp,sp,-8
 4006738:	dc000015 	stw	r16,0(sp)
 400673c:	dfc00115 	stw	ra,4(sp)
 4006740:	20800608 	cmpgei	r2,r4,24
 4006744:	2021883a 	mov	r16,r4
 4006748:	10000f26 	beq	r2,zero,4006788 <_mprec_log10+0x54>
 400674c:	0009883a 	mov	r4,zero
 4006750:	014ffc34 	movhi	r5,16368
 4006754:	000d883a 	mov	r6,zero
 4006758:	01d00934 	movhi	r7,16420
 400675c:	400b9b40 	call	400b9b4 <__muldf3>
 4006760:	843fffc4 	addi	r16,r16,-1
 4006764:	1009883a 	mov	r4,r2
 4006768:	180b883a 	mov	r5,r3
 400676c:	803ff91e 	bne	r16,zero,4006754 <_mprec_log10+0x20>
 4006770:	2005883a 	mov	r2,r4
 4006774:	2807883a 	mov	r3,r5
 4006778:	dfc00117 	ldw	ra,4(sp)
 400677c:	dc000017 	ldw	r16,0(sp)
 4006780:	dec00204 	addi	sp,sp,8
 4006784:	f800283a 	ret
 4006788:	202090fa 	slli	r16,r4,3
 400678c:	00810074 	movhi	r2,1025
 4006790:	10be1704 	addi	r2,r2,-1956
 4006794:	1421883a 	add	r16,r2,r16
 4006798:	81000017 	ldw	r4,0(r16)
 400679c:	81400117 	ldw	r5,4(r16)
 40067a0:	003ff306 	br	4006770 <_mprec_log10+0x3c>

040067a4 <__copybits>:
 40067a4:	297fffc4 	addi	r5,r5,-1
 40067a8:	280fd17a 	srai	r7,r5,5
 40067ac:	31400417 	ldw	r5,16(r6)
 40067b0:	30800504 	addi	r2,r6,20
 40067b4:	39c00044 	addi	r7,r7,1
 40067b8:	280a90ba 	slli	r5,r5,2
 40067bc:	380e90ba 	slli	r7,r7,2
 40067c0:	114b883a 	add	r5,r2,r5
 40067c4:	21cf883a 	add	r7,r4,r7
 40067c8:	11400c2e 	bgeu	r2,r5,40067fc <__copybits+0x58>
 40067cc:	2007883a 	mov	r3,r4
 40067d0:	12000017 	ldw	r8,0(r2)
 40067d4:	10800104 	addi	r2,r2,4
 40067d8:	18c00104 	addi	r3,r3,4
 40067dc:	1a3fff15 	stw	r8,-4(r3)
 40067e0:	117ffb36 	bltu	r2,r5,40067d0 <__copybits+0x2c>
 40067e4:	2985c83a 	sub	r2,r5,r6
 40067e8:	10bffac4 	addi	r2,r2,-21
 40067ec:	1004d0ba 	srli	r2,r2,2
 40067f0:	10800044 	addi	r2,r2,1
 40067f4:	100490ba 	slli	r2,r2,2
 40067f8:	2089883a 	add	r4,r4,r2
 40067fc:	21c0032e 	bgeu	r4,r7,400680c <__copybits+0x68>
 4006800:	21000104 	addi	r4,r4,4
 4006804:	203fff15 	stw	zero,-4(r4)
 4006808:	21fffd36 	bltu	r4,r7,4006800 <__copybits+0x5c>
 400680c:	f800283a 	ret

04006810 <__any_on>:
 4006810:	20c00417 	ldw	r3,16(r4)
 4006814:	280dd17a 	srai	r6,r5,5
 4006818:	21000504 	addi	r4,r4,20
 400681c:	1980080e 	bge	r3,r6,4006840 <__any_on+0x30>
 4006820:	180490ba 	slli	r2,r3,2
 4006824:	2085883a 	add	r2,r4,r2
 4006828:	20800f2e 	bgeu	r4,r2,4006868 <__any_on+0x58>
 400682c:	10ffff17 	ldw	r3,-4(r2)
 4006830:	10bfff04 	addi	r2,r2,-4
 4006834:	183ffc26 	beq	r3,zero,4006828 <__any_on+0x18>
 4006838:	00800044 	movi	r2,1
 400683c:	f800283a 	ret
 4006840:	300490ba 	slli	r2,r6,2
 4006844:	2085883a 	add	r2,r4,r2
 4006848:	30fff70e 	bge	r6,r3,4006828 <__any_on+0x18>
 400684c:	294007cc 	andi	r5,r5,31
 4006850:	283ff526 	beq	r5,zero,4006828 <__any_on+0x18>
 4006854:	11800017 	ldw	r6,0(r2)
 4006858:	3146d83a 	srl	r3,r6,r5
 400685c:	194a983a 	sll	r5,r3,r5
 4006860:	317ff51e 	bne	r6,r5,4006838 <__any_on+0x28>
 4006864:	003ff006 	br	4006828 <__any_on+0x18>
 4006868:	0005883a 	mov	r2,zero
 400686c:	f800283a 	ret

04006870 <_sbrk_r>:
 4006870:	defffe04 	addi	sp,sp,-8
 4006874:	dc000015 	stw	r16,0(sp)
 4006878:	00810074 	movhi	r2,1025
 400687c:	2021883a 	mov	r16,r4
 4006880:	2809883a 	mov	r4,r5
 4006884:	dfc00115 	stw	ra,4(sp)
 4006888:	100d5915 	stw	zero,13668(r2)
 400688c:	400d4e00 	call	400d4e0 <sbrk>
 4006890:	10ffffd8 	cmpnei	r3,r2,-1
 4006894:	18000426 	beq	r3,zero,40068a8 <_sbrk_r+0x38>
 4006898:	dfc00117 	ldw	ra,4(sp)
 400689c:	dc000017 	ldw	r16,0(sp)
 40068a0:	dec00204 	addi	sp,sp,8
 40068a4:	f800283a 	ret
 40068a8:	00c10074 	movhi	r3,1025
 40068ac:	18cd5917 	ldw	r3,13668(r3)
 40068b0:	183ff926 	beq	r3,zero,4006898 <_sbrk_r+0x28>
 40068b4:	80c00015 	stw	r3,0(r16)
 40068b8:	dfc00117 	ldw	ra,4(sp)
 40068bc:	dc000017 	ldw	r16,0(sp)
 40068c0:	dec00204 	addi	sp,sp,8
 40068c4:	f800283a 	ret

040068c8 <__sread>:
 40068c8:	defffe04 	addi	sp,sp,-8
 40068cc:	dc000015 	stw	r16,0(sp)
 40068d0:	2821883a 	mov	r16,r5
 40068d4:	2940038f 	ldh	r5,14(r5)
 40068d8:	dfc00115 	stw	ra,4(sp)
 40068dc:	4008cc00 	call	4008cc0 <_read_r>
 40068e0:	10000716 	blt	r2,zero,4006900 <__sread+0x38>
 40068e4:	80c01417 	ldw	r3,80(r16)
 40068e8:	1887883a 	add	r3,r3,r2
 40068ec:	80c01415 	stw	r3,80(r16)
 40068f0:	dfc00117 	ldw	ra,4(sp)
 40068f4:	dc000017 	ldw	r16,0(sp)
 40068f8:	dec00204 	addi	sp,sp,8
 40068fc:	f800283a 	ret
 4006900:	80c0030b 	ldhu	r3,12(r16)
 4006904:	18fbffcc 	andi	r3,r3,61439
 4006908:	80c0030d 	sth	r3,12(r16)
 400690c:	dfc00117 	ldw	ra,4(sp)
 4006910:	dc000017 	ldw	r16,0(sp)
 4006914:	dec00204 	addi	sp,sp,8
 4006918:	f800283a 	ret

0400691c <__seofread>:
 400691c:	0005883a 	mov	r2,zero
 4006920:	f800283a 	ret

04006924 <__swrite>:
 4006924:	2880030b 	ldhu	r2,12(r5)
 4006928:	defffb04 	addi	sp,sp,-20
 400692c:	dcc00315 	stw	r19,12(sp)
 4006930:	dc800215 	stw	r18,8(sp)
 4006934:	dc400115 	stw	r17,4(sp)
 4006938:	dc000015 	stw	r16,0(sp)
 400693c:	dfc00415 	stw	ra,16(sp)
 4006940:	10c0400c 	andi	r3,r2,256
 4006944:	2821883a 	mov	r16,r5
 4006948:	2023883a 	mov	r17,r4
 400694c:	2940038f 	ldh	r5,14(r5)
 4006950:	3025883a 	mov	r18,r6
 4006954:	3827883a 	mov	r19,r7
 4006958:	18000c1e 	bne	r3,zero,400698c <__swrite+0x68>
 400695c:	10bbffcc 	andi	r2,r2,61439
 4006960:	980f883a 	mov	r7,r19
 4006964:	900d883a 	mov	r6,r18
 4006968:	8809883a 	mov	r4,r17
 400696c:	8080030d 	sth	r2,12(r16)
 4006970:	dfc00417 	ldw	ra,16(sp)
 4006974:	dcc00317 	ldw	r19,12(sp)
 4006978:	dc800217 	ldw	r18,8(sp)
 400697c:	dc400117 	ldw	r17,4(sp)
 4006980:	dc000017 	ldw	r16,0(sp)
 4006984:	dec00504 	addi	sp,sp,20
 4006988:	4007f8c1 	jmpi	4007f8c <_write_r>
 400698c:	01c00084 	movi	r7,2
 4006990:	000d883a 	mov	r6,zero
 4006994:	4008ae00 	call	4008ae0 <_lseek_r>
 4006998:	8080030b 	ldhu	r2,12(r16)
 400699c:	8140038f 	ldh	r5,14(r16)
 40069a0:	003fee06 	br	400695c <__swrite+0x38>

040069a4 <__sseek>:
 40069a4:	defffe04 	addi	sp,sp,-8
 40069a8:	dc000015 	stw	r16,0(sp)
 40069ac:	2821883a 	mov	r16,r5
 40069b0:	2940038f 	ldh	r5,14(r5)
 40069b4:	dfc00115 	stw	ra,4(sp)
 40069b8:	4008ae00 	call	4008ae0 <_lseek_r>
 40069bc:	10ffffd8 	cmpnei	r3,r2,-1
 40069c0:	18000826 	beq	r3,zero,40069e4 <__sseek+0x40>
 40069c4:	80c0030b 	ldhu	r3,12(r16)
 40069c8:	80801415 	stw	r2,80(r16)
 40069cc:	18c40014 	ori	r3,r3,4096
 40069d0:	80c0030d 	sth	r3,12(r16)
 40069d4:	dfc00117 	ldw	ra,4(sp)
 40069d8:	dc000017 	ldw	r16,0(sp)
 40069dc:	dec00204 	addi	sp,sp,8
 40069e0:	f800283a 	ret
 40069e4:	80c0030b 	ldhu	r3,12(r16)
 40069e8:	18fbffcc 	andi	r3,r3,61439
 40069ec:	80c0030d 	sth	r3,12(r16)
 40069f0:	dfc00117 	ldw	ra,4(sp)
 40069f4:	dc000017 	ldw	r16,0(sp)
 40069f8:	dec00204 	addi	sp,sp,8
 40069fc:	f800283a 	ret

04006a00 <__sclose>:
 4006a00:	2940038f 	ldh	r5,14(r5)
 4006a04:	4007ff01 	jmpi	4007ff0 <_close_r>

04006a08 <strlen>:
 4006a08:	208000cc 	andi	r2,r4,3
 4006a0c:	10000926 	beq	r2,zero,4006a34 <strlen+0x2c>
 4006a10:	2005883a 	mov	r2,r4
 4006a14:	00000306 	br	4006a24 <strlen+0x1c>
 4006a18:	10800044 	addi	r2,r2,1
 4006a1c:	10c000cc 	andi	r3,r2,3
 4006a20:	18000526 	beq	r3,zero,4006a38 <strlen+0x30>
 4006a24:	10c00007 	ldb	r3,0(r2)
 4006a28:	183ffb1e 	bne	r3,zero,4006a18 <strlen+0x10>
 4006a2c:	1105c83a 	sub	r2,r2,r4
 4006a30:	f800283a 	ret
 4006a34:	2005883a 	mov	r2,r4
 4006a38:	11400017 	ldw	r5,0(r2)
 4006a3c:	01ffbff4 	movhi	r7,65279
 4006a40:	39ffbfc4 	addi	r7,r7,-257
 4006a44:	29c7883a 	add	r3,r5,r7
 4006a48:	01a02074 	movhi	r6,32897
 4006a4c:	014a303a 	nor	r5,zero,r5
 4006a50:	1946703a 	and	r3,r3,r5
 4006a54:	31a02004 	addi	r6,r6,-32640
 4006a58:	1986703a 	and	r3,r3,r6
 4006a5c:	1800071e 	bne	r3,zero,4006a7c <strlen+0x74>
 4006a60:	11400117 	ldw	r5,4(r2)
 4006a64:	10800104 	addi	r2,r2,4
 4006a68:	29c7883a 	add	r3,r5,r7
 4006a6c:	014a303a 	nor	r5,zero,r5
 4006a70:	1946703a 	and	r3,r3,r5
 4006a74:	1986703a 	and	r3,r3,r6
 4006a78:	183ff926 	beq	r3,zero,4006a60 <strlen+0x58>
 4006a7c:	10c00007 	ldb	r3,0(r2)
 4006a80:	183fea26 	beq	r3,zero,4006a2c <strlen+0x24>
 4006a84:	10c00047 	ldb	r3,1(r2)
 4006a88:	10800044 	addi	r2,r2,1
 4006a8c:	183fe726 	beq	r3,zero,4006a2c <strlen+0x24>
 4006a90:	10c00047 	ldb	r3,1(r2)
 4006a94:	10800044 	addi	r2,r2,1
 4006a98:	183ffa1e 	bne	r3,zero,4006a84 <strlen+0x7c>
 4006a9c:	003fe306 	br	4006a2c <strlen+0x24>

04006aa0 <__sprint_r.part.0>:
 4006aa0:	28801917 	ldw	r2,100(r5)
 4006aa4:	defff604 	addi	sp,sp,-40
 4006aa8:	dcc00315 	stw	r19,12(sp)
 4006aac:	dfc00915 	stw	ra,36(sp)
 4006ab0:	df000815 	stw	fp,32(sp)
 4006ab4:	ddc00715 	stw	r23,28(sp)
 4006ab8:	dd800615 	stw	r22,24(sp)
 4006abc:	dd400515 	stw	r21,20(sp)
 4006ac0:	dd000415 	stw	r20,16(sp)
 4006ac4:	dc800215 	stw	r18,8(sp)
 4006ac8:	dc400115 	stw	r17,4(sp)
 4006acc:	dc000015 	stw	r16,0(sp)
 4006ad0:	1088000c 	andi	r2,r2,8192
 4006ad4:	3027883a 	mov	r19,r6
 4006ad8:	10002c26 	beq	r2,zero,4006b8c <__sprint_r.part.0+0xec>
 4006adc:	30800217 	ldw	r2,8(r6)
 4006ae0:	35000017 	ldw	r20,0(r6)
 4006ae4:	2821883a 	mov	r16,r5
 4006ae8:	2023883a 	mov	r17,r4
 4006aec:	05bfff04 	movi	r22,-4
 4006af0:	10002426 	beq	r2,zero,4006b84 <__sprint_r.part.0+0xe4>
 4006af4:	a5400117 	ldw	r21,4(r20)
 4006af8:	a5c00017 	ldw	r23,0(r20)
 4006afc:	a824d0ba 	srli	r18,r21,2
 4006b00:	90001b26 	beq	r18,zero,4006b70 <__sprint_r.part.0+0xd0>
 4006b04:	0039883a 	mov	fp,zero
 4006b08:	00000206 	br	4006b14 <__sprint_r.part.0+0x74>
 4006b0c:	bdc00104 	addi	r23,r23,4
 4006b10:	97001626 	beq	r18,fp,4006b6c <__sprint_r.part.0+0xcc>
 4006b14:	b9400017 	ldw	r5,0(r23)
 4006b18:	800d883a 	mov	r6,r16
 4006b1c:	8809883a 	mov	r4,r17
 4006b20:	40084380 	call	4008438 <_fputwc_r>
 4006b24:	10bfffe0 	cmpeqi	r2,r2,-1
 4006b28:	e7000044 	addi	fp,fp,1
 4006b2c:	103ff726 	beq	r2,zero,4006b0c <__sprint_r.part.0+0x6c>
 4006b30:	00bfffc4 	movi	r2,-1
 4006b34:	98000215 	stw	zero,8(r19)
 4006b38:	98000115 	stw	zero,4(r19)
 4006b3c:	dfc00917 	ldw	ra,36(sp)
 4006b40:	df000817 	ldw	fp,32(sp)
 4006b44:	ddc00717 	ldw	r23,28(sp)
 4006b48:	dd800617 	ldw	r22,24(sp)
 4006b4c:	dd400517 	ldw	r21,20(sp)
 4006b50:	dd000417 	ldw	r20,16(sp)
 4006b54:	dcc00317 	ldw	r19,12(sp)
 4006b58:	dc800217 	ldw	r18,8(sp)
 4006b5c:	dc400117 	ldw	r17,4(sp)
 4006b60:	dc000017 	ldw	r16,0(sp)
 4006b64:	dec00a04 	addi	sp,sp,40
 4006b68:	f800283a 	ret
 4006b6c:	98800217 	ldw	r2,8(r19)
 4006b70:	adaa703a 	and	r21,r21,r22
 4006b74:	1545c83a 	sub	r2,r2,r21
 4006b78:	98800215 	stw	r2,8(r19)
 4006b7c:	a5000204 	addi	r20,r20,8
 4006b80:	103fdc1e 	bne	r2,zero,4006af4 <__sprint_r.part.0+0x54>
 4006b84:	0005883a 	mov	r2,zero
 4006b88:	003fea06 	br	4006b34 <__sprint_r.part.0+0x94>
 4006b8c:	40085340 	call	4008534 <__sfvwrite_r>
 4006b90:	003fe806 	br	4006b34 <__sprint_r.part.0+0x94>

04006b94 <__sprint_r>:
 4006b94:	30c00217 	ldw	r3,8(r6)
 4006b98:	18000126 	beq	r3,zero,4006ba0 <__sprint_r+0xc>
 4006b9c:	4006aa01 	jmpi	4006aa0 <__sprint_r.part.0>
 4006ba0:	30000115 	stw	zero,4(r6)
 4006ba4:	0005883a 	mov	r2,zero
 4006ba8:	f800283a 	ret

04006bac <___vfiprintf_internal_r>:
 4006bac:	deffcf04 	addi	sp,sp,-196
 4006bb0:	dd802d15 	stw	r22,180(sp)
 4006bb4:	dd402c15 	stw	r21,176(sp)
 4006bb8:	dd002b15 	stw	r20,172(sp)
 4006bbc:	dfc03015 	stw	ra,192(sp)
 4006bc0:	df002f15 	stw	fp,188(sp)
 4006bc4:	ddc02e15 	stw	r23,184(sp)
 4006bc8:	dcc02a15 	stw	r19,168(sp)
 4006bcc:	dc802915 	stw	r18,164(sp)
 4006bd0:	dc402815 	stw	r17,160(sp)
 4006bd4:	dc002715 	stw	r16,156(sp)
 4006bd8:	d9c00415 	stw	r7,16(sp)
 4006bdc:	202d883a 	mov	r22,r4
 4006be0:	282b883a 	mov	r21,r5
 4006be4:	3029883a 	mov	r20,r6
 4006be8:	20000226 	beq	r4,zero,4006bf4 <___vfiprintf_internal_r+0x48>
 4006bec:	20800e17 	ldw	r2,56(r4)
 4006bf0:	1001b226 	beq	r2,zero,40072bc <___vfiprintf_internal_r+0x710>
 4006bf4:	a880030b 	ldhu	r2,12(r21)
 4006bf8:	10c8000c 	andi	r3,r2,8192
 4006bfc:	1800061e 	bne	r3,zero,4006c18 <___vfiprintf_internal_r+0x6c>
 4006c00:	a8c01917 	ldw	r3,100(r21)
 4006c04:	0137ffc4 	movi	r4,-8193
 4006c08:	10880014 	ori	r2,r2,8192
 4006c0c:	1906703a 	and	r3,r3,r4
 4006c10:	a880030d 	sth	r2,12(r21)
 4006c14:	a8c01915 	stw	r3,100(r21)
 4006c18:	10c0020c 	andi	r3,r2,8
 4006c1c:	18010626 	beq	r3,zero,4007038 <___vfiprintf_internal_r+0x48c>
 4006c20:	a8c00417 	ldw	r3,16(r21)
 4006c24:	18010426 	beq	r3,zero,4007038 <___vfiprintf_internal_r+0x48c>
 4006c28:	1080068c 	andi	r2,r2,26
 4006c2c:	10800298 	cmpnei	r2,r2,10
 4006c30:	10010926 	beq	r2,zero,4007058 <___vfiprintf_internal_r+0x4ac>
 4006c34:	dc801704 	addi	r18,sp,92
 4006c38:	dc800a15 	stw	r18,40(sp)
 4006c3c:	d8000c15 	stw	zero,48(sp)
 4006c40:	d8000b15 	stw	zero,44(sp)
 4006c44:	9021883a 	mov	r16,r18
 4006c48:	d8000515 	stw	zero,20(sp)
 4006c4c:	d8000115 	stw	zero,4(sp)
 4006c50:	a0c00007 	ldb	r3,0(r20)
 4006c54:	1800e626 	beq	r3,zero,4006ff0 <___vfiprintf_internal_r+0x444>
 4006c58:	a023883a 	mov	r17,r20
 4006c5c:	00000306 	br	4006c6c <___vfiprintf_internal_r+0xc0>
 4006c60:	88c00047 	ldb	r3,1(r17)
 4006c64:	8c400044 	addi	r17,r17,1
 4006c68:	18012826 	beq	r3,zero,400710c <___vfiprintf_internal_r+0x560>
 4006c6c:	18c00958 	cmpnei	r3,r3,37
 4006c70:	183ffb1e 	bne	r3,zero,4006c60 <___vfiprintf_internal_r+0xb4>
 4006c74:	8d27c83a 	sub	r19,r17,r20
 4006c78:	8d01261e 	bne	r17,r20,4007114 <___vfiprintf_internal_r+0x568>
 4006c7c:	88800003 	ldbu	r2,0(r17)
 4006c80:	10803fcc 	andi	r2,r2,255
 4006c84:	1080201c 	xori	r2,r2,128
 4006c88:	10bfe004 	addi	r2,r2,-128
 4006c8c:	1000d826 	beq	r2,zero,4006ff0 <___vfiprintf_internal_r+0x444>
 4006c90:	88800047 	ldb	r2,1(r17)
 4006c94:	8d000044 	addi	r20,r17,1
 4006c98:	d8000945 	stb	zero,37(sp)
 4006c9c:	000b883a 	mov	r5,zero
 4006ca0:	000d883a 	mov	r6,zero
 4006ca4:	023fffc4 	movi	r8,-1
 4006ca8:	0023883a 	mov	r17,zero
 4006cac:	001b883a 	mov	r13,zero
 4006cb0:	a5000044 	addi	r20,r20,1
 4006cb4:	10fff804 	addi	r3,r2,-32
 4006cb8:	19001668 	cmpgeui	r4,r3,89
 4006cbc:	20006a1e 	bne	r4,zero,4006e68 <___vfiprintf_internal_r+0x2bc>
 4006cc0:	180690ba 	slli	r3,r3,2
 4006cc4:	01010034 	movhi	r4,1024
 4006cc8:	1909883a 	add	r4,r3,r4
 4006ccc:	20db3517 	ldw	r3,27860(r4)
 4006cd0:	1800683a 	jmp	r3
 4006cd4:	040075c4 	movi	r16,471
 4006cd8:	04006e68 	cmpgeui	r16,zero,441
 4006cdc:	04006e68 	cmpgeui	r16,zero,441
 4006ce0:	040075b8 	rdprs	r16,zero,470
 4006ce4:	04006e68 	cmpgeui	r16,zero,441
 4006ce8:	04006e68 	cmpgeui	r16,zero,441
 4006cec:	04006e68 	cmpgeui	r16,zero,441
 4006cf0:	04006e68 	cmpgeui	r16,zero,441
 4006cf4:	04006e68 	cmpgeui	r16,zero,441
 4006cf8:	04006e68 	cmpgeui	r16,zero,441
 4006cfc:	04007590 	cmplti	r16,zero,470
 4006d00:	04007580 	call	400758 <__alt_mem_dram_controller-0x3bff8a8>
 4006d04:	04006e68 	cmpgeui	r16,zero,441
 4006d08:	04007568 	cmpgeui	r16,zero,469
 4006d0c:	04007524 	muli	r16,zero,468
 4006d10:	04006e68 	cmpgeui	r16,zero,441
 4006d14:	04007518 	cmpnei	r16,zero,468
 4006d18:	04006e38 	rdprs	r16,zero,440
 4006d1c:	04006e38 	rdprs	r16,zero,440
 4006d20:	04006e38 	rdprs	r16,zero,440
 4006d24:	04006e38 	rdprs	r16,zero,440
 4006d28:	04006e38 	rdprs	r16,zero,440
 4006d2c:	04006e38 	rdprs	r16,zero,440
 4006d30:	04006e38 	rdprs	r16,zero,440
 4006d34:	04006e38 	rdprs	r16,zero,440
 4006d38:	04006e38 	rdprs	r16,zero,440
 4006d3c:	04006e68 	cmpgeui	r16,zero,441
 4006d40:	04006e68 	cmpgeui	r16,zero,441
 4006d44:	04006e68 	cmpgeui	r16,zero,441
 4006d48:	04006e68 	cmpgeui	r16,zero,441
 4006d4c:	04006e68 	cmpgeui	r16,zero,441
 4006d50:	04006e68 	cmpgeui	r16,zero,441
 4006d54:	04006e68 	cmpgeui	r16,zero,441
 4006d58:	04006e68 	cmpgeui	r16,zero,441
 4006d5c:	04006e68 	cmpgeui	r16,zero,441
 4006d60:	04006e68 	cmpgeui	r16,zero,441
 4006d64:	04007434 	movhi	r16,464
 4006d68:	04006e68 	cmpgeui	r16,zero,441
 4006d6c:	04006e68 	cmpgeui	r16,zero,441
 4006d70:	04006e68 	cmpgeui	r16,zero,441
 4006d74:	04006e68 	cmpgeui	r16,zero,441
 4006d78:	04006e68 	cmpgeui	r16,zero,441
 4006d7c:	04006e68 	cmpgeui	r16,zero,441
 4006d80:	04006e68 	cmpgeui	r16,zero,441
 4006d84:	04006e68 	cmpgeui	r16,zero,441
 4006d88:	04006e68 	cmpgeui	r16,zero,441
 4006d8c:	04006e68 	cmpgeui	r16,zero,441
 4006d90:	040070a4 	muli	r16,zero,450
 4006d94:	04006e68 	cmpgeui	r16,zero,441
 4006d98:	04006e68 	cmpgeui	r16,zero,441
 4006d9c:	04006e68 	cmpgeui	r16,zero,441
 4006da0:	04006e68 	cmpgeui	r16,zero,441
 4006da4:	04006e68 	cmpgeui	r16,zero,441
 4006da8:	0400707c 	xorhi	r16,zero,449
 4006dac:	04006e68 	cmpgeui	r16,zero,441
 4006db0:	04006e68 	cmpgeui	r16,zero,441
 4006db4:	040073ec 	andhi	r16,zero,463
 4006db8:	04006e68 	cmpgeui	r16,zero,441
 4006dbc:	04006e68 	cmpgeui	r16,zero,441
 4006dc0:	04006e68 	cmpgeui	r16,zero,441
 4006dc4:	04006e68 	cmpgeui	r16,zero,441
 4006dc8:	04006e68 	cmpgeui	r16,zero,441
 4006dcc:	04006e68 	cmpgeui	r16,zero,441
 4006dd0:	04006e68 	cmpgeui	r16,zero,441
 4006dd4:	04006e68 	cmpgeui	r16,zero,441
 4006dd8:	04006e68 	cmpgeui	r16,zero,441
 4006ddc:	04006e68 	cmpgeui	r16,zero,441
 4006de0:	040073c4 	movi	r16,463
 4006de4:	040072c4 	movi	r16,459
 4006de8:	04006e68 	cmpgeui	r16,zero,441
 4006dec:	04006e68 	cmpgeui	r16,zero,441
 4006df0:	04006e68 	cmpgeui	r16,zero,441
 4006df4:	04007368 	cmpgeui	r16,zero,461
 4006df8:	040072c4 	movi	r16,459
 4006dfc:	04006e68 	cmpgeui	r16,zero,441
 4006e00:	04006e68 	cmpgeui	r16,zero,441
 4006e04:	040073b0 	cmpltui	r16,zero,462
 4006e08:	04006e68 	cmpgeui	r16,zero,441
 4006e0c:	04007374 	movhi	r16,461
 4006e10:	040070a8 	cmpgeui	r16,zero,450
 4006e14:	0400769c 	xori	r16,zero,474
 4006e18:	04007690 	cmplti	r16,zero,474
 4006e1c:	04006e68 	cmpgeui	r16,zero,441
 4006e20:	04007638 	rdprs	r16,zero,472
 4006e24:	04006e68 	cmpgeui	r16,zero,441
 4006e28:	04007080 	call	400708 <__alt_mem_dram_controller-0x3bff8f8>
 4006e2c:	04006e68 	cmpgeui	r16,zero,441
 4006e30:	04006e68 	cmpgeui	r16,zero,441
 4006e34:	040075f0 	cmpltui	r16,zero,471
 4006e38:	0023883a 	mov	r17,zero
 4006e3c:	10fff404 	addi	r3,r2,-48
 4006e40:	a0800007 	ldb	r2,0(r20)
 4006e44:	8c4002a4 	muli	r17,r17,10
 4006e48:	a5000044 	addi	r20,r20,1
 4006e4c:	1c63883a 	add	r17,r3,r17
 4006e50:	10fff404 	addi	r3,r2,-48
 4006e54:	190002b0 	cmpltui	r4,r3,10
 4006e58:	203ff91e 	bne	r4,zero,4006e40 <___vfiprintf_internal_r+0x294>
 4006e5c:	10fff804 	addi	r3,r2,-32
 4006e60:	19001668 	cmpgeui	r4,r3,89
 4006e64:	203f9626 	beq	r4,zero,4006cc0 <___vfiprintf_internal_r+0x114>
 4006e68:	29403fcc 	andi	r5,r5,255
 4006e6c:	2803e11e 	bne	r5,zero,4007df4 <___vfiprintf_internal_r+0x1248>
 4006e70:	10005f26 	beq	r2,zero,4006ff0 <___vfiprintf_internal_r+0x444>
 4006e74:	d8800d05 	stb	r2,52(sp)
 4006e78:	d8000945 	stb	zero,37(sp)
 4006e7c:	05c00044 	movi	r23,1
 4006e80:	07000044 	movi	fp,1
 4006e84:	dcc00d04 	addi	r19,sp,52
 4006e88:	db400015 	stw	r13,0(sp)
 4006e8c:	0011883a 	mov	r8,zero
 4006e90:	d8800017 	ldw	r2,0(sp)
 4006e94:	1380008c 	andi	r14,r2,2
 4006e98:	70000126 	beq	r14,zero,4006ea0 <___vfiprintf_internal_r+0x2f4>
 4006e9c:	bdc00084 	addi	r23,r23,2
 4006ea0:	d8800017 	ldw	r2,0(sp)
 4006ea4:	d9000b17 	ldw	r4,44(sp)
 4006ea8:	1340210c 	andi	r13,r2,132
 4006eac:	21800044 	addi	r6,r4,1
 4006eb0:	d8800c17 	ldw	r2,48(sp)
 4006eb4:	300b883a 	mov	r5,r6
 4006eb8:	6800021e 	bne	r13,zero,4006ec4 <___vfiprintf_internal_r+0x318>
 4006ebc:	8dc7c83a 	sub	r3,r17,r23
 4006ec0:	00c2d516 	blt	zero,r3,4007a18 <___vfiprintf_internal_r+0xe6c>
 4006ec4:	d8c00947 	ldb	r3,37(sp)
 4006ec8:	81800204 	addi	r6,r16,8
 4006ecc:	18000d26 	beq	r3,zero,4006f04 <___vfiprintf_internal_r+0x358>
 4006ed0:	d8c00944 	addi	r3,sp,37
 4006ed4:	10800044 	addi	r2,r2,1
 4006ed8:	80c00015 	stw	r3,0(r16)
 4006edc:	00c00044 	movi	r3,1
 4006ee0:	80c00115 	stw	r3,4(r16)
 4006ee4:	d8800c15 	stw	r2,48(sp)
 4006ee8:	d9400b15 	stw	r5,44(sp)
 4006eec:	28c00208 	cmpgei	r3,r5,8
 4006ef0:	1802aa1e 	bne	r3,zero,400799c <___vfiprintf_internal_r+0xdf0>
 4006ef4:	2809883a 	mov	r4,r5
 4006ef8:	3021883a 	mov	r16,r6
 4006efc:	29400044 	addi	r5,r5,1
 4006f00:	31800204 	addi	r6,r6,8
 4006f04:	70001826 	beq	r14,zero,4006f68 <___vfiprintf_internal_r+0x3bc>
 4006f08:	d8c00984 	addi	r3,sp,38
 4006f0c:	10800084 	addi	r2,r2,2
 4006f10:	80c00015 	stw	r3,0(r16)
 4006f14:	00c00084 	movi	r3,2
 4006f18:	80c00115 	stw	r3,4(r16)
 4006f1c:	d8800c15 	stw	r2,48(sp)
 4006f20:	d9400b15 	stw	r5,44(sp)
 4006f24:	28c00208 	cmpgei	r3,r5,8
 4006f28:	1802b426 	beq	r3,zero,40079fc <___vfiprintf_internal_r+0xe50>
 4006f2c:	10031026 	beq	r2,zero,4007b70 <___vfiprintf_internal_r+0xfc4>
 4006f30:	d9800a04 	addi	r6,sp,40
 4006f34:	a80b883a 	mov	r5,r21
 4006f38:	b009883a 	mov	r4,r22
 4006f3c:	da000315 	stw	r8,12(sp)
 4006f40:	db400215 	stw	r13,8(sp)
 4006f44:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4006f48:	10002b1e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 4006f4c:	d9000b17 	ldw	r4,44(sp)
 4006f50:	d8800c17 	ldw	r2,48(sp)
 4006f54:	da000317 	ldw	r8,12(sp)
 4006f58:	db400217 	ldw	r13,8(sp)
 4006f5c:	d9801904 	addi	r6,sp,100
 4006f60:	21400044 	addi	r5,r4,1
 4006f64:	9021883a 	mov	r16,r18
 4006f68:	6b402018 	cmpnei	r13,r13,128
 4006f6c:	68020a26 	beq	r13,zero,4007798 <___vfiprintf_internal_r+0xbec>
 4006f70:	4711c83a 	sub	r8,r8,fp
 4006f74:	02024916 	blt	zero,r8,400789c <___vfiprintf_internal_r+0xcf0>
 4006f78:	e085883a 	add	r2,fp,r2
 4006f7c:	d9400b15 	stw	r5,44(sp)
 4006f80:	84c00015 	stw	r19,0(r16)
 4006f84:	87000115 	stw	fp,4(r16)
 4006f88:	d8800c15 	stw	r2,48(sp)
 4006f8c:	29400210 	cmplti	r5,r5,8
 4006f90:	2800081e 	bne	r5,zero,4006fb4 <___vfiprintf_internal_r+0x408>
 4006f94:	10008f26 	beq	r2,zero,40071d4 <___vfiprintf_internal_r+0x628>
 4006f98:	d9800a04 	addi	r6,sp,40
 4006f9c:	a80b883a 	mov	r5,r21
 4006fa0:	b009883a 	mov	r4,r22
 4006fa4:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4006fa8:	1000131e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 4006fac:	d8800c17 	ldw	r2,48(sp)
 4006fb0:	900d883a 	mov	r6,r18
 4006fb4:	d8c00017 	ldw	r3,0(sp)
 4006fb8:	1cc0010c 	andi	r19,r3,4
 4006fbc:	98000226 	beq	r19,zero,4006fc8 <___vfiprintf_internal_r+0x41c>
 4006fc0:	8de1c83a 	sub	r16,r17,r23
 4006fc4:	04008a16 	blt	zero,r16,40071f0 <___vfiprintf_internal_r+0x644>
 4006fc8:	8dc0010e 	bge	r17,r23,4006fd0 <___vfiprintf_internal_r+0x424>
 4006fcc:	b823883a 	mov	r17,r23
 4006fd0:	d8c00117 	ldw	r3,4(sp)
 4006fd4:	1c47883a 	add	r3,r3,r17
 4006fd8:	d8c00115 	stw	r3,4(sp)
 4006fdc:	1002651e 	bne	r2,zero,4007974 <___vfiprintf_internal_r+0xdc8>
 4006fe0:	a0c00007 	ldb	r3,0(r20)
 4006fe4:	d8000b15 	stw	zero,44(sp)
 4006fe8:	9021883a 	mov	r16,r18
 4006fec:	183f1a1e 	bne	r3,zero,4006c58 <___vfiprintf_internal_r+0xac>
 4006ff0:	d8800c17 	ldw	r2,48(sp)
 4006ff4:	1003811e 	bne	r2,zero,4007dfc <___vfiprintf_internal_r+0x1250>
 4006ff8:	a880030b 	ldhu	r2,12(r21)
 4006ffc:	1080100c 	andi	r2,r2,64
 4007000:	10039c1e 	bne	r2,zero,4007e74 <___vfiprintf_internal_r+0x12c8>
 4007004:	d8800117 	ldw	r2,4(sp)
 4007008:	dfc03017 	ldw	ra,192(sp)
 400700c:	df002f17 	ldw	fp,188(sp)
 4007010:	ddc02e17 	ldw	r23,184(sp)
 4007014:	dd802d17 	ldw	r22,180(sp)
 4007018:	dd402c17 	ldw	r21,176(sp)
 400701c:	dd002b17 	ldw	r20,172(sp)
 4007020:	dcc02a17 	ldw	r19,168(sp)
 4007024:	dc802917 	ldw	r18,164(sp)
 4007028:	dc402817 	ldw	r17,160(sp)
 400702c:	dc002717 	ldw	r16,156(sp)
 4007030:	dec03104 	addi	sp,sp,196
 4007034:	f800283a 	ret
 4007038:	a80b883a 	mov	r5,r21
 400703c:	b009883a 	mov	r4,r22
 4007040:	40025440 	call	4002544 <__swsetup_r>
 4007044:	10038b1e 	bne	r2,zero,4007e74 <___vfiprintf_internal_r+0x12c8>
 4007048:	a880030b 	ldhu	r2,12(r21)
 400704c:	1080068c 	andi	r2,r2,26
 4007050:	10800298 	cmpnei	r2,r2,10
 4007054:	103ef71e 	bne	r2,zero,4006c34 <___vfiprintf_internal_r+0x88>
 4007058:	a880038f 	ldh	r2,14(r21)
 400705c:	103ef516 	blt	r2,zero,4006c34 <___vfiprintf_internal_r+0x88>
 4007060:	d9c00417 	ldw	r7,16(sp)
 4007064:	a00d883a 	mov	r6,r20
 4007068:	a80b883a 	mov	r5,r21
 400706c:	b009883a 	mov	r4,r22
 4007070:	4007ecc0 	call	4007ecc <__sbprintf>
 4007074:	d8800115 	stw	r2,4(sp)
 4007078:	003fe206 	br	4007004 <___vfiprintf_internal_r+0x458>
 400707c:	6b400414 	ori	r13,r13,16
 4007080:	6880080c 	andi	r2,r13,32
 4007084:	10004726 	beq	r2,zero,40071a4 <___vfiprintf_internal_r+0x5f8>
 4007088:	d8c00417 	ldw	r3,16(sp)
 400708c:	00800044 	movi	r2,1
 4007090:	1dc00017 	ldw	r23,0(r3)
 4007094:	1f000117 	ldw	fp,4(r3)
 4007098:	18c00204 	addi	r3,r3,8
 400709c:	d8c00415 	stw	r3,16(sp)
 40070a0:	00000906 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 40070a4:	6b400414 	ori	r13,r13,16
 40070a8:	6880080c 	andi	r2,r13,32
 40070ac:	10003126 	beq	r2,zero,4007174 <___vfiprintf_internal_r+0x5c8>
 40070b0:	d8c00417 	ldw	r3,16(sp)
 40070b4:	0005883a 	mov	r2,zero
 40070b8:	1dc00017 	ldw	r23,0(r3)
 40070bc:	1f000117 	ldw	fp,4(r3)
 40070c0:	18c00204 	addi	r3,r3,8
 40070c4:	d8c00415 	stw	r3,16(sp)
 40070c8:	d8000945 	stb	zero,37(sp)
 40070cc:	40ffffe0 	cmpeqi	r3,r8,-1
 40070d0:	001d883a 	mov	r14,zero
 40070d4:	1800f21e 	bne	r3,zero,40074a0 <___vfiprintf_internal_r+0x8f4>
 40070d8:	04ffdfc4 	movi	r19,-129
 40070dc:	6cc8703a 	and	r4,r13,r19
 40070e0:	bf06b03a 	or	r3,r23,fp
 40070e4:	d9000015 	stw	r4,0(sp)
 40070e8:	1802491e 	bne	r3,zero,4007a10 <___vfiprintf_internal_r+0xe64>
 40070ec:	4003071e 	bne	r8,zero,4007d0c <___vfiprintf_internal_r+0x1160>
 40070f0:	1002a41e 	bne	r2,zero,4007b84 <___vfiprintf_internal_r+0xfd8>
 40070f4:	6f00004c 	andi	fp,r13,1
 40070f8:	e002b626 	beq	fp,zero,4007bd4 <___vfiprintf_internal_r+0x1028>
 40070fc:	00800c04 	movi	r2,48
 4007100:	d88016c5 	stb	r2,91(sp)
 4007104:	dcc016c4 	addi	r19,sp,91
 4007108:	00008e06 	br	4007344 <___vfiprintf_internal_r+0x798>
 400710c:	8d27c83a 	sub	r19,r17,r20
 4007110:	8d3fb726 	beq	r17,r20,4006ff0 <___vfiprintf_internal_r+0x444>
 4007114:	d8c00c17 	ldw	r3,48(sp)
 4007118:	d8800b17 	ldw	r2,44(sp)
 400711c:	85000015 	stw	r20,0(r16)
 4007120:	98c7883a 	add	r3,r19,r3
 4007124:	10800044 	addi	r2,r2,1
 4007128:	d8800b15 	stw	r2,44(sp)
 400712c:	84c00115 	stw	r19,4(r16)
 4007130:	d8c00c15 	stw	r3,48(sp)
 4007134:	10800208 	cmpgei	r2,r2,8
 4007138:	1000061e 	bne	r2,zero,4007154 <___vfiprintf_internal_r+0x5a8>
 400713c:	84000204 	addi	r16,r16,8
 4007140:	d8c00117 	ldw	r3,4(sp)
 4007144:	88800003 	ldbu	r2,0(r17)
 4007148:	1cc7883a 	add	r3,r3,r19
 400714c:	d8c00115 	stw	r3,4(sp)
 4007150:	003ecb06 	br	4006c80 <___vfiprintf_internal_r+0xd4>
 4007154:	18027d26 	beq	r3,zero,4007b4c <___vfiprintf_internal_r+0xfa0>
 4007158:	d9800a04 	addi	r6,sp,40
 400715c:	a80b883a 	mov	r5,r21
 4007160:	b009883a 	mov	r4,r22
 4007164:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007168:	103fa31e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 400716c:	9021883a 	mov	r16,r18
 4007170:	003ff306 	br	4007140 <___vfiprintf_internal_r+0x594>
 4007174:	d9000417 	ldw	r4,16(sp)
 4007178:	6880040c 	andi	r2,r13,16
 400717c:	20c00104 	addi	r3,r4,4
 4007180:	1002a11e 	bne	r2,zero,4007c08 <___vfiprintf_internal_r+0x105c>
 4007184:	6880100c 	andi	r2,r13,64
 4007188:	1002f426 	beq	r2,zero,4007d5c <___vfiprintf_internal_r+0x11b0>
 400718c:	d8800417 	ldw	r2,16(sp)
 4007190:	0039883a 	mov	fp,zero
 4007194:	d8c00415 	stw	r3,16(sp)
 4007198:	15c0000b 	ldhu	r23,0(r2)
 400719c:	0005883a 	mov	r2,zero
 40071a0:	003fc906 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 40071a4:	d9000417 	ldw	r4,16(sp)
 40071a8:	6880040c 	andi	r2,r13,16
 40071ac:	20c00104 	addi	r3,r4,4
 40071b0:	1002a91e 	bne	r2,zero,4007c58 <___vfiprintf_internal_r+0x10ac>
 40071b4:	6880100c 	andi	r2,r13,64
 40071b8:	1002ee26 	beq	r2,zero,4007d74 <___vfiprintf_internal_r+0x11c8>
 40071bc:	d8800417 	ldw	r2,16(sp)
 40071c0:	0039883a 	mov	fp,zero
 40071c4:	d8c00415 	stw	r3,16(sp)
 40071c8:	15c0000b 	ldhu	r23,0(r2)
 40071cc:	00800044 	movi	r2,1
 40071d0:	003fbd06 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 40071d4:	d8c00017 	ldw	r3,0(sp)
 40071d8:	d8000b15 	stw	zero,44(sp)
 40071dc:	1cc0010c 	andi	r19,r3,4
 40071e0:	98024826 	beq	r19,zero,4007b04 <___vfiprintf_internal_r+0xf58>
 40071e4:	8de1c83a 	sub	r16,r17,r23
 40071e8:	0402460e 	bge	zero,r16,4007b04 <___vfiprintf_internal_r+0xf58>
 40071ec:	900d883a 	mov	r6,r18
 40071f0:	80c00450 	cmplti	r3,r16,17
 40071f4:	d9000b17 	ldw	r4,44(sp)
 40071f8:	01c10074 	movhi	r7,1025
 40071fc:	1803151e 	bne	r3,zero,4007e54 <___vfiprintf_internal_r+0x12a8>
 4007200:	39fe4d04 	addi	r7,r7,-1740
 4007204:	04c00404 	movi	r19,16
 4007208:	00000606 	br	4007224 <___vfiprintf_internal_r+0x678>
 400720c:	21400084 	addi	r5,r4,2
 4007210:	31800204 	addi	r6,r6,8
 4007214:	1809883a 	mov	r4,r3
 4007218:	843ffc04 	addi	r16,r16,-16
 400721c:	80c00448 	cmpgei	r3,r16,17
 4007220:	18001726 	beq	r3,zero,4007280 <___vfiprintf_internal_r+0x6d4>
 4007224:	20c00044 	addi	r3,r4,1
 4007228:	10800404 	addi	r2,r2,16
 400722c:	31c00015 	stw	r7,0(r6)
 4007230:	34c00115 	stw	r19,4(r6)
 4007234:	d8800c15 	stw	r2,48(sp)
 4007238:	d8c00b15 	stw	r3,44(sp)
 400723c:	19400208 	cmpgei	r5,r3,8
 4007240:	283ff226 	beq	r5,zero,400720c <___vfiprintf_internal_r+0x660>
 4007244:	d9800a04 	addi	r6,sp,40
 4007248:	a80b883a 	mov	r5,r21
 400724c:	b009883a 	mov	r4,r22
 4007250:	10014d26 	beq	r2,zero,4007788 <___vfiprintf_internal_r+0xbdc>
 4007254:	d9c00015 	stw	r7,0(sp)
 4007258:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 400725c:	103f661e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 4007260:	d9000b17 	ldw	r4,44(sp)
 4007264:	843ffc04 	addi	r16,r16,-16
 4007268:	80c00448 	cmpgei	r3,r16,17
 400726c:	d8800c17 	ldw	r2,48(sp)
 4007270:	d9c00017 	ldw	r7,0(sp)
 4007274:	900d883a 	mov	r6,r18
 4007278:	21400044 	addi	r5,r4,1
 400727c:	183fe91e 	bne	r3,zero,4007224 <___vfiprintf_internal_r+0x678>
 4007280:	1405883a 	add	r2,r2,r16
 4007284:	d9400b15 	stw	r5,44(sp)
 4007288:	31c00015 	stw	r7,0(r6)
 400728c:	34000115 	stw	r16,4(r6)
 4007290:	d8800c15 	stw	r2,48(sp)
 4007294:	29400210 	cmplti	r5,r5,8
 4007298:	283f4b1e 	bne	r5,zero,4006fc8 <___vfiprintf_internal_r+0x41c>
 400729c:	10021926 	beq	r2,zero,4007b04 <___vfiprintf_internal_r+0xf58>
 40072a0:	d9800a04 	addi	r6,sp,40
 40072a4:	a80b883a 	mov	r5,r21
 40072a8:	b009883a 	mov	r4,r22
 40072ac:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 40072b0:	103f511e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 40072b4:	d8800c17 	ldw	r2,48(sp)
 40072b8:	003f4306 	br	4006fc8 <___vfiprintf_internal_r+0x41c>
 40072bc:	40045980 	call	4004598 <__sinit>
 40072c0:	003e4c06 	br	4006bf4 <___vfiprintf_internal_r+0x48>
 40072c4:	29403fcc 	andi	r5,r5,255
 40072c8:	2802de1e 	bne	r5,zero,4007e44 <___vfiprintf_internal_r+0x1298>
 40072cc:	6880080c 	andi	r2,r13,32
 40072d0:	10005d26 	beq	r2,zero,4007448 <___vfiprintf_internal_r+0x89c>
 40072d4:	d8c00417 	ldw	r3,16(sp)
 40072d8:	18800117 	ldw	r2,4(r3)
 40072dc:	1dc00017 	ldw	r23,0(r3)
 40072e0:	18c00204 	addi	r3,r3,8
 40072e4:	d8c00415 	stw	r3,16(sp)
 40072e8:	1039883a 	mov	fp,r2
 40072ec:	10006216 	blt	r2,zero,4007478 <___vfiprintf_internal_r+0x8cc>
 40072f0:	40bfffd8 	cmpnei	r2,r8,-1
 40072f4:	10000a26 	beq	r2,zero,4007320 <___vfiprintf_internal_r+0x774>
 40072f8:	00ffdfc4 	movi	r3,-129
 40072fc:	bf04b03a 	or	r2,r23,fp
 4007300:	db800943 	ldbu	r14,37(sp)
 4007304:	68da703a 	and	r13,r13,r3
 4007308:	1000061e 	bne	r2,zero,4007324 <___vfiprintf_internal_r+0x778>
 400730c:	4000081e 	bne	r8,zero,4007330 <___vfiprintf_internal_r+0x784>
 4007310:	0039883a 	mov	fp,zero
 4007314:	db400015 	stw	r13,0(sp)
 4007318:	9027883a 	mov	r19,r18
 400731c:	00000906 	br	4007344 <___vfiprintf_internal_r+0x798>
 4007320:	db800943 	ldbu	r14,37(sp)
 4007324:	e000ec1e 	bne	fp,zero,40076d8 <___vfiprintf_internal_r+0xb2c>
 4007328:	b88002a8 	cmpgeui	r2,r23,10
 400732c:	1000ea1e 	bne	r2,zero,40076d8 <___vfiprintf_internal_r+0xb2c>
 4007330:	bdc00c04 	addi	r23,r23,48
 4007334:	ddc016c5 	stb	r23,91(sp)
 4007338:	db400015 	stw	r13,0(sp)
 400733c:	07000044 	movi	fp,1
 4007340:	dcc016c4 	addi	r19,sp,91
 4007344:	402f883a 	mov	r23,r8
 4007348:	4700010e 	bge	r8,fp,4007350 <___vfiprintf_internal_r+0x7a4>
 400734c:	e02f883a 	mov	r23,fp
 4007350:	73803fcc 	andi	r14,r14,255
 4007354:	7380201c 	xori	r14,r14,128
 4007358:	73bfe004 	addi	r14,r14,-128
 400735c:	703ecc26 	beq	r14,zero,4006e90 <___vfiprintf_internal_r+0x2e4>
 4007360:	bdc00044 	addi	r23,r23,1
 4007364:	003eca06 	br	4006e90 <___vfiprintf_internal_r+0x2e4>
 4007368:	a0800007 	ldb	r2,0(r20)
 400736c:	6b401014 	ori	r13,r13,64
 4007370:	003e4f06 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 4007374:	29403fcc 	andi	r5,r5,255
 4007378:	2802b01e 	bne	r5,zero,4007e3c <___vfiprintf_internal_r+0x1290>
 400737c:	d9000417 	ldw	r4,16(sp)
 4007380:	6880080c 	andi	r2,r13,32
 4007384:	20c00017 	ldw	r3,0(r4)
 4007388:	21000104 	addi	r4,r4,4
 400738c:	1002231e 	bne	r2,zero,4007c1c <___vfiprintf_internal_r+0x1070>
 4007390:	6880040c 	andi	r2,r13,16
 4007394:	1002511e 	bne	r2,zero,4007cdc <___vfiprintf_internal_r+0x1130>
 4007398:	6b40100c 	andi	r13,r13,64
 400739c:	68024f26 	beq	r13,zero,4007cdc <___vfiprintf_internal_r+0x1130>
 40073a0:	d8800117 	ldw	r2,4(sp)
 40073a4:	d9000415 	stw	r4,16(sp)
 40073a8:	1880000d 	sth	r2,0(r3)
 40073ac:	003e2806 	br	4006c50 <___vfiprintf_internal_r+0xa4>
 40073b0:	a0800007 	ldb	r2,0(r20)
 40073b4:	10c01b18 	cmpnei	r3,r2,108
 40073b8:	18025826 	beq	r3,zero,4007d1c <___vfiprintf_internal_r+0x1170>
 40073bc:	6b400414 	ori	r13,r13,16
 40073c0:	003e3b06 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 40073c4:	d8c00417 	ldw	r3,16(sp)
 40073c8:	d8000945 	stb	zero,37(sp)
 40073cc:	05c00044 	movi	r23,1
 40073d0:	18800017 	ldw	r2,0(r3)
 40073d4:	18c00104 	addi	r3,r3,4
 40073d8:	d8c00415 	stw	r3,16(sp)
 40073dc:	d8800d05 	stb	r2,52(sp)
 40073e0:	07000044 	movi	fp,1
 40073e4:	dcc00d04 	addi	r19,sp,52
 40073e8:	003ea706 	br	4006e88 <___vfiprintf_internal_r+0x2dc>
 40073ec:	29403fcc 	andi	r5,r5,255
 40073f0:	2802961e 	bne	r5,zero,4007e4c <___vfiprintf_internal_r+0x12a0>
 40073f4:	00c10074 	movhi	r3,1025
 40073f8:	18fdc404 	addi	r3,r3,-2288
 40073fc:	d8c00515 	stw	r3,20(sp)
 4007400:	68c0080c 	andi	r3,r13,32
 4007404:	18008126 	beq	r3,zero,400760c <___vfiprintf_internal_r+0xa60>
 4007408:	d8c00417 	ldw	r3,16(sp)
 400740c:	1dc00017 	ldw	r23,0(r3)
 4007410:	1f000117 	ldw	fp,4(r3)
 4007414:	18c00204 	addi	r3,r3,8
 4007418:	d8c00415 	stw	r3,16(sp)
 400741c:	68c0004c 	andi	r3,r13,1
 4007420:	18000226 	beq	r3,zero,400742c <___vfiprintf_internal_r+0x880>
 4007424:	bf06b03a 	or	r3,r23,fp
 4007428:	1801f11e 	bne	r3,zero,4007bf0 <___vfiprintf_internal_r+0x1044>
 400742c:	00800084 	movi	r2,2
 4007430:	003f2506 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 4007434:	29403fcc 	andi	r5,r5,255
 4007438:	28027e1e 	bne	r5,zero,4007e34 <___vfiprintf_internal_r+0x1288>
 400743c:	6b400414 	ori	r13,r13,16
 4007440:	6880080c 	andi	r2,r13,32
 4007444:	103fa31e 	bne	r2,zero,40072d4 <___vfiprintf_internal_r+0x728>
 4007448:	d9000417 	ldw	r4,16(sp)
 400744c:	6880040c 	andi	r2,r13,16
 4007450:	20c00104 	addi	r3,r4,4
 4007454:	1001f71e 	bne	r2,zero,4007c34 <___vfiprintf_internal_r+0x1088>
 4007458:	6880100c 	andi	r2,r13,64
 400745c:	10025026 	beq	r2,zero,4007da0 <___vfiprintf_internal_r+0x11f4>
 4007460:	d8800417 	ldw	r2,16(sp)
 4007464:	d8c00415 	stw	r3,16(sp)
 4007468:	15c0000f 	ldh	r23,0(r2)
 400746c:	b839d7fa 	srai	fp,r23,31
 4007470:	e005883a 	mov	r2,fp
 4007474:	103f9e0e 	bge	r2,zero,40072f0 <___vfiprintf_internal_r+0x744>
 4007478:	b804c03a 	cmpne	r2,r23,zero
 400747c:	0739c83a 	sub	fp,zero,fp
 4007480:	e0b9c83a 	sub	fp,fp,r2
 4007484:	00800b44 	movi	r2,45
 4007488:	d8800945 	stb	r2,37(sp)
 400748c:	40ffffe0 	cmpeqi	r3,r8,-1
 4007490:	05efc83a 	sub	r23,zero,r23
 4007494:	03800b44 	movi	r14,45
 4007498:	00800044 	movi	r2,1
 400749c:	183f0e26 	beq	r3,zero,40070d8 <___vfiprintf_internal_r+0x52c>
 40074a0:	10c00060 	cmpeqi	r3,r2,1
 40074a4:	183f9f1e 	bne	r3,zero,4007324 <___vfiprintf_internal_r+0x778>
 40074a8:	108000a0 	cmpeqi	r2,r2,2
 40074ac:	9027883a 	mov	r19,r18
 40074b0:	1000a61e 	bne	r2,zero,400774c <___vfiprintf_internal_r+0xba0>
 40074b4:	e006977a 	slli	r3,fp,29
 40074b8:	b804d0fa 	srli	r2,r23,3
 40074bc:	e038d0fa 	srli	fp,fp,3
 40074c0:	b90001cc 	andi	r4,r23,7
 40074c4:	21000c04 	addi	r4,r4,48
 40074c8:	18aeb03a 	or	r23,r3,r2
 40074cc:	993fffc5 	stb	r4,-1(r19)
 40074d0:	bf04b03a 	or	r2,r23,fp
 40074d4:	980b883a 	mov	r5,r19
 40074d8:	9cffffc4 	addi	r19,r19,-1
 40074dc:	103ff51e 	bne	r2,zero,40074b4 <___vfiprintf_internal_r+0x908>
 40074e0:	6880004c 	andi	r2,r13,1
 40074e4:	1000a526 	beq	r2,zero,400777c <___vfiprintf_internal_r+0xbd0>
 40074e8:	21003fcc 	andi	r4,r4,255
 40074ec:	2100201c 	xori	r4,r4,128
 40074f0:	213fe004 	addi	r4,r4,-128
 40074f4:	20800c18 	cmpnei	r2,r4,48
 40074f8:	1000a026 	beq	r2,zero,400777c <___vfiprintf_internal_r+0xbd0>
 40074fc:	297fff84 	addi	r5,r5,-2
 4007500:	00800c04 	movi	r2,48
 4007504:	98bfffc5 	stb	r2,-1(r19)
 4007508:	9179c83a 	sub	fp,r18,r5
 400750c:	db400015 	stw	r13,0(sp)
 4007510:	2827883a 	mov	r19,r5
 4007514:	003f8b06 	br	4007344 <___vfiprintf_internal_r+0x798>
 4007518:	a0800007 	ldb	r2,0(r20)
 400751c:	6b402014 	ori	r13,r13,128
 4007520:	003de306 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 4007524:	a0800007 	ldb	r2,0(r20)
 4007528:	a1000044 	addi	r4,r20,1
 400752c:	10c00aa0 	cmpeqi	r3,r2,42
 4007530:	1802531e 	bne	r3,zero,4007e80 <___vfiprintf_internal_r+0x12d4>
 4007534:	10fff404 	addi	r3,r2,-48
 4007538:	19c002b0 	cmpltui	r7,r3,10
 400753c:	2029883a 	mov	r20,r4
 4007540:	0011883a 	mov	r8,zero
 4007544:	383ddb26 	beq	r7,zero,4006cb4 <___vfiprintf_internal_r+0x108>
 4007548:	a0800007 	ldb	r2,0(r20)
 400754c:	420002a4 	muli	r8,r8,10
 4007550:	a5000044 	addi	r20,r20,1
 4007554:	40d1883a 	add	r8,r8,r3
 4007558:	10fff404 	addi	r3,r2,-48
 400755c:	190002b0 	cmpltui	r4,r3,10
 4007560:	203ff91e 	bne	r4,zero,4007548 <___vfiprintf_internal_r+0x99c>
 4007564:	003dd306 	br	4006cb4 <___vfiprintf_internal_r+0x108>
 4007568:	a0800003 	ldbu	r2,0(r20)
 400756c:	10803fcc 	andi	r2,r2,255
 4007570:	1080201c 	xori	r2,r2,128
 4007574:	6b400114 	ori	r13,r13,4
 4007578:	10bfe004 	addi	r2,r2,-128
 400757c:	003dcc06 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 4007580:	a0800007 	ldb	r2,0(r20)
 4007584:	01400044 	movi	r5,1
 4007588:	01800ac4 	movi	r6,43
 400758c:	003dc806 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 4007590:	d8c00417 	ldw	r3,16(sp)
 4007594:	a0800003 	ldbu	r2,0(r20)
 4007598:	1c400017 	ldw	r17,0(r3)
 400759c:	18c00104 	addi	r3,r3,4
 40075a0:	8801b916 	blt	r17,zero,4007c88 <___vfiprintf_internal_r+0x10dc>
 40075a4:	d8c00415 	stw	r3,16(sp)
 40075a8:	10803fcc 	andi	r2,r2,255
 40075ac:	1080201c 	xori	r2,r2,128
 40075b0:	10bfe004 	addi	r2,r2,-128
 40075b4:	003dbe06 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 40075b8:	a0800007 	ldb	r2,0(r20)
 40075bc:	6b400054 	ori	r13,r13,1
 40075c0:	003dbb06 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 40075c4:	30c03fcc 	andi	r3,r6,255
 40075c8:	18c0201c 	xori	r3,r3,128
 40075cc:	18ffe004 	addi	r3,r3,-128
 40075d0:	a0800003 	ldbu	r2,0(r20)
 40075d4:	183ff41e 	bne	r3,zero,40075a8 <___vfiprintf_internal_r+0x9fc>
 40075d8:	10803fcc 	andi	r2,r2,255
 40075dc:	1080201c 	xori	r2,r2,128
 40075e0:	01400044 	movi	r5,1
 40075e4:	01800804 	movi	r6,32
 40075e8:	10bfe004 	addi	r2,r2,-128
 40075ec:	003db006 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 40075f0:	29403fcc 	andi	r5,r5,255
 40075f4:	28020a1e 	bne	r5,zero,4007e20 <___vfiprintf_internal_r+0x1274>
 40075f8:	00c10074 	movhi	r3,1025
 40075fc:	18fdc904 	addi	r3,r3,-2268
 4007600:	d8c00515 	stw	r3,20(sp)
 4007604:	68c0080c 	andi	r3,r13,32
 4007608:	183f7f1e 	bne	r3,zero,4007408 <___vfiprintf_internal_r+0x85c>
 400760c:	d9400417 	ldw	r5,16(sp)
 4007610:	68c0040c 	andi	r3,r13,16
 4007614:	29000104 	addi	r4,r5,4
 4007618:	18018b1e 	bne	r3,zero,4007c48 <___vfiprintf_internal_r+0x109c>
 400761c:	68c0100c 	andi	r3,r13,64
 4007620:	1801da26 	beq	r3,zero,4007d8c <___vfiprintf_internal_r+0x11e0>
 4007624:	d8c00417 	ldw	r3,16(sp)
 4007628:	0039883a 	mov	fp,zero
 400762c:	d9000415 	stw	r4,16(sp)
 4007630:	1dc0000b 	ldhu	r23,0(r3)
 4007634:	003f7906 	br	400741c <___vfiprintf_internal_r+0x870>
 4007638:	d8800417 	ldw	r2,16(sp)
 400763c:	d8000945 	stb	zero,37(sp)
 4007640:	14c00017 	ldw	r19,0(r2)
 4007644:	10c00104 	addi	r3,r2,4
 4007648:	9801bb26 	beq	r19,zero,4007d38 <___vfiprintf_internal_r+0x118c>
 400764c:	40bfffe0 	cmpeqi	r2,r8,-1
 4007650:	1001901e 	bne	r2,zero,4007c94 <___vfiprintf_internal_r+0x10e8>
 4007654:	400d883a 	mov	r6,r8
 4007658:	000b883a 	mov	r5,zero
 400765c:	9809883a 	mov	r4,r19
 4007660:	d8c00315 	stw	r3,12(sp)
 4007664:	db400215 	stw	r13,8(sp)
 4007668:	da000015 	stw	r8,0(sp)
 400766c:	40055100 	call	4005510 <memchr>
 4007670:	da000017 	ldw	r8,0(sp)
 4007674:	db400217 	ldw	r13,8(sp)
 4007678:	d8c00317 	ldw	r3,12(sp)
 400767c:	1001e426 	beq	r2,zero,4007e10 <___vfiprintf_internal_r+0x1264>
 4007680:	14f9c83a 	sub	fp,r2,r19
 4007684:	e02f883a 	mov	r23,fp
 4007688:	d8c00415 	stw	r3,16(sp)
 400768c:	003dfe06 	br	4006e88 <___vfiprintf_internal_r+0x2dc>
 4007690:	a0800007 	ldb	r2,0(r20)
 4007694:	6b400814 	ori	r13,r13,32
 4007698:	003d8506 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 400769c:	d8c00417 	ldw	r3,16(sp)
 40076a0:	00800c04 	movi	r2,48
 40076a4:	d8800985 	stb	r2,38(sp)
 40076a8:	00801e04 	movi	r2,120
 40076ac:	01010074 	movhi	r4,1025
 40076b0:	d88009c5 	stb	r2,39(sp)
 40076b4:	18800104 	addi	r2,r3,4
 40076b8:	d8800415 	stw	r2,16(sp)
 40076bc:	20bdc904 	addi	r2,r4,-2268
 40076c0:	d8800515 	stw	r2,20(sp)
 40076c4:	1dc00017 	ldw	r23,0(r3)
 40076c8:	0039883a 	mov	fp,zero
 40076cc:	6b400094 	ori	r13,r13,2
 40076d0:	00800084 	movi	r2,2
 40076d4:	003e7c06 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 40076d8:	9027883a 	mov	r19,r18
 40076dc:	b809883a 	mov	r4,r23
 40076e0:	e00b883a 	mov	r5,fp
 40076e4:	01800284 	movi	r6,10
 40076e8:	000f883a 	mov	r7,zero
 40076ec:	db800315 	stw	r14,12(sp)
 40076f0:	da000215 	stw	r8,8(sp)
 40076f4:	db400015 	stw	r13,0(sp)
 40076f8:	4009e940 	call	4009e94 <__umoddi3>
 40076fc:	10800c04 	addi	r2,r2,48
 4007700:	b809883a 	mov	r4,r23
 4007704:	e00b883a 	mov	r5,fp
 4007708:	98bfffc5 	stb	r2,-1(r19)
 400770c:	01800284 	movi	r6,10
 4007710:	000f883a 	mov	r7,zero
 4007714:	40099040 	call	4009904 <__udivdi3>
 4007718:	e009883a 	mov	r4,fp
 400771c:	b80b883a 	mov	r5,r23
 4007720:	db400017 	ldw	r13,0(sp)
 4007724:	da000217 	ldw	r8,8(sp)
 4007728:	db800317 	ldw	r14,12(sp)
 400772c:	9cffffc4 	addi	r19,r19,-1
 4007730:	102f883a 	mov	r23,r2
 4007734:	1839883a 	mov	fp,r3
 4007738:	203fe81e 	bne	r4,zero,40076dc <___vfiprintf_internal_r+0xb30>
 400773c:	294002a8 	cmpgeui	r5,r5,10
 4007740:	283fe61e 	bne	r5,zero,40076dc <___vfiprintf_internal_r+0xb30>
 4007744:	94f9c83a 	sub	fp,r18,r19
 4007748:	003efe06 	br	4007344 <___vfiprintf_internal_r+0x798>
 400774c:	d9000517 	ldw	r4,20(sp)
 4007750:	b88003cc 	andi	r2,r23,15
 4007754:	e006973a 	slli	r3,fp,28
 4007758:	b82ed13a 	srli	r23,r23,4
 400775c:	2085883a 	add	r2,r4,r2
 4007760:	10800003 	ldbu	r2,0(r2)
 4007764:	e038d13a 	srli	fp,fp,4
 4007768:	1deeb03a 	or	r23,r3,r23
 400776c:	98bfffc5 	stb	r2,-1(r19)
 4007770:	bf04b03a 	or	r2,r23,fp
 4007774:	9cffffc4 	addi	r19,r19,-1
 4007778:	103ff41e 	bne	r2,zero,400774c <___vfiprintf_internal_r+0xba0>
 400777c:	94f9c83a 	sub	fp,r18,r19
 4007780:	db400015 	stw	r13,0(sp)
 4007784:	003eef06 	br	4007344 <___vfiprintf_internal_r+0x798>
 4007788:	01400044 	movi	r5,1
 400778c:	0009883a 	mov	r4,zero
 4007790:	900d883a 	mov	r6,r18
 4007794:	003ea006 	br	4007218 <___vfiprintf_internal_r+0x66c>
 4007798:	8dc7c83a 	sub	r3,r17,r23
 400779c:	00fdf40e 	bge	zero,r3,4006f70 <___vfiprintf_internal_r+0x3c4>
 40077a0:	19c00450 	cmplti	r7,r3,17
 40077a4:	3801ae1e 	bne	r7,zero,4007e60 <___vfiprintf_internal_r+0x12b4>
 40077a8:	01c10074 	movhi	r7,1025
 40077ac:	39fe4904 	addi	r7,r7,-1756
 40077b0:	03400404 	movi	r13,16
 40077b4:	00000606 	br	40077d0 <___vfiprintf_internal_r+0xc24>
 40077b8:	23800084 	addi	r14,r4,2
 40077bc:	84000204 	addi	r16,r16,8
 40077c0:	2809883a 	mov	r4,r5
 40077c4:	18fffc04 	addi	r3,r3,-16
 40077c8:	19400448 	cmpgei	r5,r3,17
 40077cc:	28001c26 	beq	r5,zero,4007840 <___vfiprintf_internal_r+0xc94>
 40077d0:	21400044 	addi	r5,r4,1
 40077d4:	10800404 	addi	r2,r2,16
 40077d8:	81c00015 	stw	r7,0(r16)
 40077dc:	83400115 	stw	r13,4(r16)
 40077e0:	d8800c15 	stw	r2,48(sp)
 40077e4:	d9400b15 	stw	r5,44(sp)
 40077e8:	29800208 	cmpgei	r6,r5,8
 40077ec:	303ff226 	beq	r6,zero,40077b8 <___vfiprintf_internal_r+0xc0c>
 40077f0:	d9800a04 	addi	r6,sp,40
 40077f4:	a80b883a 	mov	r5,r21
 40077f8:	b009883a 	mov	r4,r22
 40077fc:	10006326 	beq	r2,zero,400798c <___vfiprintf_internal_r+0xde0>
 4007800:	d9c00615 	stw	r7,24(sp)
 4007804:	d8c00315 	stw	r3,12(sp)
 4007808:	da000215 	stw	r8,8(sp)
 400780c:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007810:	103df91e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 4007814:	d8c00317 	ldw	r3,12(sp)
 4007818:	d9000b17 	ldw	r4,44(sp)
 400781c:	d8800c17 	ldw	r2,48(sp)
 4007820:	18fffc04 	addi	r3,r3,-16
 4007824:	19400448 	cmpgei	r5,r3,17
 4007828:	d9c00617 	ldw	r7,24(sp)
 400782c:	da000217 	ldw	r8,8(sp)
 4007830:	9021883a 	mov	r16,r18
 4007834:	23800044 	addi	r14,r4,1
 4007838:	03400404 	movi	r13,16
 400783c:	283fe41e 	bne	r5,zero,40077d0 <___vfiprintf_internal_r+0xc24>
 4007840:	83400204 	addi	r13,r16,8
 4007844:	10c5883a 	add	r2,r2,r3
 4007848:	80c00115 	stw	r3,4(r16)
 400784c:	81c00015 	stw	r7,0(r16)
 4007850:	d8800c15 	stw	r2,48(sp)
 4007854:	db800b15 	stw	r14,44(sp)
 4007858:	70c00208 	cmpgei	r3,r14,8
 400785c:	1800df26 	beq	r3,zero,4007bdc <___vfiprintf_internal_r+0x1030>
 4007860:	10015826 	beq	r2,zero,4007dc4 <___vfiprintf_internal_r+0x1218>
 4007864:	d9800a04 	addi	r6,sp,40
 4007868:	a80b883a 	mov	r5,r21
 400786c:	b009883a 	mov	r4,r22
 4007870:	da000215 	stw	r8,8(sp)
 4007874:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007878:	103ddf1e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 400787c:	da000217 	ldw	r8,8(sp)
 4007880:	d9000b17 	ldw	r4,44(sp)
 4007884:	d8800c17 	ldw	r2,48(sp)
 4007888:	4711c83a 	sub	r8,r8,fp
 400788c:	d9801904 	addi	r6,sp,100
 4007890:	21400044 	addi	r5,r4,1
 4007894:	9021883a 	mov	r16,r18
 4007898:	023db70e 	bge	zero,r8,4006f78 <___vfiprintf_internal_r+0x3cc>
 400789c:	40c00450 	cmplti	r3,r8,17
 40078a0:	01c10074 	movhi	r7,1025
 40078a4:	1801441e 	bne	r3,zero,4007db8 <___vfiprintf_internal_r+0x120c>
 40078a8:	39fe4904 	addi	r7,r7,-1756
 40078ac:	03400404 	movi	r13,16
 40078b0:	00000606 	br	40078cc <___vfiprintf_internal_r+0xd20>
 40078b4:	21400084 	addi	r5,r4,2
 40078b8:	84000204 	addi	r16,r16,8
 40078bc:	1809883a 	mov	r4,r3
 40078c0:	423ffc04 	addi	r8,r8,-16
 40078c4:	40c00448 	cmpgei	r3,r8,17
 40078c8:	18001a26 	beq	r3,zero,4007934 <___vfiprintf_internal_r+0xd88>
 40078cc:	20c00044 	addi	r3,r4,1
 40078d0:	10800404 	addi	r2,r2,16
 40078d4:	81c00015 	stw	r7,0(r16)
 40078d8:	83400115 	stw	r13,4(r16)
 40078dc:	d8800c15 	stw	r2,48(sp)
 40078e0:	d8c00b15 	stw	r3,44(sp)
 40078e4:	19400208 	cmpgei	r5,r3,8
 40078e8:	283ff226 	beq	r5,zero,40078b4 <___vfiprintf_internal_r+0xd08>
 40078ec:	d9800a04 	addi	r6,sp,40
 40078f0:	a80b883a 	mov	r5,r21
 40078f4:	b009883a 	mov	r4,r22
 40078f8:	10001a26 	beq	r2,zero,4007964 <___vfiprintf_internal_r+0xdb8>
 40078fc:	d9c00315 	stw	r7,12(sp)
 4007900:	da000215 	stw	r8,8(sp)
 4007904:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007908:	103dbb1e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 400790c:	da000217 	ldw	r8,8(sp)
 4007910:	d9000b17 	ldw	r4,44(sp)
 4007914:	d8800c17 	ldw	r2,48(sp)
 4007918:	423ffc04 	addi	r8,r8,-16
 400791c:	40c00448 	cmpgei	r3,r8,17
 4007920:	d9c00317 	ldw	r7,12(sp)
 4007924:	9021883a 	mov	r16,r18
 4007928:	21400044 	addi	r5,r4,1
 400792c:	03400404 	movi	r13,16
 4007930:	183fe61e 	bne	r3,zero,40078cc <___vfiprintf_internal_r+0xd20>
 4007934:	81000204 	addi	r4,r16,8
 4007938:	1205883a 	add	r2,r2,r8
 400793c:	81c00015 	stw	r7,0(r16)
 4007940:	82000115 	stw	r8,4(r16)
 4007944:	d8800c15 	stw	r2,48(sp)
 4007948:	d9400b15 	stw	r5,44(sp)
 400794c:	28c00208 	cmpgei	r3,r5,8
 4007950:	1800721e 	bne	r3,zero,4007b1c <___vfiprintf_internal_r+0xf70>
 4007954:	29400044 	addi	r5,r5,1
 4007958:	21800204 	addi	r6,r4,8
 400795c:	2021883a 	mov	r16,r4
 4007960:	003d8506 	br	4006f78 <___vfiprintf_internal_r+0x3cc>
 4007964:	01400044 	movi	r5,1
 4007968:	0009883a 	mov	r4,zero
 400796c:	9021883a 	mov	r16,r18
 4007970:	003fd306 	br	40078c0 <___vfiprintf_internal_r+0xd14>
 4007974:	d9800a04 	addi	r6,sp,40
 4007978:	a80b883a 	mov	r5,r21
 400797c:	b009883a 	mov	r4,r22
 4007980:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007984:	103d9626 	beq	r2,zero,4006fe0 <___vfiprintf_internal_r+0x434>
 4007988:	003d9b06 	br	4006ff8 <___vfiprintf_internal_r+0x44c>
 400798c:	03800044 	movi	r14,1
 4007990:	0009883a 	mov	r4,zero
 4007994:	9021883a 	mov	r16,r18
 4007998:	003f8a06 	br	40077c4 <___vfiprintf_internal_r+0xc18>
 400799c:	10006e26 	beq	r2,zero,4007b58 <___vfiprintf_internal_r+0xfac>
 40079a0:	d9800a04 	addi	r6,sp,40
 40079a4:	a80b883a 	mov	r5,r21
 40079a8:	b009883a 	mov	r4,r22
 40079ac:	da000615 	stw	r8,24(sp)
 40079b0:	db400315 	stw	r13,12(sp)
 40079b4:	db800215 	stw	r14,8(sp)
 40079b8:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 40079bc:	103d8e1e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 40079c0:	d9000b17 	ldw	r4,44(sp)
 40079c4:	d8800c17 	ldw	r2,48(sp)
 40079c8:	da000617 	ldw	r8,24(sp)
 40079cc:	db400317 	ldw	r13,12(sp)
 40079d0:	db800217 	ldw	r14,8(sp)
 40079d4:	d9801904 	addi	r6,sp,100
 40079d8:	21400044 	addi	r5,r4,1
 40079dc:	9021883a 	mov	r16,r18
 40079e0:	003d4806 	br	4006f04 <___vfiprintf_internal_r+0x358>
 40079e4:	d8800984 	addi	r2,sp,38
 40079e8:	d8801715 	stw	r2,92(sp)
 40079ec:	00800084 	movi	r2,2
 40079f0:	d8801815 	stw	r2,96(sp)
 40079f4:	d9801904 	addi	r6,sp,100
 40079f8:	01400044 	movi	r5,1
 40079fc:	3021883a 	mov	r16,r6
 4007a00:	2809883a 	mov	r4,r5
 4007a04:	21400044 	addi	r5,r4,1
 4007a08:	81800204 	addi	r6,r16,8
 4007a0c:	003d5606 	br	4006f68 <___vfiprintf_internal_r+0x3bc>
 4007a10:	db400017 	ldw	r13,0(sp)
 4007a14:	003ea206 	br	40074a0 <___vfiprintf_internal_r+0x8f4>
 4007a18:	19400450 	cmplti	r5,r3,17
 4007a1c:	01c10074 	movhi	r7,1025
 4007a20:	2801011e 	bne	r5,zero,4007e28 <___vfiprintf_internal_r+0x127c>
 4007a24:	39fe4d04 	addi	r7,r7,-1740
 4007a28:	03c00404 	movi	r15,16
 4007a2c:	00000706 	br	4007a4c <___vfiprintf_internal_r+0xea0>
 4007a30:	27c00084 	addi	ra,r4,2
 4007a34:	84000204 	addi	r16,r16,8
 4007a38:	3009883a 	mov	r4,r6
 4007a3c:	18fffc04 	addi	r3,r3,-16
 4007a40:	19400448 	cmpgei	r5,r3,17
 4007a44:	28002026 	beq	r5,zero,4007ac8 <___vfiprintf_internal_r+0xf1c>
 4007a48:	21800044 	addi	r6,r4,1
 4007a4c:	10800404 	addi	r2,r2,16
 4007a50:	81c00015 	stw	r7,0(r16)
 4007a54:	83c00115 	stw	r15,4(r16)
 4007a58:	d8800c15 	stw	r2,48(sp)
 4007a5c:	d9800b15 	stw	r6,44(sp)
 4007a60:	31400208 	cmpgei	r5,r6,8
 4007a64:	283ff226 	beq	r5,zero,4007a30 <___vfiprintf_internal_r+0xe84>
 4007a68:	d9800a04 	addi	r6,sp,40
 4007a6c:	a80b883a 	mov	r5,r21
 4007a70:	b009883a 	mov	r4,r22
 4007a74:	10001f26 	beq	r2,zero,4007af4 <___vfiprintf_internal_r+0xf48>
 4007a78:	d9c00815 	stw	r7,32(sp)
 4007a7c:	d8c00715 	stw	r3,28(sp)
 4007a80:	da000615 	stw	r8,24(sp)
 4007a84:	db400315 	stw	r13,12(sp)
 4007a88:	db800215 	stw	r14,8(sp)
 4007a8c:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007a90:	103d591e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 4007a94:	d8c00717 	ldw	r3,28(sp)
 4007a98:	d9000b17 	ldw	r4,44(sp)
 4007a9c:	d8800c17 	ldw	r2,48(sp)
 4007aa0:	18fffc04 	addi	r3,r3,-16
 4007aa4:	19400448 	cmpgei	r5,r3,17
 4007aa8:	d9c00817 	ldw	r7,32(sp)
 4007aac:	da000617 	ldw	r8,24(sp)
 4007ab0:	db400317 	ldw	r13,12(sp)
 4007ab4:	db800217 	ldw	r14,8(sp)
 4007ab8:	9021883a 	mov	r16,r18
 4007abc:	27c00044 	addi	ra,r4,1
 4007ac0:	03c00404 	movi	r15,16
 4007ac4:	283fe01e 	bne	r5,zero,4007a48 <___vfiprintf_internal_r+0xe9c>
 4007ac8:	10c5883a 	add	r2,r2,r3
 4007acc:	80c00115 	stw	r3,4(r16)
 4007ad0:	81c00015 	stw	r7,0(r16)
 4007ad4:	d8800c15 	stw	r2,48(sp)
 4007ad8:	dfc00b15 	stw	ra,44(sp)
 4007adc:	f8c00208 	cmpgei	r3,ra,8
 4007ae0:	18002b1e 	bne	r3,zero,4007b90 <___vfiprintf_internal_r+0xfe4>
 4007ae4:	84000204 	addi	r16,r16,8
 4007ae8:	f9400044 	addi	r5,ra,1
 4007aec:	f809883a 	mov	r4,ra
 4007af0:	003cf406 	br	4006ec4 <___vfiprintf_internal_r+0x318>
 4007af4:	0009883a 	mov	r4,zero
 4007af8:	07c00044 	movi	ra,1
 4007afc:	9021883a 	mov	r16,r18
 4007b00:	003fce06 	br	4007a3c <___vfiprintf_internal_r+0xe90>
 4007b04:	8dc0010e 	bge	r17,r23,4007b0c <___vfiprintf_internal_r+0xf60>
 4007b08:	b823883a 	mov	r17,r23
 4007b0c:	d8800117 	ldw	r2,4(sp)
 4007b10:	1445883a 	add	r2,r2,r17
 4007b14:	d8800115 	stw	r2,4(sp)
 4007b18:	003d3106 	br	4006fe0 <___vfiprintf_internal_r+0x434>
 4007b1c:	10007326 	beq	r2,zero,4007cec <___vfiprintf_internal_r+0x1140>
 4007b20:	d9800a04 	addi	r6,sp,40
 4007b24:	a80b883a 	mov	r5,r21
 4007b28:	b009883a 	mov	r4,r22
 4007b2c:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007b30:	103d311e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 4007b34:	d9400b17 	ldw	r5,44(sp)
 4007b38:	d8800c17 	ldw	r2,48(sp)
 4007b3c:	d9801904 	addi	r6,sp,100
 4007b40:	29400044 	addi	r5,r5,1
 4007b44:	9021883a 	mov	r16,r18
 4007b48:	003d0b06 	br	4006f78 <___vfiprintf_internal_r+0x3cc>
 4007b4c:	d8000b15 	stw	zero,44(sp)
 4007b50:	9021883a 	mov	r16,r18
 4007b54:	003d7a06 	br	4007140 <___vfiprintf_internal_r+0x594>
 4007b58:	7000441e 	bne	r14,zero,4007c6c <___vfiprintf_internal_r+0x10c0>
 4007b5c:	0009883a 	mov	r4,zero
 4007b60:	d9801904 	addi	r6,sp,100
 4007b64:	01400044 	movi	r5,1
 4007b68:	9021883a 	mov	r16,r18
 4007b6c:	003cfe06 	br	4006f68 <___vfiprintf_internal_r+0x3bc>
 4007b70:	d9801904 	addi	r6,sp,100
 4007b74:	01400044 	movi	r5,1
 4007b78:	0009883a 	mov	r4,zero
 4007b7c:	9021883a 	mov	r16,r18
 4007b80:	003cf906 	br	4006f68 <___vfiprintf_internal_r+0x3bc>
 4007b84:	0039883a 	mov	fp,zero
 4007b88:	9027883a 	mov	r19,r18
 4007b8c:	003ded06 	br	4007344 <___vfiprintf_internal_r+0x798>
 4007b90:	10004a26 	beq	r2,zero,4007cbc <___vfiprintf_internal_r+0x1110>
 4007b94:	d9800a04 	addi	r6,sp,40
 4007b98:	a80b883a 	mov	r5,r21
 4007b9c:	b009883a 	mov	r4,r22
 4007ba0:	da000615 	stw	r8,24(sp)
 4007ba4:	db400315 	stw	r13,12(sp)
 4007ba8:	db800215 	stw	r14,8(sp)
 4007bac:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007bb0:	103d111e 	bne	r2,zero,4006ff8 <___vfiprintf_internal_r+0x44c>
 4007bb4:	d9000b17 	ldw	r4,44(sp)
 4007bb8:	d8800c17 	ldw	r2,48(sp)
 4007bbc:	da000617 	ldw	r8,24(sp)
 4007bc0:	db400317 	ldw	r13,12(sp)
 4007bc4:	db800217 	ldw	r14,8(sp)
 4007bc8:	9021883a 	mov	r16,r18
 4007bcc:	21400044 	addi	r5,r4,1
 4007bd0:	003cbc06 	br	4006ec4 <___vfiprintf_internal_r+0x318>
 4007bd4:	9027883a 	mov	r19,r18
 4007bd8:	003dda06 	br	4007344 <___vfiprintf_internal_r+0x798>
 4007bdc:	71400044 	addi	r5,r14,1
 4007be0:	69800204 	addi	r6,r13,8
 4007be4:	7009883a 	mov	r4,r14
 4007be8:	6821883a 	mov	r16,r13
 4007bec:	003ce006 	br	4006f70 <___vfiprintf_internal_r+0x3c4>
 4007bf0:	00c00c04 	movi	r3,48
 4007bf4:	d88009c5 	stb	r2,39(sp)
 4007bf8:	d8c00985 	stb	r3,38(sp)
 4007bfc:	6b400094 	ori	r13,r13,2
 4007c00:	00800084 	movi	r2,2
 4007c04:	003d3006 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 4007c08:	25c00017 	ldw	r23,0(r4)
 4007c0c:	0039883a 	mov	fp,zero
 4007c10:	d8c00415 	stw	r3,16(sp)
 4007c14:	0005883a 	mov	r2,zero
 4007c18:	003d2b06 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 4007c1c:	d9400117 	ldw	r5,4(sp)
 4007c20:	d9000415 	stw	r4,16(sp)
 4007c24:	2805d7fa 	srai	r2,r5,31
 4007c28:	19400015 	stw	r5,0(r3)
 4007c2c:	18800115 	stw	r2,4(r3)
 4007c30:	003c0706 	br	4006c50 <___vfiprintf_internal_r+0xa4>
 4007c34:	25c00017 	ldw	r23,0(r4)
 4007c38:	d8c00415 	stw	r3,16(sp)
 4007c3c:	b839d7fa 	srai	fp,r23,31
 4007c40:	e005883a 	mov	r2,fp
 4007c44:	003da906 	br	40072ec <___vfiprintf_internal_r+0x740>
 4007c48:	2dc00017 	ldw	r23,0(r5)
 4007c4c:	0039883a 	mov	fp,zero
 4007c50:	d9000415 	stw	r4,16(sp)
 4007c54:	003df106 	br	400741c <___vfiprintf_internal_r+0x870>
 4007c58:	25c00017 	ldw	r23,0(r4)
 4007c5c:	0039883a 	mov	fp,zero
 4007c60:	d8c00415 	stw	r3,16(sp)
 4007c64:	00800044 	movi	r2,1
 4007c68:	003d1706 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 4007c6c:	d8800984 	addi	r2,sp,38
 4007c70:	d8801715 	stw	r2,92(sp)
 4007c74:	00800084 	movi	r2,2
 4007c78:	d8801815 	stw	r2,96(sp)
 4007c7c:	dc001904 	addi	r16,sp,100
 4007c80:	01000044 	movi	r4,1
 4007c84:	003f5f06 	br	4007a04 <___vfiprintf_internal_r+0xe58>
 4007c88:	0463c83a 	sub	r17,zero,r17
 4007c8c:	d8c00415 	stw	r3,16(sp)
 4007c90:	003e3606 	br	400756c <___vfiprintf_internal_r+0x9c0>
 4007c94:	9809883a 	mov	r4,r19
 4007c98:	d8c00215 	stw	r3,8(sp)
 4007c9c:	db400015 	stw	r13,0(sp)
 4007ca0:	4006a080 	call	4006a08 <strlen>
 4007ca4:	d8c00217 	ldw	r3,8(sp)
 4007ca8:	db400017 	ldw	r13,0(sp)
 4007cac:	1039883a 	mov	fp,r2
 4007cb0:	102f883a 	mov	r23,r2
 4007cb4:	d8c00415 	stw	r3,16(sp)
 4007cb8:	003c7306 	br	4006e88 <___vfiprintf_internal_r+0x2dc>
 4007cbc:	d8c00947 	ldb	r3,37(sp)
 4007cc0:	1800451e 	bne	r3,zero,4007dd8 <___vfiprintf_internal_r+0x122c>
 4007cc4:	703f471e 	bne	r14,zero,40079e4 <___vfiprintf_internal_r+0xe38>
 4007cc8:	0009883a 	mov	r4,zero
 4007ccc:	d9801904 	addi	r6,sp,100
 4007cd0:	01400044 	movi	r5,1
 4007cd4:	9021883a 	mov	r16,r18
 4007cd8:	003ca506 	br	4006f70 <___vfiprintf_internal_r+0x3c4>
 4007cdc:	d8800117 	ldw	r2,4(sp)
 4007ce0:	18800015 	stw	r2,0(r3)
 4007ce4:	d9000415 	stw	r4,16(sp)
 4007ce8:	003bd906 	br	4006c50 <___vfiprintf_internal_r+0xa4>
 4007cec:	00c00044 	movi	r3,1
 4007cf0:	e005883a 	mov	r2,fp
 4007cf4:	dcc01715 	stw	r19,92(sp)
 4007cf8:	df001815 	stw	fp,96(sp)
 4007cfc:	df000c15 	stw	fp,48(sp)
 4007d00:	d8c00b15 	stw	r3,44(sp)
 4007d04:	d9801904 	addi	r6,sp,100
 4007d08:	003caa06 	br	4006fb4 <___vfiprintf_internal_r+0x408>
 4007d0c:	10c00060 	cmpeqi	r3,r2,1
 4007d10:	db400017 	ldw	r13,0(sp)
 4007d14:	183de426 	beq	r3,zero,40074a8 <___vfiprintf_internal_r+0x8fc>
 4007d18:	003d8506 	br	4007330 <___vfiprintf_internal_r+0x784>
 4007d1c:	a0800043 	ldbu	r2,1(r20)
 4007d20:	6b400814 	ori	r13,r13,32
 4007d24:	a5000044 	addi	r20,r20,1
 4007d28:	10803fcc 	andi	r2,r2,255
 4007d2c:	1080201c 	xori	r2,r2,128
 4007d30:	10bfe004 	addi	r2,r2,-128
 4007d34:	003bde06 	br	4006cb0 <___vfiprintf_internal_r+0x104>
 4007d38:	408001f0 	cmpltui	r2,r8,7
 4007d3c:	4039883a 	mov	fp,r8
 4007d40:	1000011e 	bne	r2,zero,4007d48 <___vfiprintf_internal_r+0x119c>
 4007d44:	07000184 	movi	fp,6
 4007d48:	04c10074 	movhi	r19,1025
 4007d4c:	e02f883a 	mov	r23,fp
 4007d50:	d8c00415 	stw	r3,16(sp)
 4007d54:	9cfdce04 	addi	r19,r19,-2248
 4007d58:	003c4b06 	br	4006e88 <___vfiprintf_internal_r+0x2dc>
 4007d5c:	d8800417 	ldw	r2,16(sp)
 4007d60:	0039883a 	mov	fp,zero
 4007d64:	d8c00415 	stw	r3,16(sp)
 4007d68:	15c00017 	ldw	r23,0(r2)
 4007d6c:	0005883a 	mov	r2,zero
 4007d70:	003cd506 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 4007d74:	d8800417 	ldw	r2,16(sp)
 4007d78:	0039883a 	mov	fp,zero
 4007d7c:	d8c00415 	stw	r3,16(sp)
 4007d80:	15c00017 	ldw	r23,0(r2)
 4007d84:	00800044 	movi	r2,1
 4007d88:	003ccf06 	br	40070c8 <___vfiprintf_internal_r+0x51c>
 4007d8c:	d8c00417 	ldw	r3,16(sp)
 4007d90:	0039883a 	mov	fp,zero
 4007d94:	d9000415 	stw	r4,16(sp)
 4007d98:	1dc00017 	ldw	r23,0(r3)
 4007d9c:	003d9f06 	br	400741c <___vfiprintf_internal_r+0x870>
 4007da0:	d8800417 	ldw	r2,16(sp)
 4007da4:	d8c00415 	stw	r3,16(sp)
 4007da8:	15c00017 	ldw	r23,0(r2)
 4007dac:	b839d7fa 	srai	fp,r23,31
 4007db0:	e005883a 	mov	r2,fp
 4007db4:	003d4d06 	br	40072ec <___vfiprintf_internal_r+0x740>
 4007db8:	3009883a 	mov	r4,r6
 4007dbc:	39fe4904 	addi	r7,r7,-1756
 4007dc0:	003edd06 	br	4007938 <___vfiprintf_internal_r+0xd8c>
 4007dc4:	d9801904 	addi	r6,sp,100
 4007dc8:	01400044 	movi	r5,1
 4007dcc:	0009883a 	mov	r4,zero
 4007dd0:	9021883a 	mov	r16,r18
 4007dd4:	003c6606 	br	4006f70 <___vfiprintf_internal_r+0x3c4>
 4007dd8:	d8800944 	addi	r2,sp,37
 4007ddc:	d8801715 	stw	r2,92(sp)
 4007de0:	00800044 	movi	r2,1
 4007de4:	d8801815 	stw	r2,96(sp)
 4007de8:	d9801904 	addi	r6,sp,100
 4007dec:	01400044 	movi	r5,1
 4007df0:	003c4006 	br	4006ef4 <___vfiprintf_internal_r+0x348>
 4007df4:	d9800945 	stb	r6,37(sp)
 4007df8:	003c1d06 	br	4006e70 <___vfiprintf_internal_r+0x2c4>
 4007dfc:	d9800a04 	addi	r6,sp,40
 4007e00:	a80b883a 	mov	r5,r21
 4007e04:	b009883a 	mov	r4,r22
 4007e08:	4006aa00 	call	4006aa0 <__sprint_r.part.0>
 4007e0c:	003c7a06 	br	4006ff8 <___vfiprintf_internal_r+0x44c>
 4007e10:	402f883a 	mov	r23,r8
 4007e14:	d8c00415 	stw	r3,16(sp)
 4007e18:	4039883a 	mov	fp,r8
 4007e1c:	003c1a06 	br	4006e88 <___vfiprintf_internal_r+0x2dc>
 4007e20:	d9800945 	stb	r6,37(sp)
 4007e24:	003df406 	br	40075f8 <___vfiprintf_internal_r+0xa4c>
 4007e28:	303f883a 	mov	ra,r6
 4007e2c:	39fe4d04 	addi	r7,r7,-1740
 4007e30:	003f2506 	br	4007ac8 <___vfiprintf_internal_r+0xf1c>
 4007e34:	d9800945 	stb	r6,37(sp)
 4007e38:	003d8006 	br	400743c <___vfiprintf_internal_r+0x890>
 4007e3c:	d9800945 	stb	r6,37(sp)
 4007e40:	003d4e06 	br	400737c <___vfiprintf_internal_r+0x7d0>
 4007e44:	d9800945 	stb	r6,37(sp)
 4007e48:	003d2006 	br	40072cc <___vfiprintf_internal_r+0x720>
 4007e4c:	d9800945 	stb	r6,37(sp)
 4007e50:	003d6806 	br	40073f4 <___vfiprintf_internal_r+0x848>
 4007e54:	21400044 	addi	r5,r4,1
 4007e58:	39fe4d04 	addi	r7,r7,-1740
 4007e5c:	003d0806 	br	4007280 <___vfiprintf_internal_r+0x6d4>
 4007e60:	01c10074 	movhi	r7,1025
 4007e64:	301b883a 	mov	r13,r6
 4007e68:	281d883a 	mov	r14,r5
 4007e6c:	39fe4904 	addi	r7,r7,-1756
 4007e70:	003e7406 	br	4007844 <___vfiprintf_internal_r+0xc98>
 4007e74:	00bfffc4 	movi	r2,-1
 4007e78:	d8800115 	stw	r2,4(sp)
 4007e7c:	003c6106 	br	4007004 <___vfiprintf_internal_r+0x458>
 4007e80:	d8800417 	ldw	r2,16(sp)
 4007e84:	12000017 	ldw	r8,0(r2)
 4007e88:	10c00104 	addi	r3,r2,4
 4007e8c:	4000010e 	bge	r8,zero,4007e94 <___vfiprintf_internal_r+0x12e8>
 4007e90:	023fffc4 	movi	r8,-1
 4007e94:	a0800043 	ldbu	r2,1(r20)
 4007e98:	d8c00415 	stw	r3,16(sp)
 4007e9c:	2029883a 	mov	r20,r4
 4007ea0:	10803fcc 	andi	r2,r2,255
 4007ea4:	1080201c 	xori	r2,r2,128
 4007ea8:	10bfe004 	addi	r2,r2,-128
 4007eac:	003b8006 	br	4006cb0 <___vfiprintf_internal_r+0x104>

04007eb0 <__vfiprintf_internal>:
 4007eb0:	00c10074 	movhi	r3,1025
 4007eb4:	2005883a 	mov	r2,r4
 4007eb8:	19064817 	ldw	r4,6432(r3)
 4007ebc:	300f883a 	mov	r7,r6
 4007ec0:	280d883a 	mov	r6,r5
 4007ec4:	100b883a 	mov	r5,r2
 4007ec8:	4006bac1 	jmpi	4006bac <___vfiprintf_internal_r>

04007ecc <__sbprintf>:
 4007ecc:	2880030b 	ldhu	r2,12(r5)
 4007ed0:	2b001917 	ldw	r12,100(r5)
 4007ed4:	2ac0038b 	ldhu	r11,14(r5)
 4007ed8:	2a800717 	ldw	r10,28(r5)
 4007edc:	2a400917 	ldw	r9,36(r5)
 4007ee0:	defee204 	addi	sp,sp,-1144
 4007ee4:	da001a04 	addi	r8,sp,104
 4007ee8:	00c10004 	movi	r3,1024
 4007eec:	dc011a15 	stw	r16,1128(sp)
 4007ef0:	10bfff4c 	andi	r2,r2,65533
 4007ef4:	2821883a 	mov	r16,r5
 4007ef8:	d80b883a 	mov	r5,sp
 4007efc:	dc811c15 	stw	r18,1136(sp)
 4007f00:	dc411b15 	stw	r17,1132(sp)
 4007f04:	dfc11d15 	stw	ra,1140(sp)
 4007f08:	2025883a 	mov	r18,r4
 4007f0c:	d880030d 	sth	r2,12(sp)
 4007f10:	db001915 	stw	r12,100(sp)
 4007f14:	dac0038d 	sth	r11,14(sp)
 4007f18:	da800715 	stw	r10,28(sp)
 4007f1c:	da400915 	stw	r9,36(sp)
 4007f20:	da000015 	stw	r8,0(sp)
 4007f24:	da000415 	stw	r8,16(sp)
 4007f28:	d8c00215 	stw	r3,8(sp)
 4007f2c:	d8c00515 	stw	r3,20(sp)
 4007f30:	d8000615 	stw	zero,24(sp)
 4007f34:	4006bac0 	call	4006bac <___vfiprintf_internal_r>
 4007f38:	1023883a 	mov	r17,r2
 4007f3c:	10000d0e 	bge	r2,zero,4007f74 <__sbprintf+0xa8>
 4007f40:	d880030b 	ldhu	r2,12(sp)
 4007f44:	1080100c 	andi	r2,r2,64
 4007f48:	10000326 	beq	r2,zero,4007f58 <__sbprintf+0x8c>
 4007f4c:	8080030b 	ldhu	r2,12(r16)
 4007f50:	10801014 	ori	r2,r2,64
 4007f54:	8080030d 	sth	r2,12(r16)
 4007f58:	8805883a 	mov	r2,r17
 4007f5c:	dfc11d17 	ldw	ra,1140(sp)
 4007f60:	dc811c17 	ldw	r18,1136(sp)
 4007f64:	dc411b17 	ldw	r17,1132(sp)
 4007f68:	dc011a17 	ldw	r16,1128(sp)
 4007f6c:	dec11e04 	addi	sp,sp,1144
 4007f70:	f800283a 	ret
 4007f74:	d80b883a 	mov	r5,sp
 4007f78:	9009883a 	mov	r4,r18
 4007f7c:	40042140 	call	4004214 <_fflush_r>
 4007f80:	103fef26 	beq	r2,zero,4007f40 <__sbprintf+0x74>
 4007f84:	047fffc4 	movi	r17,-1
 4007f88:	003fed06 	br	4007f40 <__sbprintf+0x74>

04007f8c <_write_r>:
 4007f8c:	2807883a 	mov	r3,r5
 4007f90:	defffe04 	addi	sp,sp,-8
 4007f94:	dc000015 	stw	r16,0(sp)
 4007f98:	300b883a 	mov	r5,r6
 4007f9c:	00810074 	movhi	r2,1025
 4007fa0:	380d883a 	mov	r6,r7
 4007fa4:	2021883a 	mov	r16,r4
 4007fa8:	1809883a 	mov	r4,r3
 4007fac:	dfc00115 	stw	ra,4(sp)
 4007fb0:	100d5915 	stw	zero,13668(r2)
 4007fb4:	400d5d40 	call	400d5d4 <write>
 4007fb8:	10ffffd8 	cmpnei	r3,r2,-1
 4007fbc:	18000426 	beq	r3,zero,4007fd0 <_write_r+0x44>
 4007fc0:	dfc00117 	ldw	ra,4(sp)
 4007fc4:	dc000017 	ldw	r16,0(sp)
 4007fc8:	dec00204 	addi	sp,sp,8
 4007fcc:	f800283a 	ret
 4007fd0:	00c10074 	movhi	r3,1025
 4007fd4:	18cd5917 	ldw	r3,13668(r3)
 4007fd8:	183ff926 	beq	r3,zero,4007fc0 <_write_r+0x34>
 4007fdc:	80c00015 	stw	r3,0(r16)
 4007fe0:	dfc00117 	ldw	ra,4(sp)
 4007fe4:	dc000017 	ldw	r16,0(sp)
 4007fe8:	dec00204 	addi	sp,sp,8
 4007fec:	f800283a 	ret

04007ff0 <_close_r>:
 4007ff0:	defffe04 	addi	sp,sp,-8
 4007ff4:	dc000015 	stw	r16,0(sp)
 4007ff8:	00810074 	movhi	r2,1025
 4007ffc:	2021883a 	mov	r16,r4
 4008000:	2809883a 	mov	r4,r5
 4008004:	dfc00115 	stw	ra,4(sp)
 4008008:	100d5915 	stw	zero,13668(r2)
 400800c:	400cc080 	call	400cc08 <close>
 4008010:	10ffffd8 	cmpnei	r3,r2,-1
 4008014:	18000426 	beq	r3,zero,4008028 <_close_r+0x38>
 4008018:	dfc00117 	ldw	ra,4(sp)
 400801c:	dc000017 	ldw	r16,0(sp)
 4008020:	dec00204 	addi	sp,sp,8
 4008024:	f800283a 	ret
 4008028:	00c10074 	movhi	r3,1025
 400802c:	18cd5917 	ldw	r3,13668(r3)
 4008030:	183ff926 	beq	r3,zero,4008018 <_close_r+0x28>
 4008034:	80c00015 	stw	r3,0(r16)
 4008038:	dfc00117 	ldw	ra,4(sp)
 400803c:	dc000017 	ldw	r16,0(sp)
 4008040:	dec00204 	addi	sp,sp,8
 4008044:	f800283a 	ret

04008048 <__assert_func>:
 4008048:	00810074 	movhi	r2,1025
 400804c:	12064817 	ldw	r8,6432(r2)
 4008050:	defffc04 	addi	sp,sp,-16
 4008054:	3807883a 	mov	r3,r7
 4008058:	3005883a 	mov	r2,r6
 400805c:	dfc00315 	stw	ra,12(sp)
 4008060:	42400317 	ldw	r9,12(r8)
 4008064:	200f883a 	mov	r7,r4
 4008068:	2811883a 	mov	r8,r5
 400806c:	180d883a 	mov	r6,r3
 4008070:	10000a26 	beq	r2,zero,400809c <__assert_func+0x54>
 4008074:	00c10074 	movhi	r3,1025
 4008078:	18fe5104 	addi	r3,r3,-1724
 400807c:	01410074 	movhi	r5,1025
 4008080:	297e5504 	addi	r5,r5,-1708
 4008084:	4809883a 	mov	r4,r9
 4008088:	d8c00115 	stw	r3,4(sp)
 400808c:	da000015 	stw	r8,0(sp)
 4008090:	d8800215 	stw	r2,8(sp)
 4008094:	400829c0 	call	400829c <fiprintf>
 4008098:	40095d40 	call	40095d4 <abort>
 400809c:	00c10074 	movhi	r3,1025
 40080a0:	18fe5404 	addi	r3,r3,-1712
 40080a4:	1805883a 	mov	r2,r3
 40080a8:	003ff406 	br	400807c <__assert_func+0x34>

040080ac <__assert>:
 40080ac:	deffff04 	addi	sp,sp,-4
 40080b0:	300f883a 	mov	r7,r6
 40080b4:	000d883a 	mov	r6,zero
 40080b8:	dfc00015 	stw	ra,0(sp)
 40080bc:	40080480 	call	4008048 <__assert_func>

040080c0 <_calloc_r>:
 40080c0:	298b383a 	mul	r5,r5,r6
 40080c4:	deffff04 	addi	sp,sp,-4
 40080c8:	dfc00015 	stw	ra,0(sp)
 40080cc:	4004d300 	call	4004d30 <_malloc_r>
 40080d0:	1009883a 	mov	r4,r2
 40080d4:	10000c26 	beq	r2,zero,4008108 <_calloc_r+0x48>
 40080d8:	11bfff17 	ldw	r6,-4(r2)
 40080dc:	00bfff04 	movi	r2,-4
 40080e0:	308c703a 	and	r6,r6,r2
 40080e4:	31bfff04 	addi	r6,r6,-4
 40080e8:	30800968 	cmpgeui	r2,r6,37
 40080ec:	1000141e 	bne	r2,zero,4008140 <_calloc_r+0x80>
 40080f0:	30800530 	cmpltui	r2,r6,20
 40080f4:	10000826 	beq	r2,zero,4008118 <_calloc_r+0x58>
 40080f8:	2005883a 	mov	r2,r4
 40080fc:	10000015 	stw	zero,0(r2)
 4008100:	10000115 	stw	zero,4(r2)
 4008104:	10000215 	stw	zero,8(r2)
 4008108:	2005883a 	mov	r2,r4
 400810c:	dfc00017 	ldw	ra,0(sp)
 4008110:	dec00104 	addi	sp,sp,4
 4008114:	f800283a 	ret
 4008118:	20000015 	stw	zero,0(r4)
 400811c:	20000115 	stw	zero,4(r4)
 4008120:	30800728 	cmpgeui	r2,r6,28
 4008124:	10000d26 	beq	r2,zero,400815c <_calloc_r+0x9c>
 4008128:	20000215 	stw	zero,8(r4)
 400812c:	20000315 	stw	zero,12(r4)
 4008130:	31800920 	cmpeqi	r6,r6,36
 4008134:	30000b1e 	bne	r6,zero,4008164 <_calloc_r+0xa4>
 4008138:	20800404 	addi	r2,r4,16
 400813c:	003fef06 	br	40080fc <_calloc_r+0x3c>
 4008140:	000b883a 	mov	r5,zero
 4008144:	40056e40 	call	40056e4 <memset>
 4008148:	1009883a 	mov	r4,r2
 400814c:	2005883a 	mov	r2,r4
 4008150:	dfc00017 	ldw	ra,0(sp)
 4008154:	dec00104 	addi	sp,sp,4
 4008158:	f800283a 	ret
 400815c:	20800204 	addi	r2,r4,8
 4008160:	003fe606 	br	40080fc <_calloc_r+0x3c>
 4008164:	20000415 	stw	zero,16(r4)
 4008168:	20800604 	addi	r2,r4,24
 400816c:	20000515 	stw	zero,20(r4)
 4008170:	003fe206 	br	40080fc <_calloc_r+0x3c>

04008174 <_fclose_r>:
 4008174:	defffc04 	addi	sp,sp,-16
 4008178:	dfc00315 	stw	ra,12(sp)
 400817c:	dc800215 	stw	r18,8(sp)
 4008180:	dc400115 	stw	r17,4(sp)
 4008184:	dc000015 	stw	r16,0(sp)
 4008188:	28000726 	beq	r5,zero,40081a8 <_fclose_r+0x34>
 400818c:	2821883a 	mov	r16,r5
 4008190:	2023883a 	mov	r17,r4
 4008194:	20000226 	beq	r4,zero,40081a0 <_fclose_r+0x2c>
 4008198:	20800e17 	ldw	r2,56(r4)
 400819c:	10002726 	beq	r2,zero,400823c <_fclose_r+0xc8>
 40081a0:	8080030f 	ldh	r2,12(r16)
 40081a4:	1000081e 	bne	r2,zero,40081c8 <_fclose_r+0x54>
 40081a8:	0025883a 	mov	r18,zero
 40081ac:	9005883a 	mov	r2,r18
 40081b0:	dfc00317 	ldw	ra,12(sp)
 40081b4:	dc800217 	ldw	r18,8(sp)
 40081b8:	dc400117 	ldw	r17,4(sp)
 40081bc:	dc000017 	ldw	r16,0(sp)
 40081c0:	dec00404 	addi	sp,sp,16
 40081c4:	f800283a 	ret
 40081c8:	800b883a 	mov	r5,r16
 40081cc:	8809883a 	mov	r4,r17
 40081d0:	4003fec0 	call	4003fec <__sflush_r>
 40081d4:	80c00b17 	ldw	r3,44(r16)
 40081d8:	1025883a 	mov	r18,r2
 40081dc:	18000426 	beq	r3,zero,40081f0 <_fclose_r+0x7c>
 40081e0:	81400717 	ldw	r5,28(r16)
 40081e4:	8809883a 	mov	r4,r17
 40081e8:	183ee83a 	callr	r3
 40081ec:	10001716 	blt	r2,zero,400824c <_fclose_r+0xd8>
 40081f0:	8080030b 	ldhu	r2,12(r16)
 40081f4:	1080200c 	andi	r2,r2,128
 40081f8:	1000181e 	bne	r2,zero,400825c <_fclose_r+0xe8>
 40081fc:	81400c17 	ldw	r5,48(r16)
 4008200:	28000526 	beq	r5,zero,4008218 <_fclose_r+0xa4>
 4008204:	80801004 	addi	r2,r16,64
 4008208:	28800226 	beq	r5,r2,4008214 <_fclose_r+0xa0>
 400820c:	8809883a 	mov	r4,r17
 4008210:	40046fc0 	call	40046fc <_free_r>
 4008214:	80000c15 	stw	zero,48(r16)
 4008218:	81401117 	ldw	r5,68(r16)
 400821c:	28000326 	beq	r5,zero,400822c <_fclose_r+0xb8>
 4008220:	8809883a 	mov	r4,r17
 4008224:	40046fc0 	call	40046fc <_free_r>
 4008228:	80001115 	stw	zero,68(r16)
 400822c:	40045a80 	call	40045a8 <__sfp_lock_acquire>
 4008230:	8000030d 	sth	zero,12(r16)
 4008234:	40045ac0 	call	40045ac <__sfp_lock_release>
 4008238:	003fdc06 	br	40081ac <_fclose_r+0x38>
 400823c:	40045980 	call	4004598 <__sinit>
 4008240:	8080030f 	ldh	r2,12(r16)
 4008244:	103fd826 	beq	r2,zero,40081a8 <_fclose_r+0x34>
 4008248:	003fdf06 	br	40081c8 <_fclose_r+0x54>
 400824c:	8080030b 	ldhu	r2,12(r16)
 4008250:	04bfffc4 	movi	r18,-1
 4008254:	1080200c 	andi	r2,r2,128
 4008258:	103fe826 	beq	r2,zero,40081fc <_fclose_r+0x88>
 400825c:	81400417 	ldw	r5,16(r16)
 4008260:	8809883a 	mov	r4,r17
 4008264:	40046fc0 	call	40046fc <_free_r>
 4008268:	003fe406 	br	40081fc <_fclose_r+0x88>

0400826c <fclose>:
 400826c:	00810074 	movhi	r2,1025
 4008270:	200b883a 	mov	r5,r4
 4008274:	11064817 	ldw	r4,6432(r2)
 4008278:	40081741 	jmpi	4008174 <_fclose_r>

0400827c <_fiprintf_r>:
 400827c:	defffe04 	addi	sp,sp,-8
 4008280:	dfc00015 	stw	ra,0(sp)
 4008284:	d9c00115 	stw	r7,4(sp)
 4008288:	d9c00104 	addi	r7,sp,4
 400828c:	40093400 	call	4009340 <_vfiprintf_r>
 4008290:	dfc00017 	ldw	ra,0(sp)
 4008294:	dec00204 	addi	sp,sp,8
 4008298:	f800283a 	ret

0400829c <fiprintf>:
 400829c:	defffd04 	addi	sp,sp,-12
 40082a0:	2005883a 	mov	r2,r4
 40082a4:	dfc00015 	stw	ra,0(sp)
 40082a8:	d9800115 	stw	r6,4(sp)
 40082ac:	d9c00215 	stw	r7,8(sp)
 40082b0:	00c10074 	movhi	r3,1025
 40082b4:	19064817 	ldw	r4,6432(r3)
 40082b8:	280d883a 	mov	r6,r5
 40082bc:	d9c00104 	addi	r7,sp,4
 40082c0:	100b883a 	mov	r5,r2
 40082c4:	40093400 	call	4009340 <_vfiprintf_r>
 40082c8:	dfc00017 	ldw	ra,0(sp)
 40082cc:	dec00304 	addi	sp,sp,12
 40082d0:	f800283a 	ret

040082d4 <__fputwc>:
 40082d4:	defff904 	addi	sp,sp,-28
 40082d8:	dcc00415 	stw	r19,16(sp)
 40082dc:	dc800315 	stw	r18,12(sp)
 40082e0:	dc000115 	stw	r16,4(sp)
 40082e4:	dfc00615 	stw	ra,24(sp)
 40082e8:	dd000515 	stw	r20,20(sp)
 40082ec:	dc400215 	stw	r17,8(sp)
 40082f0:	2025883a 	mov	r18,r4
 40082f4:	2827883a 	mov	r19,r5
 40082f8:	3021883a 	mov	r16,r6
 40082fc:	4008abc0 	call	4008abc <__locale_mb_cur_max>
 4008300:	10800058 	cmpnei	r2,r2,1
 4008304:	1000071e 	bne	r2,zero,4008324 <__fputwc+0x50>
 4008308:	98bfffc4 	addi	r2,r19,-1
 400830c:	10803fe8 	cmpgeui	r2,r2,255
 4008310:	1000041e 	bne	r2,zero,4008324 <__fputwc+0x50>
 4008314:	980b883a 	mov	r5,r19
 4008318:	dcc000c5 	stb	r19,3(sp)
 400831c:	05000044 	movi	r20,1
 4008320:	00000a06 	br	400834c <__fputwc+0x78>
 4008324:	81c01704 	addi	r7,r16,92
 4008328:	980d883a 	mov	r6,r19
 400832c:	d94000c4 	addi	r5,sp,3
 4008330:	9009883a 	mov	r4,r18
 4008334:	40094a40 	call	40094a4 <_wcrtomb_r>
 4008338:	1029883a 	mov	r20,r2
 400833c:	10bfffd8 	cmpnei	r2,r2,-1
 4008340:	10003926 	beq	r2,zero,4008428 <__fputwc+0x154>
 4008344:	a0001f26 	beq	r20,zero,40083c4 <__fputwc+0xf0>
 4008348:	d94000c3 	ldbu	r5,3(sp)
 400834c:	0023883a 	mov	r17,zero
 4008350:	00000a06 	br	400837c <__fputwc+0xa8>
 4008354:	80800017 	ldw	r2,0(r16)
 4008358:	11400005 	stb	r5,0(r2)
 400835c:	80c00017 	ldw	r3,0(r16)
 4008360:	18c00044 	addi	r3,r3,1
 4008364:	80c00015 	stw	r3,0(r16)
 4008368:	8c400044 	addi	r17,r17,1
 400836c:	d88000c4 	addi	r2,sp,3
 4008370:	1447883a 	add	r3,r2,r17
 4008374:	8d00132e 	bgeu	r17,r20,40083c4 <__fputwc+0xf0>
 4008378:	19400003 	ldbu	r5,0(r3)
 400837c:	80c00217 	ldw	r3,8(r16)
 4008380:	18ffffc4 	addi	r3,r3,-1
 4008384:	80c00215 	stw	r3,8(r16)
 4008388:	183ff20e 	bge	r3,zero,4008354 <__fputwc+0x80>
 400838c:	80800617 	ldw	r2,24(r16)
 4008390:	18801616 	blt	r3,r2,40083ec <__fputwc+0x118>
 4008394:	80800017 	ldw	r2,0(r16)
 4008398:	11400005 	stb	r5,0(r2)
 400839c:	80800017 	ldw	r2,0(r16)
 40083a0:	10c00003 	ldbu	r3,0(r2)
 40083a4:	10800044 	addi	r2,r2,1
 40083a8:	18c002a0 	cmpeqi	r3,r3,10
 40083ac:	1800181e 	bne	r3,zero,4008410 <__fputwc+0x13c>
 40083b0:	80800015 	stw	r2,0(r16)
 40083b4:	8c400044 	addi	r17,r17,1
 40083b8:	d88000c4 	addi	r2,sp,3
 40083bc:	1447883a 	add	r3,r2,r17
 40083c0:	8d3fed36 	bltu	r17,r20,4008378 <__fputwc+0xa4>
 40083c4:	9829883a 	mov	r20,r19
 40083c8:	a005883a 	mov	r2,r20
 40083cc:	dfc00617 	ldw	ra,24(sp)
 40083d0:	dd000517 	ldw	r20,20(sp)
 40083d4:	dcc00417 	ldw	r19,16(sp)
 40083d8:	dc800317 	ldw	r18,12(sp)
 40083dc:	dc400217 	ldw	r17,8(sp)
 40083e0:	dc000117 	ldw	r16,4(sp)
 40083e4:	dec00704 	addi	sp,sp,28
 40083e8:	f800283a 	ret
 40083ec:	29403fcc 	andi	r5,r5,255
 40083f0:	800d883a 	mov	r6,r16
 40083f4:	9009883a 	mov	r4,r18
 40083f8:	40093440 	call	4009344 <__swbuf_r>
 40083fc:	10ffffe0 	cmpeqi	r3,r2,-1
 4008400:	18c03fcc 	andi	r3,r3,255
 4008404:	183fd826 	beq	r3,zero,4008368 <__fputwc+0x94>
 4008408:	053fffc4 	movi	r20,-1
 400840c:	003fee06 	br	40083c8 <__fputwc+0xf4>
 4008410:	800d883a 	mov	r6,r16
 4008414:	01400284 	movi	r5,10
 4008418:	9009883a 	mov	r4,r18
 400841c:	40093440 	call	4009344 <__swbuf_r>
 4008420:	10ffffe0 	cmpeqi	r3,r2,-1
 4008424:	003ff606 	br	4008400 <__fputwc+0x12c>
 4008428:	8080030b 	ldhu	r2,12(r16)
 400842c:	10801014 	ori	r2,r2,64
 4008430:	8080030d 	sth	r2,12(r16)
 4008434:	003fe406 	br	40083c8 <__fputwc+0xf4>

04008438 <_fputwc_r>:
 4008438:	3080030b 	ldhu	r2,12(r6)
 400843c:	10c8000c 	andi	r3,r2,8192
 4008440:	1800051e 	bne	r3,zero,4008458 <_fputwc_r+0x20>
 4008444:	30c01917 	ldw	r3,100(r6)
 4008448:	10880014 	ori	r2,r2,8192
 400844c:	3080030d 	sth	r2,12(r6)
 4008450:	18880014 	ori	r2,r3,8192
 4008454:	30801915 	stw	r2,100(r6)
 4008458:	40082d41 	jmpi	40082d4 <__fputwc>

0400845c <fputwc>:
 400845c:	defffc04 	addi	sp,sp,-16
 4008460:	00810074 	movhi	r2,1025
 4008464:	dc000215 	stw	r16,8(sp)
 4008468:	14064817 	ldw	r16,6432(r2)
 400846c:	dfc00315 	stw	ra,12(sp)
 4008470:	280d883a 	mov	r6,r5
 4008474:	200b883a 	mov	r5,r4
 4008478:	80000226 	beq	r16,zero,4008484 <fputwc+0x28>
 400847c:	80800e17 	ldw	r2,56(r16)
 4008480:	10000d26 	beq	r2,zero,40084b8 <fputwc+0x5c>
 4008484:	3080030b 	ldhu	r2,12(r6)
 4008488:	10c8000c 	andi	r3,r2,8192
 400848c:	1800051e 	bne	r3,zero,40084a4 <fputwc+0x48>
 4008490:	30c01917 	ldw	r3,100(r6)
 4008494:	10880014 	ori	r2,r2,8192
 4008498:	3080030d 	sth	r2,12(r6)
 400849c:	18880014 	ori	r2,r3,8192
 40084a0:	30801915 	stw	r2,100(r6)
 40084a4:	8009883a 	mov	r4,r16
 40084a8:	dfc00317 	ldw	ra,12(sp)
 40084ac:	dc000217 	ldw	r16,8(sp)
 40084b0:	dec00404 	addi	sp,sp,16
 40084b4:	40082d41 	jmpi	40082d4 <__fputwc>
 40084b8:	d9000015 	stw	r4,0(sp)
 40084bc:	8009883a 	mov	r4,r16
 40084c0:	d9800115 	stw	r6,4(sp)
 40084c4:	40045980 	call	4004598 <__sinit>
 40084c8:	d9800117 	ldw	r6,4(sp)
 40084cc:	d9400017 	ldw	r5,0(sp)
 40084d0:	003fec06 	br	4008484 <fputwc+0x28>

040084d4 <_fstat_r>:
 40084d4:	2807883a 	mov	r3,r5
 40084d8:	defffe04 	addi	sp,sp,-8
 40084dc:	dc000015 	stw	r16,0(sp)
 40084e0:	00810074 	movhi	r2,1025
 40084e4:	300b883a 	mov	r5,r6
 40084e8:	2021883a 	mov	r16,r4
 40084ec:	1809883a 	mov	r4,r3
 40084f0:	dfc00115 	stw	ra,4(sp)
 40084f4:	100d5915 	stw	zero,13668(r2)
 40084f8:	400cd780 	call	400cd78 <fstat>
 40084fc:	10ffffd8 	cmpnei	r3,r2,-1
 4008500:	18000426 	beq	r3,zero,4008514 <_fstat_r+0x40>
 4008504:	dfc00117 	ldw	ra,4(sp)
 4008508:	dc000017 	ldw	r16,0(sp)
 400850c:	dec00204 	addi	sp,sp,8
 4008510:	f800283a 	ret
 4008514:	00c10074 	movhi	r3,1025
 4008518:	18cd5917 	ldw	r3,13668(r3)
 400851c:	183ff926 	beq	r3,zero,4008504 <_fstat_r+0x30>
 4008520:	80c00015 	stw	r3,0(r16)
 4008524:	dfc00117 	ldw	ra,4(sp)
 4008528:	dc000017 	ldw	r16,0(sp)
 400852c:	dec00204 	addi	sp,sp,8
 4008530:	f800283a 	ret

04008534 <__sfvwrite_r>:
 4008534:	30800217 	ldw	r2,8(r6)
 4008538:	1000c726 	beq	r2,zero,4008858 <__sfvwrite_r+0x324>
 400853c:	29c0030b 	ldhu	r7,12(r5)
 4008540:	defff404 	addi	sp,sp,-48
 4008544:	dd800815 	stw	r22,32(sp)
 4008548:	dd400715 	stw	r21,28(sp)
 400854c:	dc000215 	stw	r16,8(sp)
 4008550:	dfc00b15 	stw	ra,44(sp)
 4008554:	df000a15 	stw	fp,40(sp)
 4008558:	ddc00915 	stw	r23,36(sp)
 400855c:	dd000615 	stw	r20,24(sp)
 4008560:	dcc00515 	stw	r19,20(sp)
 4008564:	dc800415 	stw	r18,16(sp)
 4008568:	dc400315 	stw	r17,12(sp)
 400856c:	3880020c 	andi	r2,r7,8
 4008570:	302d883a 	mov	r22,r6
 4008574:	202b883a 	mov	r21,r4
 4008578:	2821883a 	mov	r16,r5
 400857c:	10002226 	beq	r2,zero,4008608 <__sfvwrite_r+0xd4>
 4008580:	28800417 	ldw	r2,16(r5)
 4008584:	10002026 	beq	r2,zero,4008608 <__sfvwrite_r+0xd4>
 4008588:	3880008c 	andi	r2,r7,2
 400858c:	b4400017 	ldw	r17,0(r22)
 4008590:	10002526 	beq	r2,zero,4008628 <__sfvwrite_r+0xf4>
 4008594:	80800917 	ldw	r2,36(r16)
 4008598:	81400717 	ldw	r5,28(r16)
 400859c:	05200034 	movhi	r20,32768
 40085a0:	0027883a 	mov	r19,zero
 40085a4:	0025883a 	mov	r18,zero
 40085a8:	a53f0004 	addi	r20,r20,-1024
 40085ac:	980d883a 	mov	r6,r19
 40085b0:	a809883a 	mov	r4,r21
 40085b4:	90001026 	beq	r18,zero,40085f8 <__sfvwrite_r+0xc4>
 40085b8:	900f883a 	mov	r7,r18
 40085bc:	a480012e 	bgeu	r20,r18,40085c4 <__sfvwrite_r+0x90>
 40085c0:	a00f883a 	mov	r7,r20
 40085c4:	103ee83a 	callr	r2
 40085c8:	00809e0e 	bge	zero,r2,4008844 <__sfvwrite_r+0x310>
 40085cc:	b1000217 	ldw	r4,8(r22)
 40085d0:	98a7883a 	add	r19,r19,r2
 40085d4:	90a5c83a 	sub	r18,r18,r2
 40085d8:	2085c83a 	sub	r2,r4,r2
 40085dc:	b0800215 	stw	r2,8(r22)
 40085e0:	10006226 	beq	r2,zero,400876c <__sfvwrite_r+0x238>
 40085e4:	80800917 	ldw	r2,36(r16)
 40085e8:	81400717 	ldw	r5,28(r16)
 40085ec:	980d883a 	mov	r6,r19
 40085f0:	a809883a 	mov	r4,r21
 40085f4:	903ff01e 	bne	r18,zero,40085b8 <__sfvwrite_r+0x84>
 40085f8:	8cc00017 	ldw	r19,0(r17)
 40085fc:	8c800117 	ldw	r18,4(r17)
 4008600:	8c400204 	addi	r17,r17,8
 4008604:	003fe906 	br	40085ac <__sfvwrite_r+0x78>
 4008608:	800b883a 	mov	r5,r16
 400860c:	a809883a 	mov	r4,r21
 4008610:	40025440 	call	4002544 <__swsetup_r>
 4008614:	1000f41e 	bne	r2,zero,40089e8 <__sfvwrite_r+0x4b4>
 4008618:	81c0030b 	ldhu	r7,12(r16)
 400861c:	b4400017 	ldw	r17,0(r22)
 4008620:	3880008c 	andi	r2,r7,2
 4008624:	103fdb1e 	bne	r2,zero,4008594 <__sfvwrite_r+0x60>
 4008628:	3880004c 	andi	r2,r7,1
 400862c:	84800217 	ldw	r18,8(r16)
 4008630:	82000017 	ldw	r8,0(r16)
 4008634:	10008a1e 	bne	r2,zero,4008860 <__sfvwrite_r+0x32c>
 4008638:	00a00034 	movhi	r2,32768
 400863c:	10bfff84 	addi	r2,r2,-2
 4008640:	00e00034 	movhi	r3,32768
 4008644:	d8800015 	stw	r2,0(sp)
 4008648:	18bfffc4 	addi	r2,r3,-1
 400864c:	0039883a 	mov	fp,zero
 4008650:	0027883a 	mov	r19,zero
 4008654:	d8800115 	stw	r2,4(sp)
 4008658:	98004026 	beq	r19,zero,400875c <__sfvwrite_r+0x228>
 400865c:	3880800c 	andi	r2,r7,512
 4008660:	10009226 	beq	r2,zero,40088ac <__sfvwrite_r+0x378>
 4008664:	902f883a 	mov	r23,r18
 4008668:	9c80b636 	bltu	r19,r18,4008944 <__sfvwrite_r+0x410>
 400866c:	3881200c 	andi	r2,r7,1152
 4008670:	10002526 	beq	r2,zero,4008708 <__sfvwrite_r+0x1d4>
 4008674:	81000517 	ldw	r4,20(r16)
 4008678:	81400417 	ldw	r5,16(r16)
 400867c:	98800044 	addi	r2,r19,1
 4008680:	210000e4 	muli	r4,r4,3
 4008684:	4165c83a 	sub	r18,r8,r5
 4008688:	1485883a 	add	r2,r2,r18
 400868c:	2028d7fa 	srli	r20,r4,31
 4008690:	a109883a 	add	r4,r20,r4
 4008694:	2029d07a 	srai	r20,r4,1
 4008698:	a00d883a 	mov	r6,r20
 400869c:	a080022e 	bgeu	r20,r2,40086a8 <__sfvwrite_r+0x174>
 40086a0:	1029883a 	mov	r20,r2
 40086a4:	100d883a 	mov	r6,r2
 40086a8:	39c1000c 	andi	r7,r7,1024
 40086ac:	3800be26 	beq	r7,zero,40089a8 <__sfvwrite_r+0x474>
 40086b0:	a809883a 	mov	r4,r21
 40086b4:	300b883a 	mov	r5,r6
 40086b8:	4004d300 	call	4004d30 <_malloc_r>
 40086bc:	1009883a 	mov	r4,r2
 40086c0:	1000c526 	beq	r2,zero,40089d8 <__sfvwrite_r+0x4a4>
 40086c4:	81400417 	ldw	r5,16(r16)
 40086c8:	900d883a 	mov	r6,r18
 40086cc:	40055e40 	call	40055e4 <memcpy>
 40086d0:	1009883a 	mov	r4,r2
 40086d4:	8080030b 	ldhu	r2,12(r16)
 40086d8:	00fedfc4 	movi	r3,-1153
 40086dc:	10c4703a 	and	r2,r2,r3
 40086e0:	10802014 	ori	r2,r2,128
 40086e4:	8080030d 	sth	r2,12(r16)
 40086e8:	2491883a 	add	r8,r4,r18
 40086ec:	a485c83a 	sub	r2,r20,r18
 40086f0:	81000415 	stw	r4,16(r16)
 40086f4:	82000015 	stw	r8,0(r16)
 40086f8:	85000515 	stw	r20,20(r16)
 40086fc:	9825883a 	mov	r18,r19
 4008700:	80800215 	stw	r2,8(r16)
 4008704:	982f883a 	mov	r23,r19
 4008708:	4009883a 	mov	r4,r8
 400870c:	b80d883a 	mov	r6,r23
 4008710:	e00b883a 	mov	r5,fp
 4008714:	4008b940 	call	4008b94 <memmove>
 4008718:	81000217 	ldw	r4,8(r16)
 400871c:	80800017 	ldw	r2,0(r16)
 4008720:	9829883a 	mov	r20,r19
 4008724:	24a5c83a 	sub	r18,r4,r18
 4008728:	15c5883a 	add	r2,r2,r23
 400872c:	84800215 	stw	r18,8(r16)
 4008730:	80800015 	stw	r2,0(r16)
 4008734:	0027883a 	mov	r19,zero
 4008738:	b0800217 	ldw	r2,8(r22)
 400873c:	e539883a 	add	fp,fp,r20
 4008740:	1529c83a 	sub	r20,r2,r20
 4008744:	b5000215 	stw	r20,8(r22)
 4008748:	a0000826 	beq	r20,zero,400876c <__sfvwrite_r+0x238>
 400874c:	81c0030b 	ldhu	r7,12(r16)
 4008750:	84800217 	ldw	r18,8(r16)
 4008754:	82000017 	ldw	r8,0(r16)
 4008758:	983fc01e 	bne	r19,zero,400865c <__sfvwrite_r+0x128>
 400875c:	8f000017 	ldw	fp,0(r17)
 4008760:	8cc00117 	ldw	r19,4(r17)
 4008764:	8c400204 	addi	r17,r17,8
 4008768:	003fbb06 	br	4008658 <__sfvwrite_r+0x124>
 400876c:	0005883a 	mov	r2,zero
 4008770:	dfc00b17 	ldw	ra,44(sp)
 4008774:	df000a17 	ldw	fp,40(sp)
 4008778:	ddc00917 	ldw	r23,36(sp)
 400877c:	dd800817 	ldw	r22,32(sp)
 4008780:	dd400717 	ldw	r21,28(sp)
 4008784:	dd000617 	ldw	r20,24(sp)
 4008788:	dcc00517 	ldw	r19,20(sp)
 400878c:	dc800417 	ldw	r18,16(sp)
 4008790:	dc400317 	ldw	r17,12(sp)
 4008794:	dc000217 	ldw	r16,8(sp)
 4008798:	dec00c04 	addi	sp,sp,48
 400879c:	f800283a 	ret
 40087a0:	e1c07016 	blt	fp,r7,4008964 <__sfvwrite_r+0x430>
 40087a4:	80800917 	ldw	r2,36(r16)
 40087a8:	81400717 	ldw	r5,28(r16)
 40087ac:	b80d883a 	mov	r6,r23
 40087b0:	a809883a 	mov	r4,r21
 40087b4:	103ee83a 	callr	r2
 40087b8:	1025883a 	mov	r18,r2
 40087bc:	0080210e 	bge	zero,r2,4008844 <__sfvwrite_r+0x310>
 40087c0:	a4a9c83a 	sub	r20,r20,r18
 40087c4:	a0006226 	beq	r20,zero,4008950 <__sfvwrite_r+0x41c>
 40087c8:	00800044 	movi	r2,1
 40087cc:	b1800217 	ldw	r6,8(r22)
 40087d0:	bcaf883a 	add	r23,r23,r18
 40087d4:	9ca7c83a 	sub	r19,r19,r18
 40087d8:	34a5c83a 	sub	r18,r6,r18
 40087dc:	b4800215 	stw	r18,8(r22)
 40087e0:	903fe226 	beq	r18,zero,400876c <__sfvwrite_r+0x238>
 40087e4:	84800217 	ldw	r18,8(r16)
 40087e8:	82000017 	ldw	r8,0(r16)
 40087ec:	98002126 	beq	r19,zero,4008874 <__sfvwrite_r+0x340>
 40087f0:	10002426 	beq	r2,zero,4008884 <__sfvwrite_r+0x350>
 40087f4:	a005883a 	mov	r2,r20
 40087f8:	9839883a 	mov	fp,r19
 40087fc:	14c0012e 	bgeu	r2,r19,4008804 <__sfvwrite_r+0x2d0>
 4008800:	1039883a 	mov	fp,r2
 4008804:	80800417 	ldw	r2,16(r16)
 4008808:	81c00517 	ldw	r7,20(r16)
 400880c:	123fe42e 	bgeu	r2,r8,40087a0 <__sfvwrite_r+0x26c>
 4008810:	3ca5883a 	add	r18,r7,r18
 4008814:	973fe20e 	bge	r18,fp,40087a0 <__sfvwrite_r+0x26c>
 4008818:	b80b883a 	mov	r5,r23
 400881c:	4009883a 	mov	r4,r8
 4008820:	900d883a 	mov	r6,r18
 4008824:	4008b940 	call	4008b94 <memmove>
 4008828:	80800017 	ldw	r2,0(r16)
 400882c:	800b883a 	mov	r5,r16
 4008830:	a809883a 	mov	r4,r21
 4008834:	1485883a 	add	r2,r2,r18
 4008838:	80800015 	stw	r2,0(r16)
 400883c:	40042140 	call	4004214 <_fflush_r>
 4008840:	103fdf26 	beq	r2,zero,40087c0 <__sfvwrite_r+0x28c>
 4008844:	8080030b 	ldhu	r2,12(r16)
 4008848:	10801014 	ori	r2,r2,64
 400884c:	8080030d 	sth	r2,12(r16)
 4008850:	00bfffc4 	movi	r2,-1
 4008854:	003fc606 	br	4008770 <__sfvwrite_r+0x23c>
 4008858:	0005883a 	mov	r2,zero
 400885c:	f800283a 	ret
 4008860:	0027883a 	mov	r19,zero
 4008864:	0029883a 	mov	r20,zero
 4008868:	0005883a 	mov	r2,zero
 400886c:	002f883a 	mov	r23,zero
 4008870:	983fdf1e 	bne	r19,zero,40087f0 <__sfvwrite_r+0x2bc>
 4008874:	8cc00117 	ldw	r19,4(r17)
 4008878:	8dc00017 	ldw	r23,0(r17)
 400887c:	8c400204 	addi	r17,r17,8
 4008880:	983ffc26 	beq	r19,zero,4008874 <__sfvwrite_r+0x340>
 4008884:	980d883a 	mov	r6,r19
 4008888:	01400284 	movi	r5,10
 400888c:	b809883a 	mov	r4,r23
 4008890:	da000015 	stw	r8,0(sp)
 4008894:	40055100 	call	4005510 <memchr>
 4008898:	da000017 	ldw	r8,0(sp)
 400889c:	10003f26 	beq	r2,zero,400899c <__sfvwrite_r+0x468>
 40088a0:	10800044 	addi	r2,r2,1
 40088a4:	15e9c83a 	sub	r20,r2,r23
 40088a8:	003fd206 	br	40087f4 <__sfvwrite_r+0x2c0>
 40088ac:	80800417 	ldw	r2,16(r16)
 40088b0:	12001136 	bltu	r2,r8,40088f8 <__sfvwrite_r+0x3c4>
 40088b4:	85000517 	ldw	r20,20(r16)
 40088b8:	9d000f36 	bltu	r19,r20,40088f8 <__sfvwrite_r+0x3c4>
 40088bc:	d8800017 	ldw	r2,0(sp)
 40088c0:	14c0342e 	bgeu	r2,r19,4008994 <__sfvwrite_r+0x460>
 40088c4:	d9000117 	ldw	r4,4(sp)
 40088c8:	a00b883a 	mov	r5,r20
 40088cc:	400a3c80 	call	400a3c8 <__divsi3>
 40088d0:	150f383a 	mul	r7,r2,r20
 40088d4:	82000917 	ldw	r8,36(r16)
 40088d8:	81400717 	ldw	r5,28(r16)
 40088dc:	e00d883a 	mov	r6,fp
 40088e0:	a809883a 	mov	r4,r21
 40088e4:	403ee83a 	callr	r8
 40088e8:	1029883a 	mov	r20,r2
 40088ec:	00bfd50e 	bge	zero,r2,4008844 <__sfvwrite_r+0x310>
 40088f0:	9d27c83a 	sub	r19,r19,r20
 40088f4:	003f9006 	br	4008738 <__sfvwrite_r+0x204>
 40088f8:	9029883a 	mov	r20,r18
 40088fc:	9c80012e 	bgeu	r19,r18,4008904 <__sfvwrite_r+0x3d0>
 4008900:	9829883a 	mov	r20,r19
 4008904:	4009883a 	mov	r4,r8
 4008908:	a00d883a 	mov	r6,r20
 400890c:	e00b883a 	mov	r5,fp
 4008910:	4008b940 	call	4008b94 <memmove>
 4008914:	80800217 	ldw	r2,8(r16)
 4008918:	81000017 	ldw	r4,0(r16)
 400891c:	1505c83a 	sub	r2,r2,r20
 4008920:	2509883a 	add	r4,r4,r20
 4008924:	80800215 	stw	r2,8(r16)
 4008928:	81000015 	stw	r4,0(r16)
 400892c:	103ff01e 	bne	r2,zero,40088f0 <__sfvwrite_r+0x3bc>
 4008930:	800b883a 	mov	r5,r16
 4008934:	a809883a 	mov	r4,r21
 4008938:	40042140 	call	4004214 <_fflush_r>
 400893c:	103fec26 	beq	r2,zero,40088f0 <__sfvwrite_r+0x3bc>
 4008940:	003fc006 	br	4008844 <__sfvwrite_r+0x310>
 4008944:	9825883a 	mov	r18,r19
 4008948:	982f883a 	mov	r23,r19
 400894c:	003f6e06 	br	4008708 <__sfvwrite_r+0x1d4>
 4008950:	800b883a 	mov	r5,r16
 4008954:	a809883a 	mov	r4,r21
 4008958:	40042140 	call	4004214 <_fflush_r>
 400895c:	103f9b26 	beq	r2,zero,40087cc <__sfvwrite_r+0x298>
 4008960:	003fb806 	br	4008844 <__sfvwrite_r+0x310>
 4008964:	e00d883a 	mov	r6,fp
 4008968:	b80b883a 	mov	r5,r23
 400896c:	4009883a 	mov	r4,r8
 4008970:	4008b940 	call	4008b94 <memmove>
 4008974:	80800217 	ldw	r2,8(r16)
 4008978:	81800017 	ldw	r6,0(r16)
 400897c:	e025883a 	mov	r18,fp
 4008980:	1705c83a 	sub	r2,r2,fp
 4008984:	370d883a 	add	r6,r6,fp
 4008988:	80800215 	stw	r2,8(r16)
 400898c:	81800015 	stw	r6,0(r16)
 4008990:	003f8b06 	br	40087c0 <__sfvwrite_r+0x28c>
 4008994:	9809883a 	mov	r4,r19
 4008998:	003fcb06 	br	40088c8 <__sfvwrite_r+0x394>
 400899c:	98800044 	addi	r2,r19,1
 40089a0:	1029883a 	mov	r20,r2
 40089a4:	003f9406 	br	40087f8 <__sfvwrite_r+0x2c4>
 40089a8:	a809883a 	mov	r4,r21
 40089ac:	4008d240 	call	4008d24 <_realloc_r>
 40089b0:	1009883a 	mov	r4,r2
 40089b4:	103f4c1e 	bne	r2,zero,40086e8 <__sfvwrite_r+0x1b4>
 40089b8:	81400417 	ldw	r5,16(r16)
 40089bc:	a809883a 	mov	r4,r21
 40089c0:	40046fc0 	call	40046fc <_free_r>
 40089c4:	8080030b 	ldhu	r2,12(r16)
 40089c8:	00c00304 	movi	r3,12
 40089cc:	a8c00015 	stw	r3,0(r21)
 40089d0:	10bfdfcc 	andi	r2,r2,65407
 40089d4:	003f9c06 	br	4008848 <__sfvwrite_r+0x314>
 40089d8:	00c00304 	movi	r3,12
 40089dc:	8080030b 	ldhu	r2,12(r16)
 40089e0:	a8c00015 	stw	r3,0(r21)
 40089e4:	003f9806 	br	4008848 <__sfvwrite_r+0x314>
 40089e8:	00bfffc4 	movi	r2,-1
 40089ec:	003f6006 	br	4008770 <__sfvwrite_r+0x23c>

040089f0 <_isatty_r>:
 40089f0:	defffe04 	addi	sp,sp,-8
 40089f4:	dc000015 	stw	r16,0(sp)
 40089f8:	00810074 	movhi	r2,1025
 40089fc:	2021883a 	mov	r16,r4
 4008a00:	2809883a 	mov	r4,r5
 4008a04:	dfc00115 	stw	ra,4(sp)
 4008a08:	100d5915 	stw	zero,13668(r2)
 4008a0c:	400ce840 	call	400ce84 <isatty>
 4008a10:	10ffffd8 	cmpnei	r3,r2,-1
 4008a14:	18000426 	beq	r3,zero,4008a28 <_isatty_r+0x38>
 4008a18:	dfc00117 	ldw	ra,4(sp)
 4008a1c:	dc000017 	ldw	r16,0(sp)
 4008a20:	dec00204 	addi	sp,sp,8
 4008a24:	f800283a 	ret
 4008a28:	00c10074 	movhi	r3,1025
 4008a2c:	18cd5917 	ldw	r3,13668(r3)
 4008a30:	183ff926 	beq	r3,zero,4008a18 <_isatty_r+0x28>
 4008a34:	80c00015 	stw	r3,0(r16)
 4008a38:	dfc00117 	ldw	ra,4(sp)
 4008a3c:	dc000017 	ldw	r16,0(sp)
 4008a40:	dec00204 	addi	sp,sp,8
 4008a44:	f800283a 	ret

04008a48 <_setlocale_r>:
 4008a48:	30001626 	beq	r6,zero,4008aa4 <_setlocale_r+0x5c>
 4008a4c:	01410074 	movhi	r5,1025
 4008a50:	defffe04 	addi	sp,sp,-8
 4008a54:	297e6204 	addi	r5,r5,-1656
 4008a58:	3009883a 	mov	r4,r6
 4008a5c:	dc000015 	stw	r16,0(sp)
 4008a60:	dfc00115 	stw	ra,4(sp)
 4008a64:	3021883a 	mov	r16,r6
 4008a68:	40092880 	call	4009288 <strcmp>
 4008a6c:	1000061e 	bne	r2,zero,4008a88 <_setlocale_r+0x40>
 4008a70:	00810074 	movhi	r2,1025
 4008a74:	10be6104 	addi	r2,r2,-1660
 4008a78:	dfc00117 	ldw	ra,4(sp)
 4008a7c:	dc000017 	ldw	r16,0(sp)
 4008a80:	dec00204 	addi	sp,sp,8
 4008a84:	f800283a 	ret
 4008a88:	80800003 	ldbu	r2,0(r16)
 4008a8c:	10bfef44 	addi	r2,r2,-67
 4008a90:	10000726 	beq	r2,zero,4008ab0 <_setlocale_r+0x68>
 4008a94:	80800003 	ldbu	r2,0(r16)
 4008a98:	103ff526 	beq	r2,zero,4008a70 <_setlocale_r+0x28>
 4008a9c:	0005883a 	mov	r2,zero
 4008aa0:	003ff506 	br	4008a78 <_setlocale_r+0x30>
 4008aa4:	00810074 	movhi	r2,1025
 4008aa8:	10be6104 	addi	r2,r2,-1660
 4008aac:	f800283a 	ret
 4008ab0:	80800043 	ldbu	r2,1(r16)
 4008ab4:	103fee26 	beq	r2,zero,4008a70 <_setlocale_r+0x28>
 4008ab8:	003ff606 	br	4008a94 <_setlocale_r+0x4c>

04008abc <__locale_mb_cur_max>:
 4008abc:	00810074 	movhi	r2,1025
 4008ac0:	1081a907 	ldb	r2,1700(r2)
 4008ac4:	f800283a 	ret

04008ac8 <setlocale>:
 4008ac8:	00c10074 	movhi	r3,1025
 4008acc:	2005883a 	mov	r2,r4
 4008ad0:	19064817 	ldw	r4,6432(r3)
 4008ad4:	280d883a 	mov	r6,r5
 4008ad8:	100b883a 	mov	r5,r2
 4008adc:	4008a481 	jmpi	4008a48 <_setlocale_r>

04008ae0 <_lseek_r>:
 4008ae0:	2807883a 	mov	r3,r5
 4008ae4:	defffe04 	addi	sp,sp,-8
 4008ae8:	dc000015 	stw	r16,0(sp)
 4008aec:	300b883a 	mov	r5,r6
 4008af0:	00810074 	movhi	r2,1025
 4008af4:	380d883a 	mov	r6,r7
 4008af8:	2021883a 	mov	r16,r4
 4008afc:	1809883a 	mov	r4,r3
 4008b00:	dfc00115 	stw	ra,4(sp)
 4008b04:	100d5915 	stw	zero,13668(r2)
 4008b08:	400d1b80 	call	400d1b8 <lseek>
 4008b0c:	10ffffd8 	cmpnei	r3,r2,-1
 4008b10:	18000426 	beq	r3,zero,4008b24 <_lseek_r+0x44>
 4008b14:	dfc00117 	ldw	ra,4(sp)
 4008b18:	dc000017 	ldw	r16,0(sp)
 4008b1c:	dec00204 	addi	sp,sp,8
 4008b20:	f800283a 	ret
 4008b24:	00c10074 	movhi	r3,1025
 4008b28:	18cd5917 	ldw	r3,13668(r3)
 4008b2c:	183ff926 	beq	r3,zero,4008b14 <_lseek_r+0x34>
 4008b30:	80c00015 	stw	r3,0(r16)
 4008b34:	dfc00117 	ldw	ra,4(sp)
 4008b38:	dc000017 	ldw	r16,0(sp)
 4008b3c:	dec00204 	addi	sp,sp,8
 4008b40:	f800283a 	ret

04008b44 <_mbtowc_r>:
 4008b44:	00810074 	movhi	r2,1025
 4008b48:	10819817 	ldw	r2,1632(r2)
 4008b4c:	1000683a 	jmp	r2

04008b50 <__ascii_mbtowc>:
 4008b50:	deffff04 	addi	sp,sp,-4
 4008b54:	28000826 	beq	r5,zero,4008b78 <__ascii_mbtowc+0x28>
 4008b58:	30000926 	beq	r6,zero,4008b80 <__ascii_mbtowc+0x30>
 4008b5c:	38000b26 	beq	r7,zero,4008b8c <__ascii_mbtowc+0x3c>
 4008b60:	30800003 	ldbu	r2,0(r6)
 4008b64:	28800015 	stw	r2,0(r5)
 4008b68:	30800003 	ldbu	r2,0(r6)
 4008b6c:	1004c03a 	cmpne	r2,r2,zero
 4008b70:	dec00104 	addi	sp,sp,4
 4008b74:	f800283a 	ret
 4008b78:	d80b883a 	mov	r5,sp
 4008b7c:	303ff71e 	bne	r6,zero,4008b5c <__ascii_mbtowc+0xc>
 4008b80:	0005883a 	mov	r2,zero
 4008b84:	dec00104 	addi	sp,sp,4
 4008b88:	f800283a 	ret
 4008b8c:	00bfff84 	movi	r2,-2
 4008b90:	003ff706 	br	4008b70 <__ascii_mbtowc+0x20>

04008b94 <memmove>:
 4008b94:	2005883a 	mov	r2,r4
 4008b98:	29000a2e 	bgeu	r5,r4,4008bc4 <memmove+0x30>
 4008b9c:	2989883a 	add	r4,r5,r6
 4008ba0:	1100082e 	bgeu	r2,r4,4008bc4 <memmove+0x30>
 4008ba4:	1187883a 	add	r3,r2,r6
 4008ba8:	30003e26 	beq	r6,zero,4008ca4 <memmove+0x110>
 4008bac:	217fffc3 	ldbu	r5,-1(r4)
 4008bb0:	18ffffc4 	addi	r3,r3,-1
 4008bb4:	213fffc4 	addi	r4,r4,-1
 4008bb8:	19400005 	stb	r5,0(r3)
 4008bbc:	10fffb1e 	bne	r2,r3,4008bac <memmove+0x18>
 4008bc0:	f800283a 	ret
 4008bc4:	30c00430 	cmpltui	r3,r6,16
 4008bc8:	18000b26 	beq	r3,zero,4008bf8 <memmove+0x64>
 4008bcc:	1007883a 	mov	r3,r2
 4008bd0:	31ffffc4 	addi	r7,r6,-1
 4008bd4:	30003726 	beq	r6,zero,4008cb4 <memmove+0x120>
 4008bd8:	39c00044 	addi	r7,r7,1
 4008bdc:	29cf883a 	add	r7,r5,r7
 4008be0:	29800003 	ldbu	r6,0(r5)
 4008be4:	29400044 	addi	r5,r5,1
 4008be8:	18c00044 	addi	r3,r3,1
 4008bec:	19bfffc5 	stb	r6,-1(r3)
 4008bf0:	29fffb1e 	bne	r5,r7,4008be0 <memmove+0x4c>
 4008bf4:	f800283a 	ret
 4008bf8:	2886b03a 	or	r3,r5,r2
 4008bfc:	18c000cc 	andi	r3,r3,3
 4008c00:	1800291e 	bne	r3,zero,4008ca8 <memmove+0x114>
 4008c04:	327ffc04 	addi	r9,r6,-16
 4008c08:	4812d13a 	srli	r9,r9,4
 4008c0c:	280f883a 	mov	r7,r5
 4008c10:	1007883a 	mov	r3,r2
 4008c14:	4a400044 	addi	r9,r9,1
 4008c18:	4812913a 	slli	r9,r9,4
 4008c1c:	1251883a 	add	r8,r2,r9
 4008c20:	39000017 	ldw	r4,0(r7)
 4008c24:	39c00404 	addi	r7,r7,16
 4008c28:	18c00404 	addi	r3,r3,16
 4008c2c:	193ffc15 	stw	r4,-16(r3)
 4008c30:	393ffd17 	ldw	r4,-12(r7)
 4008c34:	193ffd15 	stw	r4,-12(r3)
 4008c38:	393ffe17 	ldw	r4,-8(r7)
 4008c3c:	193ffe15 	stw	r4,-8(r3)
 4008c40:	393fff17 	ldw	r4,-4(r7)
 4008c44:	193fff15 	stw	r4,-4(r3)
 4008c48:	40fff51e 	bne	r8,r3,4008c20 <memmove+0x8c>
 4008c4c:	3100030c 	andi	r4,r6,12
 4008c50:	2a4b883a 	add	r5,r5,r9
 4008c54:	320003cc 	andi	r8,r6,15
 4008c58:	20001726 	beq	r4,zero,4008cb8 <memmove+0x124>
 4008c5c:	2813883a 	mov	r9,r5
 4008c60:	180f883a 	mov	r7,r3
 4008c64:	4a800017 	ldw	r10,0(r9)
 4008c68:	39c00104 	addi	r7,r7,4
 4008c6c:	41c9c83a 	sub	r4,r8,r7
 4008c70:	1909883a 	add	r4,r3,r4
 4008c74:	21000128 	cmpgeui	r4,r4,4
 4008c78:	3abfff15 	stw	r10,-4(r7)
 4008c7c:	4a400104 	addi	r9,r9,4
 4008c80:	203ff81e 	bne	r4,zero,4008c64 <memmove+0xd0>
 4008c84:	413fff04 	addi	r4,r8,-4
 4008c88:	2008d0ba 	srli	r4,r4,2
 4008c8c:	318000cc 	andi	r6,r6,3
 4008c90:	21000044 	addi	r4,r4,1
 4008c94:	200890ba 	slli	r4,r4,2
 4008c98:	1907883a 	add	r3,r3,r4
 4008c9c:	290b883a 	add	r5,r5,r4
 4008ca0:	003fcb06 	br	4008bd0 <memmove+0x3c>
 4008ca4:	f800283a 	ret
 4008ca8:	31ffffc4 	addi	r7,r6,-1
 4008cac:	1007883a 	mov	r3,r2
 4008cb0:	003fc906 	br	4008bd8 <memmove+0x44>
 4008cb4:	f800283a 	ret
 4008cb8:	400d883a 	mov	r6,r8
 4008cbc:	003fc406 	br	4008bd0 <memmove+0x3c>

04008cc0 <_read_r>:
 4008cc0:	2807883a 	mov	r3,r5
 4008cc4:	defffe04 	addi	sp,sp,-8
 4008cc8:	dc000015 	stw	r16,0(sp)
 4008ccc:	300b883a 	mov	r5,r6
 4008cd0:	00810074 	movhi	r2,1025
 4008cd4:	380d883a 	mov	r6,r7
 4008cd8:	2021883a 	mov	r16,r4
 4008cdc:	1809883a 	mov	r4,r3
 4008ce0:	dfc00115 	stw	ra,4(sp)
 4008ce4:	100d5915 	stw	zero,13668(r2)
 4008ce8:	400d38c0 	call	400d38c <read>
 4008cec:	10ffffd8 	cmpnei	r3,r2,-1
 4008cf0:	18000426 	beq	r3,zero,4008d04 <_read_r+0x44>
 4008cf4:	dfc00117 	ldw	ra,4(sp)
 4008cf8:	dc000017 	ldw	r16,0(sp)
 4008cfc:	dec00204 	addi	sp,sp,8
 4008d00:	f800283a 	ret
 4008d04:	00c10074 	movhi	r3,1025
 4008d08:	18cd5917 	ldw	r3,13668(r3)
 4008d0c:	183ff926 	beq	r3,zero,4008cf4 <_read_r+0x34>
 4008d10:	80c00015 	stw	r3,0(r16)
 4008d14:	dfc00117 	ldw	ra,4(sp)
 4008d18:	dc000017 	ldw	r16,0(sp)
 4008d1c:	dec00204 	addi	sp,sp,8
 4008d20:	f800283a 	ret

04008d24 <_realloc_r>:
 4008d24:	defff504 	addi	sp,sp,-44
 4008d28:	dc800315 	stw	r18,12(sp)
 4008d2c:	dfc00a15 	stw	ra,40(sp)
 4008d30:	df000915 	stw	fp,36(sp)
 4008d34:	ddc00815 	stw	r23,32(sp)
 4008d38:	dd800715 	stw	r22,28(sp)
 4008d3c:	dd400615 	stw	r21,24(sp)
 4008d40:	dd000515 	stw	r20,20(sp)
 4008d44:	dcc00415 	stw	r19,16(sp)
 4008d48:	dc400215 	stw	r17,8(sp)
 4008d4c:	dc000115 	stw	r16,4(sp)
 4008d50:	3025883a 	mov	r18,r6
 4008d54:	28008b26 	beq	r5,zero,4008f84 <_realloc_r+0x260>
 4008d58:	2821883a 	mov	r16,r5
 4008d5c:	2027883a 	mov	r19,r4
 4008d60:	944002c4 	addi	r17,r18,11
 4008d64:	400d3080 	call	400d308 <__malloc_lock>
 4008d68:	888005f0 	cmpltui	r2,r17,23
 4008d6c:	1000521e 	bne	r2,zero,4008eb8 <_realloc_r+0x194>
 4008d70:	017ffe04 	movi	r5,-8
 4008d74:	8962703a 	and	r17,r17,r5
 4008d78:	8807883a 	mov	r3,r17
 4008d7c:	88005116 	blt	r17,zero,4008ec4 <_realloc_r+0x1a0>
 4008d80:	8c805036 	bltu	r17,r18,4008ec4 <_realloc_r+0x1a0>
 4008d84:	80bfff17 	ldw	r2,-4(r16)
 4008d88:	017fff04 	movi	r5,-4
 4008d8c:	857ffe04 	addi	r21,r16,-8
 4008d90:	1168703a 	and	r20,r2,r5
 4008d94:	ad2d883a 	add	r22,r21,r20
 4008d98:	a0c0390e 	bge	r20,r3,4008e80 <_realloc_r+0x15c>
 4008d9c:	07010074 	movhi	fp,1025
 4008da0:	e7005d04 	addi	fp,fp,372
 4008da4:	e2000217 	ldw	r8,8(fp)
 4008da8:	b1000117 	ldw	r4,4(r22)
 4008dac:	45808e26 	beq	r8,r22,4008fe8 <_realloc_r+0x2c4>
 4008db0:	01bfff84 	movi	r6,-2
 4008db4:	218c703a 	and	r6,r4,r6
 4008db8:	b18d883a 	add	r6,r22,r6
 4008dbc:	31800117 	ldw	r6,4(r6)
 4008dc0:	3180004c 	andi	r6,r6,1
 4008dc4:	30004f1e 	bne	r6,zero,4008f04 <_realloc_r+0x1e0>
 4008dc8:	2148703a 	and	r4,r4,r5
 4008dcc:	a10b883a 	add	r5,r20,r4
 4008dd0:	28c0bf0e 	bge	r5,r3,40090d0 <_realloc_r+0x3ac>
 4008dd4:	1080004c 	andi	r2,r2,1
 4008dd8:	10004c1e 	bne	r2,zero,4008f0c <_realloc_r+0x1e8>
 4008ddc:	81fffe17 	ldw	r7,-8(r16)
 4008de0:	00bfff04 	movi	r2,-4
 4008de4:	a9cfc83a 	sub	r7,r21,r7
 4008de8:	39400117 	ldw	r5,4(r7)
 4008dec:	288a703a 	and	r5,r5,r2
 4008df0:	b0000426 	beq	r22,zero,4008e04 <_realloc_r+0xe0>
 4008df4:	a16f883a 	add	r23,r20,r5
 4008df8:	b92f883a 	add	r23,r23,r4
 4008dfc:	4580bf26 	beq	r8,r22,40090fc <_realloc_r+0x3d8>
 4008e00:	b8c0930e 	bge	r23,r3,4009050 <_realloc_r+0x32c>
 4008e04:	38004126 	beq	r7,zero,4008f0c <_realloc_r+0x1e8>
 4008e08:	a16f883a 	add	r23,r20,r5
 4008e0c:	b8c03f16 	blt	r23,r3,4008f0c <_realloc_r+0x1e8>
 4008e10:	38800317 	ldw	r2,12(r7)
 4008e14:	38c00217 	ldw	r3,8(r7)
 4008e18:	a1bfff04 	addi	r6,r20,-4
 4008e1c:	31400968 	cmpgeui	r5,r6,37
 4008e20:	18800315 	stw	r2,12(r3)
 4008e24:	10c00215 	stw	r3,8(r2)
 4008e28:	39000204 	addi	r4,r7,8
 4008e2c:	3ded883a 	add	r22,r7,r23
 4008e30:	2800941e 	bne	r5,zero,4009084 <_realloc_r+0x360>
 4008e34:	30800530 	cmpltui	r2,r6,20
 4008e38:	80c00017 	ldw	r3,0(r16)
 4008e3c:	1000df1e 	bne	r2,zero,40091bc <_realloc_r+0x498>
 4008e40:	38c00215 	stw	r3,8(r7)
 4008e44:	80c00117 	ldw	r3,4(r16)
 4008e48:	30800728 	cmpgeui	r2,r6,28
 4008e4c:	38c00315 	stw	r3,12(r7)
 4008e50:	1000dc1e 	bne	r2,zero,40091c4 <_realloc_r+0x4a0>
 4008e54:	80c00217 	ldw	r3,8(r16)
 4008e58:	38800404 	addi	r2,r7,16
 4008e5c:	84000204 	addi	r16,r16,8
 4008e60:	10c00015 	stw	r3,0(r2)
 4008e64:	80c00117 	ldw	r3,4(r16)
 4008e68:	b829883a 	mov	r20,r23
 4008e6c:	382b883a 	mov	r21,r7
 4008e70:	10c00115 	stw	r3,4(r2)
 4008e74:	80c00217 	ldw	r3,8(r16)
 4008e78:	2021883a 	mov	r16,r4
 4008e7c:	10c00215 	stw	r3,8(r2)
 4008e80:	a9800117 	ldw	r6,4(r21)
 4008e84:	a445c83a 	sub	r2,r20,r17
 4008e88:	10c00430 	cmpltui	r3,r2,16
 4008e8c:	3180004c 	andi	r6,r6,1
 4008e90:	18004926 	beq	r3,zero,4008fb8 <_realloc_r+0x294>
 4008e94:	a18cb03a 	or	r6,r20,r6
 4008e98:	a9800115 	stw	r6,4(r21)
 4008e9c:	b0800117 	ldw	r2,4(r22)
 4008ea0:	10800054 	ori	r2,r2,1
 4008ea4:	b0800115 	stw	r2,4(r22)
 4008ea8:	9809883a 	mov	r4,r19
 4008eac:	400d32c0 	call	400d32c <__malloc_unlock>
 4008eb0:	8025883a 	mov	r18,r16
 4008eb4:	00000606 	br	4008ed0 <_realloc_r+0x1ac>
 4008eb8:	04400404 	movi	r17,16
 4008ebc:	00c00404 	movi	r3,16
 4008ec0:	8cbfb02e 	bgeu	r17,r18,4008d84 <_realloc_r+0x60>
 4008ec4:	00800304 	movi	r2,12
 4008ec8:	98800015 	stw	r2,0(r19)
 4008ecc:	0025883a 	mov	r18,zero
 4008ed0:	9005883a 	mov	r2,r18
 4008ed4:	dfc00a17 	ldw	ra,40(sp)
 4008ed8:	df000917 	ldw	fp,36(sp)
 4008edc:	ddc00817 	ldw	r23,32(sp)
 4008ee0:	dd800717 	ldw	r22,28(sp)
 4008ee4:	dd400617 	ldw	r21,24(sp)
 4008ee8:	dd000517 	ldw	r20,20(sp)
 4008eec:	dcc00417 	ldw	r19,16(sp)
 4008ef0:	dc800317 	ldw	r18,12(sp)
 4008ef4:	dc400217 	ldw	r17,8(sp)
 4008ef8:	dc000117 	ldw	r16,4(sp)
 4008efc:	dec00b04 	addi	sp,sp,44
 4008f00:	f800283a 	ret
 4008f04:	1080004c 	andi	r2,r2,1
 4008f08:	10006c26 	beq	r2,zero,40090bc <_realloc_r+0x398>
 4008f0c:	900b883a 	mov	r5,r18
 4008f10:	9809883a 	mov	r4,r19
 4008f14:	4004d300 	call	4004d30 <_malloc_r>
 4008f18:	1025883a 	mov	r18,r2
 4008f1c:	10001626 	beq	r2,zero,4008f78 <_realloc_r+0x254>
 4008f20:	80bfff17 	ldw	r2,-4(r16)
 4008f24:	013fff84 	movi	r4,-2
 4008f28:	90fffe04 	addi	r3,r18,-8
 4008f2c:	1104703a 	and	r2,r2,r4
 4008f30:	a885883a 	add	r2,r21,r2
 4008f34:	10c05b26 	beq	r2,r3,40090a4 <_realloc_r+0x380>
 4008f38:	a1bfff04 	addi	r6,r20,-4
 4008f3c:	30800968 	cmpgeui	r2,r6,37
 4008f40:	10006a1e 	bne	r2,zero,40090ec <_realloc_r+0x3c8>
 4008f44:	30800530 	cmpltui	r2,r6,20
 4008f48:	81000017 	ldw	r4,0(r16)
 4008f4c:	10003726 	beq	r2,zero,400902c <_realloc_r+0x308>
 4008f50:	9005883a 	mov	r2,r18
 4008f54:	8007883a 	mov	r3,r16
 4008f58:	11000015 	stw	r4,0(r2)
 4008f5c:	19000117 	ldw	r4,4(r3)
 4008f60:	11000115 	stw	r4,4(r2)
 4008f64:	18c00217 	ldw	r3,8(r3)
 4008f68:	10c00215 	stw	r3,8(r2)
 4008f6c:	800b883a 	mov	r5,r16
 4008f70:	9809883a 	mov	r4,r19
 4008f74:	40046fc0 	call	40046fc <_free_r>
 4008f78:	9809883a 	mov	r4,r19
 4008f7c:	400d32c0 	call	400d32c <__malloc_unlock>
 4008f80:	003fd306 	br	4008ed0 <_realloc_r+0x1ac>
 4008f84:	300b883a 	mov	r5,r6
 4008f88:	dfc00a17 	ldw	ra,40(sp)
 4008f8c:	df000917 	ldw	fp,36(sp)
 4008f90:	ddc00817 	ldw	r23,32(sp)
 4008f94:	dd800717 	ldw	r22,28(sp)
 4008f98:	dd400617 	ldw	r21,24(sp)
 4008f9c:	dd000517 	ldw	r20,20(sp)
 4008fa0:	dcc00417 	ldw	r19,16(sp)
 4008fa4:	dc800317 	ldw	r18,12(sp)
 4008fa8:	dc400217 	ldw	r17,8(sp)
 4008fac:	dc000117 	ldw	r16,4(sp)
 4008fb0:	dec00b04 	addi	sp,sp,44
 4008fb4:	4004d301 	jmpi	4004d30 <_malloc_r>
 4008fb8:	344cb03a 	or	r6,r6,r17
 4008fbc:	a9800115 	stw	r6,4(r21)
 4008fc0:	ac4b883a 	add	r5,r21,r17
 4008fc4:	10800054 	ori	r2,r2,1
 4008fc8:	28800115 	stw	r2,4(r5)
 4008fcc:	b0800117 	ldw	r2,4(r22)
 4008fd0:	29400204 	addi	r5,r5,8
 4008fd4:	9809883a 	mov	r4,r19
 4008fd8:	10800054 	ori	r2,r2,1
 4008fdc:	b0800115 	stw	r2,4(r22)
 4008fe0:	40046fc0 	call	40046fc <_free_r>
 4008fe4:	003fb006 	br	4008ea8 <_realloc_r+0x184>
 4008fe8:	2148703a 	and	r4,r4,r5
 4008fec:	a10b883a 	add	r5,r20,r4
 4008ff0:	89800404 	addi	r6,r17,16
 4008ff4:	29bf7716 	blt	r5,r6,4008dd4 <_realloc_r+0xb0>
 4008ff8:	ac6b883a 	add	r21,r21,r17
 4008ffc:	2c45c83a 	sub	r2,r5,r17
 4009000:	e5400215 	stw	r21,8(fp)
 4009004:	10800054 	ori	r2,r2,1
 4009008:	a8800115 	stw	r2,4(r21)
 400900c:	80bfff17 	ldw	r2,-4(r16)
 4009010:	9809883a 	mov	r4,r19
 4009014:	8025883a 	mov	r18,r16
 4009018:	1080004c 	andi	r2,r2,1
 400901c:	1462b03a 	or	r17,r2,r17
 4009020:	847fff15 	stw	r17,-4(r16)
 4009024:	400d32c0 	call	400d32c <__malloc_unlock>
 4009028:	003fa906 	br	4008ed0 <_realloc_r+0x1ac>
 400902c:	91000015 	stw	r4,0(r18)
 4009030:	80c00117 	ldw	r3,4(r16)
 4009034:	30800728 	cmpgeui	r2,r6,28
 4009038:	90c00115 	stw	r3,4(r18)
 400903c:	1000551e 	bne	r2,zero,4009194 <_realloc_r+0x470>
 4009040:	81000217 	ldw	r4,8(r16)
 4009044:	80c00204 	addi	r3,r16,8
 4009048:	90800204 	addi	r2,r18,8
 400904c:	003fc206 	br	4008f58 <_realloc_r+0x234>
 4009050:	b0800317 	ldw	r2,12(r22)
 4009054:	b0c00217 	ldw	r3,8(r22)
 4009058:	a1bfff04 	addi	r6,r20,-4
 400905c:	31400968 	cmpgeui	r5,r6,37
 4009060:	18800315 	stw	r2,12(r3)
 4009064:	10c00215 	stw	r3,8(r2)
 4009068:	38c00217 	ldw	r3,8(r7)
 400906c:	38800317 	ldw	r2,12(r7)
 4009070:	39000204 	addi	r4,r7,8
 4009074:	3ded883a 	add	r22,r7,r23
 4009078:	18800315 	stw	r2,12(r3)
 400907c:	10c00215 	stw	r3,8(r2)
 4009080:	283f6c26 	beq	r5,zero,4008e34 <_realloc_r+0x110>
 4009084:	800b883a 	mov	r5,r16
 4009088:	d9c00015 	stw	r7,0(sp)
 400908c:	4008b940 	call	4008b94 <memmove>
 4009090:	d9c00017 	ldw	r7,0(sp)
 4009094:	1021883a 	mov	r16,r2
 4009098:	b829883a 	mov	r20,r23
 400909c:	382b883a 	mov	r21,r7
 40090a0:	003f7706 	br	4008e80 <_realloc_r+0x15c>
 40090a4:	90bfff17 	ldw	r2,-4(r18)
 40090a8:	00ffff04 	movi	r3,-4
 40090ac:	10c4703a 	and	r2,r2,r3
 40090b0:	a0a9883a 	add	r20,r20,r2
 40090b4:	ad2d883a 	add	r22,r21,r20
 40090b8:	003f7106 	br	4008e80 <_realloc_r+0x15c>
 40090bc:	81fffe17 	ldw	r7,-8(r16)
 40090c0:	a9cfc83a 	sub	r7,r21,r7
 40090c4:	39000117 	ldw	r4,4(r7)
 40090c8:	214a703a 	and	r5,r4,r5
 40090cc:	003f4d06 	br	4008e04 <_realloc_r+0xe0>
 40090d0:	b0800317 	ldw	r2,12(r22)
 40090d4:	b0c00217 	ldw	r3,8(r22)
 40090d8:	2829883a 	mov	r20,r5
 40090dc:	a96d883a 	add	r22,r21,r5
 40090e0:	18800315 	stw	r2,12(r3)
 40090e4:	10c00215 	stw	r3,8(r2)
 40090e8:	003f6506 	br	4008e80 <_realloc_r+0x15c>
 40090ec:	800b883a 	mov	r5,r16
 40090f0:	9009883a 	mov	r4,r18
 40090f4:	4008b940 	call	4008b94 <memmove>
 40090f8:	003f9c06 	br	4008f6c <_realloc_r+0x248>
 40090fc:	88800404 	addi	r2,r17,16
 4009100:	b8bf4016 	blt	r23,r2,4008e04 <_realloc_r+0xe0>
 4009104:	38800317 	ldw	r2,12(r7)
 4009108:	38c00217 	ldw	r3,8(r7)
 400910c:	a1bfff04 	addi	r6,r20,-4
 4009110:	31000968 	cmpgeui	r4,r6,37
 4009114:	18800315 	stw	r2,12(r3)
 4009118:	10c00215 	stw	r3,8(r2)
 400911c:	3c800204 	addi	r18,r7,8
 4009120:	20003b1e 	bne	r4,zero,4009210 <_realloc_r+0x4ec>
 4009124:	30800530 	cmpltui	r2,r6,20
 4009128:	80c00017 	ldw	r3,0(r16)
 400912c:	1000361e 	bne	r2,zero,4009208 <_realloc_r+0x4e4>
 4009130:	38c00215 	stw	r3,8(r7)
 4009134:	80c00117 	ldw	r3,4(r16)
 4009138:	30800728 	cmpgeui	r2,r6,28
 400913c:	38c00315 	stw	r3,12(r7)
 4009140:	1000401e 	bne	r2,zero,4009244 <_realloc_r+0x520>
 4009144:	80c00217 	ldw	r3,8(r16)
 4009148:	38800404 	addi	r2,r7,16
 400914c:	84000204 	addi	r16,r16,8
 4009150:	10c00015 	stw	r3,0(r2)
 4009154:	80c00117 	ldw	r3,4(r16)
 4009158:	10c00115 	stw	r3,4(r2)
 400915c:	80c00217 	ldw	r3,8(r16)
 4009160:	10c00215 	stw	r3,8(r2)
 4009164:	3c47883a 	add	r3,r7,r17
 4009168:	bc45c83a 	sub	r2,r23,r17
 400916c:	e0c00215 	stw	r3,8(fp)
 4009170:	10800054 	ori	r2,r2,1
 4009174:	18800115 	stw	r2,4(r3)
 4009178:	38800117 	ldw	r2,4(r7)
 400917c:	9809883a 	mov	r4,r19
 4009180:	1080004c 	andi	r2,r2,1
 4009184:	1462b03a 	or	r17,r2,r17
 4009188:	3c400115 	stw	r17,4(r7)
 400918c:	400d32c0 	call	400d32c <__malloc_unlock>
 4009190:	003f4f06 	br	4008ed0 <_realloc_r+0x1ac>
 4009194:	80800217 	ldw	r2,8(r16)
 4009198:	31800920 	cmpeqi	r6,r6,36
 400919c:	90800215 	stw	r2,8(r18)
 40091a0:	80800317 	ldw	r2,12(r16)
 40091a4:	90800315 	stw	r2,12(r18)
 40091a8:	81000417 	ldw	r4,16(r16)
 40091ac:	30000f1e 	bne	r6,zero,40091ec <_realloc_r+0x4c8>
 40091b0:	80c00404 	addi	r3,r16,16
 40091b4:	90800404 	addi	r2,r18,16
 40091b8:	003f6706 	br	4008f58 <_realloc_r+0x234>
 40091bc:	2005883a 	mov	r2,r4
 40091c0:	003f2706 	br	4008e60 <_realloc_r+0x13c>
 40091c4:	80800217 	ldw	r2,8(r16)
 40091c8:	31800920 	cmpeqi	r6,r6,36
 40091cc:	38800415 	stw	r2,16(r7)
 40091d0:	80800317 	ldw	r2,12(r16)
 40091d4:	38800515 	stw	r2,20(r7)
 40091d8:	80c00417 	ldw	r3,16(r16)
 40091dc:	3000121e 	bne	r6,zero,4009228 <_realloc_r+0x504>
 40091e0:	38800604 	addi	r2,r7,24
 40091e4:	84000404 	addi	r16,r16,16
 40091e8:	003f1d06 	br	4008e60 <_realloc_r+0x13c>
 40091ec:	91000415 	stw	r4,16(r18)
 40091f0:	81000517 	ldw	r4,20(r16)
 40091f4:	80c00604 	addi	r3,r16,24
 40091f8:	90800604 	addi	r2,r18,24
 40091fc:	91000515 	stw	r4,20(r18)
 4009200:	81000617 	ldw	r4,24(r16)
 4009204:	003f5406 	br	4008f58 <_realloc_r+0x234>
 4009208:	9005883a 	mov	r2,r18
 400920c:	003fd006 	br	4009150 <_realloc_r+0x42c>
 4009210:	800b883a 	mov	r5,r16
 4009214:	9009883a 	mov	r4,r18
 4009218:	d9c00015 	stw	r7,0(sp)
 400921c:	4008b940 	call	4008b94 <memmove>
 4009220:	d9c00017 	ldw	r7,0(sp)
 4009224:	003fcf06 	br	4009164 <_realloc_r+0x440>
 4009228:	84000604 	addi	r16,r16,24
 400922c:	38c00615 	stw	r3,24(r7)
 4009230:	80ffff17 	ldw	r3,-4(r16)
 4009234:	38800804 	addi	r2,r7,32
 4009238:	38c00715 	stw	r3,28(r7)
 400923c:	80c00017 	ldw	r3,0(r16)
 4009240:	003f0706 	br	4008e60 <_realloc_r+0x13c>
 4009244:	80800217 	ldw	r2,8(r16)
 4009248:	31800920 	cmpeqi	r6,r6,36
 400924c:	38800415 	stw	r2,16(r7)
 4009250:	80800317 	ldw	r2,12(r16)
 4009254:	38800515 	stw	r2,20(r7)
 4009258:	80c00417 	ldw	r3,16(r16)
 400925c:	3000031e 	bne	r6,zero,400926c <_realloc_r+0x548>
 4009260:	38800604 	addi	r2,r7,24
 4009264:	84000404 	addi	r16,r16,16
 4009268:	003fb906 	br	4009150 <_realloc_r+0x42c>
 400926c:	84000604 	addi	r16,r16,24
 4009270:	38c00615 	stw	r3,24(r7)
 4009274:	80ffff17 	ldw	r3,-4(r16)
 4009278:	38800804 	addi	r2,r7,32
 400927c:	38c00715 	stw	r3,28(r7)
 4009280:	80c00017 	ldw	r3,0(r16)
 4009284:	003fb206 	br	4009150 <_realloc_r+0x42c>

04009288 <strcmp>:
 4009288:	2144b03a 	or	r2,r4,r5
 400928c:	108000cc 	andi	r2,r2,3
 4009290:	1000141e 	bne	r2,zero,40092e4 <strcmp+0x5c>
 4009294:	20800017 	ldw	r2,0(r4)
 4009298:	28c00017 	ldw	r3,0(r5)
 400929c:	10c0111e 	bne	r2,r3,40092e4 <strcmp+0x5c>
 40092a0:	01ffbff4 	movhi	r7,65279
 40092a4:	01a02074 	movhi	r6,32897
 40092a8:	39ffbfc4 	addi	r7,r7,-257
 40092ac:	31a02004 	addi	r6,r6,-32640
 40092b0:	00000306 	br	40092c0 <strcmp+0x38>
 40092b4:	20800017 	ldw	r2,0(r4)
 40092b8:	28c00017 	ldw	r3,0(r5)
 40092bc:	10c0091e 	bne	r2,r3,40092e4 <strcmp+0x5c>
 40092c0:	11c7883a 	add	r3,r2,r7
 40092c4:	0084303a 	nor	r2,zero,r2
 40092c8:	1884703a 	and	r2,r3,r2
 40092cc:	1184703a 	and	r2,r2,r6
 40092d0:	21000104 	addi	r4,r4,4
 40092d4:	29400104 	addi	r5,r5,4
 40092d8:	103ff626 	beq	r2,zero,40092b4 <strcmp+0x2c>
 40092dc:	0005883a 	mov	r2,zero
 40092e0:	f800283a 	ret
 40092e4:	20c00003 	ldbu	r3,0(r4)
 40092e8:	18803fcc 	andi	r2,r3,255
 40092ec:	1080201c 	xori	r2,r2,128
 40092f0:	10bfe004 	addi	r2,r2,-128
 40092f4:	1000071e 	bne	r2,zero,4009314 <strcmp+0x8c>
 40092f8:	00000a06 	br	4009324 <strcmp+0x9c>
 40092fc:	20c00003 	ldbu	r3,0(r4)
 4009300:	29400044 	addi	r5,r5,1
 4009304:	18803fcc 	andi	r2,r3,255
 4009308:	1080201c 	xori	r2,r2,128
 400930c:	10bfe004 	addi	r2,r2,-128
 4009310:	10000726 	beq	r2,zero,4009330 <strcmp+0xa8>
 4009314:	29800007 	ldb	r6,0(r5)
 4009318:	21000044 	addi	r4,r4,1
 400931c:	30bff726 	beq	r6,r2,40092fc <strcmp+0x74>
 4009320:	18803fcc 	andi	r2,r3,255
 4009324:	28c00003 	ldbu	r3,0(r5)
 4009328:	10c5c83a 	sub	r2,r2,r3
 400932c:	f800283a 	ret
 4009330:	28c00003 	ldbu	r3,0(r5)
 4009334:	0005883a 	mov	r2,zero
 4009338:	10c5c83a 	sub	r2,r2,r3
 400933c:	f800283a 	ret

04009340 <_vfiprintf_r>:
 4009340:	4006bac1 	jmpi	4006bac <___vfiprintf_internal_r>

04009344 <__swbuf_r>:
 4009344:	defffb04 	addi	sp,sp,-20
 4009348:	dcc00315 	stw	r19,12(sp)
 400934c:	dc400115 	stw	r17,4(sp)
 4009350:	dc000015 	stw	r16,0(sp)
 4009354:	dfc00415 	stw	ra,16(sp)
 4009358:	dc800215 	stw	r18,8(sp)
 400935c:	2027883a 	mov	r19,r4
 4009360:	2823883a 	mov	r17,r5
 4009364:	3021883a 	mov	r16,r6
 4009368:	20000226 	beq	r4,zero,4009374 <__swbuf_r+0x30>
 400936c:	20800e17 	ldw	r2,56(r4)
 4009370:	10003e26 	beq	r2,zero,400946c <__swbuf_r+0x128>
 4009374:	80800617 	ldw	r2,24(r16)
 4009378:	80c0030b 	ldhu	r3,12(r16)
 400937c:	80800215 	stw	r2,8(r16)
 4009380:	1880020c 	andi	r2,r3,8
 4009384:	10001f26 	beq	r2,zero,4009404 <__swbuf_r+0xc0>
 4009388:	80800417 	ldw	r2,16(r16)
 400938c:	10001d26 	beq	r2,zero,4009404 <__swbuf_r+0xc0>
 4009390:	1948000c 	andi	r5,r3,8192
 4009394:	8c803fcc 	andi	r18,r17,255
 4009398:	28002326 	beq	r5,zero,4009428 <__swbuf_r+0xe4>
 400939c:	80c00017 	ldw	r3,0(r16)
 40093a0:	81000517 	ldw	r4,20(r16)
 40093a4:	1885c83a 	sub	r2,r3,r2
 40093a8:	1100290e 	bge	r2,r4,4009450 <__swbuf_r+0x10c>
 40093ac:	10800044 	addi	r2,r2,1
 40093b0:	81400217 	ldw	r5,8(r16)
 40093b4:	19000044 	addi	r4,r3,1
 40093b8:	81000015 	stw	r4,0(r16)
 40093bc:	297fffc4 	addi	r5,r5,-1
 40093c0:	81400215 	stw	r5,8(r16)
 40093c4:	1c400005 	stb	r17,0(r3)
 40093c8:	80c00517 	ldw	r3,20(r16)
 40093cc:	18802926 	beq	r3,r2,4009474 <__swbuf_r+0x130>
 40093d0:	8080030b 	ldhu	r2,12(r16)
 40093d4:	1080004c 	andi	r2,r2,1
 40093d8:	10000226 	beq	r2,zero,40093e4 <__swbuf_r+0xa0>
 40093dc:	90800298 	cmpnei	r2,r18,10
 40093e0:	10002426 	beq	r2,zero,4009474 <__swbuf_r+0x130>
 40093e4:	9005883a 	mov	r2,r18
 40093e8:	dfc00417 	ldw	ra,16(sp)
 40093ec:	dcc00317 	ldw	r19,12(sp)
 40093f0:	dc800217 	ldw	r18,8(sp)
 40093f4:	dc400117 	ldw	r17,4(sp)
 40093f8:	dc000017 	ldw	r16,0(sp)
 40093fc:	dec00504 	addi	sp,sp,20
 4009400:	f800283a 	ret
 4009404:	800b883a 	mov	r5,r16
 4009408:	9809883a 	mov	r4,r19
 400940c:	40025440 	call	4002544 <__swsetup_r>
 4009410:	10001c1e 	bne	r2,zero,4009484 <__swbuf_r+0x140>
 4009414:	80c0030b 	ldhu	r3,12(r16)
 4009418:	80800417 	ldw	r2,16(r16)
 400941c:	8c803fcc 	andi	r18,r17,255
 4009420:	1948000c 	andi	r5,r3,8192
 4009424:	283fdd1e 	bne	r5,zero,400939c <__swbuf_r+0x58>
 4009428:	81001917 	ldw	r4,100(r16)
 400942c:	18c80014 	ori	r3,r3,8192
 4009430:	0177ffc4 	movi	r5,-8193
 4009434:	2148703a 	and	r4,r4,r5
 4009438:	80c0030d 	sth	r3,12(r16)
 400943c:	80c00017 	ldw	r3,0(r16)
 4009440:	81001915 	stw	r4,100(r16)
 4009444:	81000517 	ldw	r4,20(r16)
 4009448:	1885c83a 	sub	r2,r3,r2
 400944c:	113fd716 	blt	r2,r4,40093ac <__swbuf_r+0x68>
 4009450:	800b883a 	mov	r5,r16
 4009454:	9809883a 	mov	r4,r19
 4009458:	40042140 	call	4004214 <_fflush_r>
 400945c:	1000091e 	bne	r2,zero,4009484 <__swbuf_r+0x140>
 4009460:	80c00017 	ldw	r3,0(r16)
 4009464:	00800044 	movi	r2,1
 4009468:	003fd106 	br	40093b0 <__swbuf_r+0x6c>
 400946c:	40045980 	call	4004598 <__sinit>
 4009470:	003fc006 	br	4009374 <__swbuf_r+0x30>
 4009474:	800b883a 	mov	r5,r16
 4009478:	9809883a 	mov	r4,r19
 400947c:	40042140 	call	4004214 <_fflush_r>
 4009480:	103fd826 	beq	r2,zero,40093e4 <__swbuf_r+0xa0>
 4009484:	04bfffc4 	movi	r18,-1
 4009488:	003fd606 	br	40093e4 <__swbuf_r+0xa0>

0400948c <__swbuf>:
 400948c:	00c10074 	movhi	r3,1025
 4009490:	2005883a 	mov	r2,r4
 4009494:	19064817 	ldw	r4,6432(r3)
 4009498:	280d883a 	mov	r6,r5
 400949c:	100b883a 	mov	r5,r2
 40094a0:	40093441 	jmpi	4009344 <__swbuf_r>

040094a4 <_wcrtomb_r>:
 40094a4:	defffa04 	addi	sp,sp,-24
 40094a8:	dc400415 	stw	r17,16(sp)
 40094ac:	dc000315 	stw	r16,12(sp)
 40094b0:	00810074 	movhi	r2,1025
 40094b4:	dfc00515 	stw	ra,20(sp)
 40094b8:	10819717 	ldw	r2,1628(r2)
 40094bc:	2023883a 	mov	r17,r4
 40094c0:	3821883a 	mov	r16,r7
 40094c4:	28000826 	beq	r5,zero,40094e8 <_wcrtomb_r+0x44>
 40094c8:	103ee83a 	callr	r2
 40094cc:	10ffffd8 	cmpnei	r3,r2,-1
 40094d0:	18000a26 	beq	r3,zero,40094fc <_wcrtomb_r+0x58>
 40094d4:	dfc00517 	ldw	ra,20(sp)
 40094d8:	dc400417 	ldw	r17,16(sp)
 40094dc:	dc000317 	ldw	r16,12(sp)
 40094e0:	dec00604 	addi	sp,sp,24
 40094e4:	f800283a 	ret
 40094e8:	000d883a 	mov	r6,zero
 40094ec:	d9400084 	addi	r5,sp,2
 40094f0:	103ee83a 	callr	r2
 40094f4:	10ffffd8 	cmpnei	r3,r2,-1
 40094f8:	183ff61e 	bne	r3,zero,40094d4 <_wcrtomb_r+0x30>
 40094fc:	00802284 	movi	r2,138
 4009500:	80000015 	stw	zero,0(r16)
 4009504:	88800015 	stw	r2,0(r17)
 4009508:	00bfffc4 	movi	r2,-1
 400950c:	003ff106 	br	40094d4 <_wcrtomb_r+0x30>

04009510 <wcrtomb>:
 4009510:	defffa04 	addi	sp,sp,-24
 4009514:	00c10074 	movhi	r3,1025
 4009518:	dc400415 	stw	r17,16(sp)
 400951c:	dc000315 	stw	r16,12(sp)
 4009520:	1c464817 	ldw	r17,6432(r3)
 4009524:	dfc00515 	stw	ra,20(sp)
 4009528:	00c10074 	movhi	r3,1025
 400952c:	18c19717 	ldw	r3,1628(r3)
 4009530:	3021883a 	mov	r16,r6
 4009534:	20000c26 	beq	r4,zero,4009568 <wcrtomb+0x58>
 4009538:	280d883a 	mov	r6,r5
 400953c:	800f883a 	mov	r7,r16
 4009540:	200b883a 	mov	r5,r4
 4009544:	8809883a 	mov	r4,r17
 4009548:	183ee83a 	callr	r3
 400954c:	10ffffd8 	cmpnei	r3,r2,-1
 4009550:	18000c26 	beq	r3,zero,4009584 <wcrtomb+0x74>
 4009554:	dfc00517 	ldw	ra,20(sp)
 4009558:	dc400417 	ldw	r17,16(sp)
 400955c:	dc000317 	ldw	r16,12(sp)
 4009560:	dec00604 	addi	sp,sp,24
 4009564:	f800283a 	ret
 4009568:	300f883a 	mov	r7,r6
 400956c:	d9400084 	addi	r5,sp,2
 4009570:	000d883a 	mov	r6,zero
 4009574:	8809883a 	mov	r4,r17
 4009578:	183ee83a 	callr	r3
 400957c:	10ffffd8 	cmpnei	r3,r2,-1
 4009580:	183ff41e 	bne	r3,zero,4009554 <wcrtomb+0x44>
 4009584:	00802284 	movi	r2,138
 4009588:	80000015 	stw	zero,0(r16)
 400958c:	88800015 	stw	r2,0(r17)
 4009590:	00bfffc4 	movi	r2,-1
 4009594:	003fef06 	br	4009554 <wcrtomb+0x44>

04009598 <_wctomb_r>:
 4009598:	00810074 	movhi	r2,1025
 400959c:	10819717 	ldw	r2,1628(r2)
 40095a0:	1000683a 	jmp	r2

040095a4 <__ascii_wctomb>:
 40095a4:	28000926 	beq	r5,zero,40095cc <__ascii_wctomb+0x28>
 40095a8:	30804030 	cmpltui	r2,r6,256
 40095ac:	10000326 	beq	r2,zero,40095bc <__ascii_wctomb+0x18>
 40095b0:	29800005 	stb	r6,0(r5)
 40095b4:	00800044 	movi	r2,1
 40095b8:	f800283a 	ret
 40095bc:	00802284 	movi	r2,138
 40095c0:	20800015 	stw	r2,0(r4)
 40095c4:	00bfffc4 	movi	r2,-1
 40095c8:	f800283a 	ret
 40095cc:	0005883a 	mov	r2,zero
 40095d0:	f800283a 	ret

040095d4 <abort>:
 40095d4:	deffff04 	addi	sp,sp,-4
 40095d8:	01000184 	movi	r4,6
 40095dc:	dfc00015 	stw	ra,0(sp)
 40095e0:	400984c0 	call	400984c <raise>
 40095e4:	01000044 	movi	r4,1
 40095e8:	400cd040 	call	400cd04 <_exit>

040095ec <_init_signal_r.part.0>:
 40095ec:	defffe04 	addi	sp,sp,-8
 40095f0:	01402004 	movi	r5,128
 40095f4:	dc000015 	stw	r16,0(sp)
 40095f8:	dfc00115 	stw	ra,4(sp)
 40095fc:	2021883a 	mov	r16,r4
 4009600:	4004d300 	call	4004d30 <_malloc_r>
 4009604:	8080b715 	stw	r2,732(r16)
 4009608:	10000926 	beq	r2,zero,4009630 <_init_signal_r.part.0+0x44>
 400960c:	10c02004 	addi	r3,r2,128
 4009610:	10000015 	stw	zero,0(r2)
 4009614:	10800104 	addi	r2,r2,4
 4009618:	10fffd1e 	bne	r2,r3,4009610 <_init_signal_r.part.0+0x24>
 400961c:	0005883a 	mov	r2,zero
 4009620:	dfc00117 	ldw	ra,4(sp)
 4009624:	dc000017 	ldw	r16,0(sp)
 4009628:	dec00204 	addi	sp,sp,8
 400962c:	f800283a 	ret
 4009630:	00bfffc4 	movi	r2,-1
 4009634:	003ffa06 	br	4009620 <_init_signal_r.part.0+0x34>

04009638 <_init_signal_r>:
 4009638:	2080b717 	ldw	r2,732(r4)
 400963c:	10000226 	beq	r2,zero,4009648 <_init_signal_r+0x10>
 4009640:	0005883a 	mov	r2,zero
 4009644:	f800283a 	ret
 4009648:	40095ec1 	jmpi	40095ec <_init_signal_r.part.0>

0400964c <_signal_r>:
 400964c:	defffc04 	addi	sp,sp,-16
 4009650:	dc000215 	stw	r16,8(sp)
 4009654:	dfc00315 	stw	ra,12(sp)
 4009658:	28800830 	cmpltui	r2,r5,32
 400965c:	2021883a 	mov	r16,r4
 4009660:	10000a26 	beq	r2,zero,400968c <_signal_r+0x40>
 4009664:	2080b717 	ldw	r2,732(r4)
 4009668:	10000f26 	beq	r2,zero,40096a8 <_signal_r+0x5c>
 400966c:	280a90ba 	slli	r5,r5,2
 4009670:	114b883a 	add	r5,r2,r5
 4009674:	28800017 	ldw	r2,0(r5)
 4009678:	29800015 	stw	r6,0(r5)
 400967c:	dfc00317 	ldw	ra,12(sp)
 4009680:	dc000217 	ldw	r16,8(sp)
 4009684:	dec00404 	addi	sp,sp,16
 4009688:	f800283a 	ret
 400968c:	00800584 	movi	r2,22
 4009690:	20800015 	stw	r2,0(r4)
 4009694:	00bfffc4 	movi	r2,-1
 4009698:	dfc00317 	ldw	ra,12(sp)
 400969c:	dc000217 	ldw	r16,8(sp)
 40096a0:	dec00404 	addi	sp,sp,16
 40096a4:	f800283a 	ret
 40096a8:	d9800115 	stw	r6,4(sp)
 40096ac:	d9400015 	stw	r5,0(sp)
 40096b0:	40095ec0 	call	40095ec <_init_signal_r.part.0>
 40096b4:	1000041e 	bne	r2,zero,40096c8 <_signal_r+0x7c>
 40096b8:	8080b717 	ldw	r2,732(r16)
 40096bc:	d9800117 	ldw	r6,4(sp)
 40096c0:	d9400017 	ldw	r5,0(sp)
 40096c4:	003fe906 	br	400966c <_signal_r+0x20>
 40096c8:	00bfffc4 	movi	r2,-1
 40096cc:	003feb06 	br	400967c <_signal_r+0x30>

040096d0 <_raise_r>:
 40096d0:	28800830 	cmpltui	r2,r5,32
 40096d4:	10002b26 	beq	r2,zero,4009784 <_raise_r+0xb4>
 40096d8:	2080b717 	ldw	r2,732(r4)
 40096dc:	defffd04 	addi	sp,sp,-12
 40096e0:	dc000115 	stw	r16,4(sp)
 40096e4:	dfc00215 	stw	ra,8(sp)
 40096e8:	2821883a 	mov	r16,r5
 40096ec:	10001026 	beq	r2,zero,4009730 <_raise_r+0x60>
 40096f0:	280690ba 	slli	r3,r5,2
 40096f4:	10c5883a 	add	r2,r2,r3
 40096f8:	10c00017 	ldw	r3,0(r2)
 40096fc:	18000c26 	beq	r3,zero,4009730 <_raise_r+0x60>
 4009700:	19400060 	cmpeqi	r5,r3,1
 4009704:	28001a1e 	bne	r5,zero,4009770 <_raise_r+0xa0>
 4009708:	197fffd8 	cmpnei	r5,r3,-1
 400970c:	28001126 	beq	r5,zero,4009754 <_raise_r+0x84>
 4009710:	10000015 	stw	zero,0(r2)
 4009714:	8009883a 	mov	r4,r16
 4009718:	183ee83a 	callr	r3
 400971c:	0005883a 	mov	r2,zero
 4009720:	dfc00217 	ldw	ra,8(sp)
 4009724:	dc000117 	ldw	r16,4(sp)
 4009728:	dec00304 	addi	sp,sp,12
 400972c:	f800283a 	ret
 4009730:	d9000015 	stw	r4,0(sp)
 4009734:	40099000 	call	4009900 <_getpid_r>
 4009738:	d9000017 	ldw	r4,0(sp)
 400973c:	800d883a 	mov	r6,r16
 4009740:	100b883a 	mov	r5,r2
 4009744:	dfc00217 	ldw	ra,8(sp)
 4009748:	dc000117 	ldw	r16,4(sp)
 400974c:	dec00304 	addi	sp,sp,12
 4009750:	40098a01 	jmpi	40098a0 <_kill_r>
 4009754:	00800584 	movi	r2,22
 4009758:	20800015 	stw	r2,0(r4)
 400975c:	00800044 	movi	r2,1
 4009760:	dfc00217 	ldw	ra,8(sp)
 4009764:	dc000117 	ldw	r16,4(sp)
 4009768:	dec00304 	addi	sp,sp,12
 400976c:	f800283a 	ret
 4009770:	0005883a 	mov	r2,zero
 4009774:	dfc00217 	ldw	ra,8(sp)
 4009778:	dc000117 	ldw	r16,4(sp)
 400977c:	dec00304 	addi	sp,sp,12
 4009780:	f800283a 	ret
 4009784:	00800584 	movi	r2,22
 4009788:	20800015 	stw	r2,0(r4)
 400978c:	00bfffc4 	movi	r2,-1
 4009790:	f800283a 	ret

04009794 <__sigtramp_r>:
 4009794:	28800830 	cmpltui	r2,r5,32
 4009798:	10002a26 	beq	r2,zero,4009844 <__sigtramp_r+0xb0>
 400979c:	2080b717 	ldw	r2,732(r4)
 40097a0:	defffd04 	addi	sp,sp,-12
 40097a4:	dc400115 	stw	r17,4(sp)
 40097a8:	dfc00215 	stw	ra,8(sp)
 40097ac:	2023883a 	mov	r17,r4
 40097b0:	10001526 	beq	r2,zero,4009808 <__sigtramp_r+0x74>
 40097b4:	280690ba 	slli	r3,r5,2
 40097b8:	10c5883a 	add	r2,r2,r3
 40097bc:	10c00017 	ldw	r3,0(r2)
 40097c0:	18000c26 	beq	r3,zero,40097f4 <__sigtramp_r+0x60>
 40097c4:	193fffe0 	cmpeqi	r4,r3,-1
 40097c8:	20001a1e 	bne	r4,zero,4009834 <__sigtramp_r+0xa0>
 40097cc:	19000060 	cmpeqi	r4,r3,1
 40097d0:	2000131e 	bne	r4,zero,4009820 <__sigtramp_r+0x8c>
 40097d4:	10000015 	stw	zero,0(r2)
 40097d8:	2809883a 	mov	r4,r5
 40097dc:	183ee83a 	callr	r3
 40097e0:	0005883a 	mov	r2,zero
 40097e4:	dfc00217 	ldw	ra,8(sp)
 40097e8:	dc400117 	ldw	r17,4(sp)
 40097ec:	dec00304 	addi	sp,sp,12
 40097f0:	f800283a 	ret
 40097f4:	00800044 	movi	r2,1
 40097f8:	dfc00217 	ldw	ra,8(sp)
 40097fc:	dc400117 	ldw	r17,4(sp)
 4009800:	dec00304 	addi	sp,sp,12
 4009804:	f800283a 	ret
 4009808:	d9400015 	stw	r5,0(sp)
 400980c:	40095ec0 	call	40095ec <_init_signal_r.part.0>
 4009810:	10000a1e 	bne	r2,zero,400983c <__sigtramp_r+0xa8>
 4009814:	8880b717 	ldw	r2,732(r17)
 4009818:	d9400017 	ldw	r5,0(sp)
 400981c:	003fe506 	br	40097b4 <__sigtramp_r+0x20>
 4009820:	008000c4 	movi	r2,3
 4009824:	dfc00217 	ldw	ra,8(sp)
 4009828:	dc400117 	ldw	r17,4(sp)
 400982c:	dec00304 	addi	sp,sp,12
 4009830:	f800283a 	ret
 4009834:	00800084 	movi	r2,2
 4009838:	003fea06 	br	40097e4 <__sigtramp_r+0x50>
 400983c:	00bfffc4 	movi	r2,-1
 4009840:	003fe806 	br	40097e4 <__sigtramp_r+0x50>
 4009844:	00bfffc4 	movi	r2,-1
 4009848:	f800283a 	ret

0400984c <raise>:
 400984c:	00810074 	movhi	r2,1025
 4009850:	200b883a 	mov	r5,r4
 4009854:	11064817 	ldw	r4,6432(r2)
 4009858:	40096d01 	jmpi	40096d0 <_raise_r>

0400985c <signal>:
 400985c:	00c10074 	movhi	r3,1025
 4009860:	2005883a 	mov	r2,r4
 4009864:	19064817 	ldw	r4,6432(r3)
 4009868:	280d883a 	mov	r6,r5
 400986c:	100b883a 	mov	r5,r2
 4009870:	400964c1 	jmpi	400964c <_signal_r>

04009874 <_init_signal>:
 4009874:	00810074 	movhi	r2,1025
 4009878:	11064817 	ldw	r4,6432(r2)
 400987c:	2080b717 	ldw	r2,732(r4)
 4009880:	10000226 	beq	r2,zero,400988c <_init_signal+0x18>
 4009884:	0005883a 	mov	r2,zero
 4009888:	f800283a 	ret
 400988c:	40095ec1 	jmpi	40095ec <_init_signal_r.part.0>

04009890 <__sigtramp>:
 4009890:	00810074 	movhi	r2,1025
 4009894:	200b883a 	mov	r5,r4
 4009898:	11064817 	ldw	r4,6432(r2)
 400989c:	40097941 	jmpi	4009794 <__sigtramp_r>

040098a0 <_kill_r>:
 40098a0:	2807883a 	mov	r3,r5
 40098a4:	defffe04 	addi	sp,sp,-8
 40098a8:	dc000015 	stw	r16,0(sp)
 40098ac:	00810074 	movhi	r2,1025
 40098b0:	300b883a 	mov	r5,r6
 40098b4:	2021883a 	mov	r16,r4
 40098b8:	1809883a 	mov	r4,r3
 40098bc:	dfc00115 	stw	ra,4(sp)
 40098c0:	100d5915 	stw	zero,13668(r2)
 40098c4:	400cf640 	call	400cf64 <kill>
 40098c8:	10ffffd8 	cmpnei	r3,r2,-1
 40098cc:	18000426 	beq	r3,zero,40098e0 <_kill_r+0x40>
 40098d0:	dfc00117 	ldw	ra,4(sp)
 40098d4:	dc000017 	ldw	r16,0(sp)
 40098d8:	dec00204 	addi	sp,sp,8
 40098dc:	f800283a 	ret
 40098e0:	00c10074 	movhi	r3,1025
 40098e4:	18cd5917 	ldw	r3,13668(r3)
 40098e8:	183ff926 	beq	r3,zero,40098d0 <_kill_r+0x30>
 40098ec:	80c00015 	stw	r3,0(r16)
 40098f0:	dfc00117 	ldw	ra,4(sp)
 40098f4:	dc000017 	ldw	r16,0(sp)
 40098f8:	dec00204 	addi	sp,sp,8
 40098fc:	f800283a 	ret

04009900 <_getpid_r>:
 4009900:	400ce281 	jmpi	400ce28 <getpid>

04009904 <__udivdi3>:
 4009904:	defff504 	addi	sp,sp,-44
 4009908:	dcc00415 	stw	r19,16(sp)
 400990c:	dc000115 	stw	r16,4(sp)
 4009910:	dfc00a15 	stw	ra,40(sp)
 4009914:	df000915 	stw	fp,36(sp)
 4009918:	ddc00815 	stw	r23,32(sp)
 400991c:	dd800715 	stw	r22,28(sp)
 4009920:	dd400615 	stw	r21,24(sp)
 4009924:	dd000515 	stw	r20,20(sp)
 4009928:	dc800315 	stw	r18,12(sp)
 400992c:	dc400215 	stw	r17,8(sp)
 4009930:	2027883a 	mov	r19,r4
 4009934:	2821883a 	mov	r16,r5
 4009938:	3800411e 	bne	r7,zero,4009a40 <__udivdi3+0x13c>
 400993c:	3829883a 	mov	r20,r7
 4009940:	3023883a 	mov	r17,r6
 4009944:	2025883a 	mov	r18,r4
 4009948:	29805d2e 	bgeu	r5,r6,4009ac0 <__udivdi3+0x1bc>
 400994c:	00bfffd4 	movui	r2,65535
 4009950:	282b883a 	mov	r21,r5
 4009954:	1180a02e 	bgeu	r2,r6,4009bd8 <__udivdi3+0x2d4>
 4009958:	00804034 	movhi	r2,256
 400995c:	30813636 	bltu	r6,r2,4009e38 <__udivdi3+0x534>
 4009960:	3006d63a 	srli	r3,r6,24
 4009964:	05000604 	movi	r20,24
 4009968:	00810074 	movhi	r2,1025
 400996c:	1885883a 	add	r2,r3,r2
 4009970:	10bf0603 	ldbu	r2,-1000(r2)
 4009974:	00c00804 	movi	r3,32
 4009978:	1505883a 	add	r2,r2,r20
 400997c:	1889c83a 	sub	r4,r3,r2
 4009980:	18800526 	beq	r3,r2,4009998 <__udivdi3+0x94>
 4009984:	8120983a 	sll	r16,r16,r4
 4009988:	9884d83a 	srl	r2,r19,r2
 400998c:	3122983a 	sll	r17,r6,r4
 4009990:	9924983a 	sll	r18,r19,r4
 4009994:	142ab03a 	or	r21,r2,r16
 4009998:	882cd43a 	srli	r22,r17,16
 400999c:	a809883a 	mov	r4,r21
 40099a0:	8d3fffcc 	andi	r20,r17,65535
 40099a4:	b00b883a 	mov	r5,r22
 40099a8:	400a5200 	call	400a520 <__umodsi3>
 40099ac:	a809883a 	mov	r4,r21
 40099b0:	b00b883a 	mov	r5,r22
 40099b4:	1027883a 	mov	r19,r2
 40099b8:	400a4bc0 	call	400a4bc <__udivsi3>
 40099bc:	9826943a 	slli	r19,r19,16
 40099c0:	9008d43a 	srli	r4,r18,16
 40099c4:	1021883a 	mov	r16,r2
 40099c8:	a085383a 	mul	r2,r20,r2
 40099cc:	9908b03a 	or	r4,r19,r4
 40099d0:	2080052e 	bgeu	r4,r2,40099e8 <__udivdi3+0xe4>
 40099d4:	2449883a 	add	r4,r4,r17
 40099d8:	80ffffc4 	addi	r3,r16,-1
 40099dc:	24400136 	bltu	r4,r17,40099e4 <__udivdi3+0xe0>
 40099e0:	20812636 	bltu	r4,r2,4009e7c <__udivdi3+0x578>
 40099e4:	1821883a 	mov	r16,r3
 40099e8:	20a7c83a 	sub	r19,r4,r2
 40099ec:	9809883a 	mov	r4,r19
 40099f0:	b00b883a 	mov	r5,r22
 40099f4:	400a5200 	call	400a520 <__umodsi3>
 40099f8:	9809883a 	mov	r4,r19
 40099fc:	b00b883a 	mov	r5,r22
 4009a00:	1027883a 	mov	r19,r2
 4009a04:	9826943a 	slli	r19,r19,16
 4009a08:	400a4bc0 	call	400a4bc <__udivsi3>
 4009a0c:	a0a9383a 	mul	r20,r20,r2
 4009a10:	94bfffcc 	andi	r18,r18,65535
 4009a14:	9ca4b03a 	or	r18,r19,r18
 4009a18:	9500052e 	bgeu	r18,r20,4009a30 <__udivdi3+0x12c>
 4009a1c:	8ca5883a 	add	r18,r17,r18
 4009a20:	10ffffc4 	addi	r3,r2,-1
 4009a24:	94400136 	bltu	r18,r17,4009a2c <__udivdi3+0x128>
 4009a28:	95011236 	bltu	r18,r20,4009e74 <__udivdi3+0x570>
 4009a2c:	1805883a 	mov	r2,r3
 4009a30:	8020943a 	slli	r16,r16,16
 4009a34:	0007883a 	mov	r3,zero
 4009a38:	8084b03a 	or	r2,r16,r2
 4009a3c:	00000306 	br	4009a4c <__udivdi3+0x148>
 4009a40:	29c00e2e 	bgeu	r5,r7,4009a7c <__udivdi3+0x178>
 4009a44:	0007883a 	mov	r3,zero
 4009a48:	0005883a 	mov	r2,zero
 4009a4c:	dfc00a17 	ldw	ra,40(sp)
 4009a50:	df000917 	ldw	fp,36(sp)
 4009a54:	ddc00817 	ldw	r23,32(sp)
 4009a58:	dd800717 	ldw	r22,28(sp)
 4009a5c:	dd400617 	ldw	r21,24(sp)
 4009a60:	dd000517 	ldw	r20,20(sp)
 4009a64:	dcc00417 	ldw	r19,16(sp)
 4009a68:	dc800317 	ldw	r18,12(sp)
 4009a6c:	dc400217 	ldw	r17,8(sp)
 4009a70:	dc000117 	ldw	r16,4(sp)
 4009a74:	dec00b04 	addi	sp,sp,44
 4009a78:	f800283a 	ret
 4009a7c:	00bfffd4 	movui	r2,65535
 4009a80:	11c05a2e 	bgeu	r2,r7,4009bec <__udivdi3+0x2e8>
 4009a84:	00804034 	movhi	r2,256
 4009a88:	3880dd36 	bltu	r7,r2,4009e00 <__udivdi3+0x4fc>
 4009a8c:	3806d63a 	srli	r3,r7,24
 4009a90:	01000604 	movi	r4,24
 4009a94:	00810074 	movhi	r2,1025
 4009a98:	1885883a 	add	r2,r3,r2
 4009a9c:	10ff0603 	ldbu	r3,-1000(r2)
 4009aa0:	00800804 	movi	r2,32
 4009aa4:	1907883a 	add	r3,r3,r4
 4009aa8:	10ebc83a 	sub	r21,r2,r3
 4009aac:	10c0861e 	bne	r2,r3,4009cc8 <__udivdi3+0x3c4>
 4009ab0:	3c00d836 	bltu	r7,r16,4009e14 <__udivdi3+0x510>
 4009ab4:	9985403a 	cmpgeu	r2,r19,r6
 4009ab8:	0007883a 	mov	r3,zero
 4009abc:	003fe306 	br	4009a4c <__udivdi3+0x148>
 4009ac0:	3000041e 	bne	r6,zero,4009ad4 <__udivdi3+0x1d0>
 4009ac4:	000b883a 	mov	r5,zero
 4009ac8:	01000044 	movi	r4,1
 4009acc:	400a4bc0 	call	400a4bc <__udivsi3>
 4009ad0:	1023883a 	mov	r17,r2
 4009ad4:	00bfffd4 	movui	r2,65535
 4009ad8:	14403a2e 	bgeu	r2,r17,4009bc4 <__udivdi3+0x2c0>
 4009adc:	00804034 	movhi	r2,256
 4009ae0:	8880d236 	bltu	r17,r2,4009e2c <__udivdi3+0x528>
 4009ae4:	8806d63a 	srli	r3,r17,24
 4009ae8:	05000604 	movi	r20,24
 4009aec:	00810074 	movhi	r2,1025
 4009af0:	1885883a 	add	r2,r3,r2
 4009af4:	10bf0603 	ldbu	r2,-1000(r2)
 4009af8:	00c00804 	movi	r3,32
 4009afc:	1505883a 	add	r2,r2,r20
 4009b00:	188dc83a 	sub	r6,r3,r2
 4009b04:	18803e1e 	bne	r3,r2,4009c00 <__udivdi3+0x2fc>
 4009b08:	882ad43a 	srli	r21,r17,16
 4009b0c:	8461c83a 	sub	r16,r16,r17
 4009b10:	8cffffcc 	andi	r19,r17,65535
 4009b14:	00c00044 	movi	r3,1
 4009b18:	8009883a 	mov	r4,r16
 4009b1c:	a80b883a 	mov	r5,r21
 4009b20:	d8c00015 	stw	r3,0(sp)
 4009b24:	400a5200 	call	400a520 <__umodsi3>
 4009b28:	8009883a 	mov	r4,r16
 4009b2c:	a80b883a 	mov	r5,r21
 4009b30:	1021883a 	mov	r16,r2
 4009b34:	400a4bc0 	call	400a4bc <__udivsi3>
 4009b38:	8020943a 	slli	r16,r16,16
 4009b3c:	9008d43a 	srli	r4,r18,16
 4009b40:	1029883a 	mov	r20,r2
 4009b44:	14c5383a 	mul	r2,r2,r19
 4009b48:	8108b03a 	or	r4,r16,r4
 4009b4c:	d8c00017 	ldw	r3,0(sp)
 4009b50:	2080052e 	bgeu	r4,r2,4009b68 <__udivdi3+0x264>
 4009b54:	2449883a 	add	r4,r4,r17
 4009b58:	a17fffc4 	addi	r5,r20,-1
 4009b5c:	24400136 	bltu	r4,r17,4009b64 <__udivdi3+0x260>
 4009b60:	2080c936 	bltu	r4,r2,4009e88 <__udivdi3+0x584>
 4009b64:	2829883a 	mov	r20,r5
 4009b68:	20a1c83a 	sub	r16,r4,r2
 4009b6c:	8009883a 	mov	r4,r16
 4009b70:	a80b883a 	mov	r5,r21
 4009b74:	d8c00015 	stw	r3,0(sp)
 4009b78:	400a5200 	call	400a520 <__umodsi3>
 4009b7c:	8009883a 	mov	r4,r16
 4009b80:	a80b883a 	mov	r5,r21
 4009b84:	1021883a 	mov	r16,r2
 4009b88:	8020943a 	slli	r16,r16,16
 4009b8c:	400a4bc0 	call	400a4bc <__udivsi3>
 4009b90:	14e7383a 	mul	r19,r2,r19
 4009b94:	94bfffcc 	andi	r18,r18,65535
 4009b98:	84a4b03a 	or	r18,r16,r18
 4009b9c:	d8c00017 	ldw	r3,0(sp)
 4009ba0:	94c0052e 	bgeu	r18,r19,4009bb8 <__udivdi3+0x2b4>
 4009ba4:	8ca5883a 	add	r18,r17,r18
 4009ba8:	113fffc4 	addi	r4,r2,-1
 4009bac:	94400136 	bltu	r18,r17,4009bb4 <__udivdi3+0x2b0>
 4009bb0:	94c0ae36 	bltu	r18,r19,4009e6c <__udivdi3+0x568>
 4009bb4:	2005883a 	mov	r2,r4
 4009bb8:	a00c943a 	slli	r6,r20,16
 4009bbc:	3084b03a 	or	r2,r6,r2
 4009bc0:	003fa206 	br	4009a4c <__udivdi3+0x148>
 4009bc4:	88804030 	cmpltui	r2,r17,256
 4009bc8:	10009e1e 	bne	r2,zero,4009e44 <__udivdi3+0x540>
 4009bcc:	8806d23a 	srli	r3,r17,8
 4009bd0:	05000204 	movi	r20,8
 4009bd4:	003fc506 	br	4009aec <__udivdi3+0x1e8>
 4009bd8:	30804030 	cmpltui	r2,r6,256
 4009bdc:	10008b1e 	bne	r2,zero,4009e0c <__udivdi3+0x508>
 4009be0:	3006d23a 	srli	r3,r6,8
 4009be4:	05000204 	movi	r20,8
 4009be8:	003f5f06 	br	4009968 <__udivdi3+0x64>
 4009bec:	38804030 	cmpltui	r2,r7,256
 4009bf0:	10008b1e 	bne	r2,zero,4009e20 <__udivdi3+0x51c>
 4009bf4:	3806d23a 	srli	r3,r7,8
 4009bf8:	01000204 	movi	r4,8
 4009bfc:	003fa506 	br	4009a94 <__udivdi3+0x190>
 4009c00:	89a2983a 	sll	r17,r17,r6
 4009c04:	80acd83a 	srl	r22,r16,r2
 4009c08:	81a0983a 	sll	r16,r16,r6
 4009c0c:	882ad43a 	srli	r21,r17,16
 4009c10:	9884d83a 	srl	r2,r19,r2
 4009c14:	b009883a 	mov	r4,r22
 4009c18:	a80b883a 	mov	r5,r21
 4009c1c:	99a4983a 	sll	r18,r19,r6
 4009c20:	1428b03a 	or	r20,r2,r16
 4009c24:	400a5200 	call	400a520 <__umodsi3>
 4009c28:	b009883a 	mov	r4,r22
 4009c2c:	a80b883a 	mov	r5,r21
 4009c30:	1021883a 	mov	r16,r2
 4009c34:	400a4bc0 	call	400a4bc <__udivsi3>
 4009c38:	8008943a 	slli	r4,r16,16
 4009c3c:	a00ad43a 	srli	r5,r20,16
 4009c40:	8cffffcc 	andi	r19,r17,65535
 4009c44:	98a1383a 	mul	r16,r19,r2
 4009c48:	2148b03a 	or	r4,r4,r5
 4009c4c:	102d883a 	mov	r22,r2
 4009c50:	2400062e 	bgeu	r4,r16,4009c6c <__udivdi3+0x368>
 4009c54:	2449883a 	add	r4,r4,r17
 4009c58:	10bfffc4 	addi	r2,r2,-1
 4009c5c:	24408136 	bltu	r4,r17,4009e64 <__udivdi3+0x560>
 4009c60:	2400802e 	bgeu	r4,r16,4009e64 <__udivdi3+0x560>
 4009c64:	b5bfff84 	addi	r22,r22,-2
 4009c68:	2449883a 	add	r4,r4,r17
 4009c6c:	2421c83a 	sub	r16,r4,r16
 4009c70:	8009883a 	mov	r4,r16
 4009c74:	a80b883a 	mov	r5,r21
 4009c78:	400a5200 	call	400a520 <__umodsi3>
 4009c7c:	8009883a 	mov	r4,r16
 4009c80:	a80b883a 	mov	r5,r21
 4009c84:	1021883a 	mov	r16,r2
 4009c88:	8020943a 	slli	r16,r16,16
 4009c8c:	400a4bc0 	call	400a4bc <__udivsi3>
 4009c90:	9889383a 	mul	r4,r19,r2
 4009c94:	a53fffcc 	andi	r20,r20,65535
 4009c98:	8520b03a 	or	r16,r16,r20
 4009c9c:	8100062e 	bgeu	r16,r4,4009cb8 <__udivdi3+0x3b4>
 4009ca0:	8461883a 	add	r16,r16,r17
 4009ca4:	10ffffc4 	addi	r3,r2,-1
 4009ca8:	84406a36 	bltu	r16,r17,4009e54 <__udivdi3+0x550>
 4009cac:	8100692e 	bgeu	r16,r4,4009e54 <__udivdi3+0x550>
 4009cb0:	10bfff84 	addi	r2,r2,-2
 4009cb4:	8461883a 	add	r16,r16,r17
 4009cb8:	b006943a 	slli	r3,r22,16
 4009cbc:	8121c83a 	sub	r16,r16,r4
 4009cc0:	1886b03a 	or	r3,r3,r2
 4009cc4:	003f9406 	br	4009b18 <__udivdi3+0x214>
 4009cc8:	30ecd83a 	srl	r22,r6,r3
 4009ccc:	3d4e983a 	sll	r7,r7,r21
 4009cd0:	80e4d83a 	srl	r18,r16,r3
 4009cd4:	98e2d83a 	srl	r17,r19,r3
 4009cd8:	b1ecb03a 	or	r22,r22,r7
 4009cdc:	b038d43a 	srli	fp,r22,16
 4009ce0:	8546983a 	sll	r3,r16,r21
 4009ce4:	9009883a 	mov	r4,r18
 4009ce8:	e00b883a 	mov	r5,fp
 4009cec:	88e2b03a 	or	r17,r17,r3
 4009cf0:	3568983a 	sll	r20,r6,r21
 4009cf4:	400a5200 	call	400a520 <__umodsi3>
 4009cf8:	9009883a 	mov	r4,r18
 4009cfc:	e00b883a 	mov	r5,fp
 4009d00:	1025883a 	mov	r18,r2
 4009d04:	400a4bc0 	call	400a4bc <__udivsi3>
 4009d08:	9008943a 	slli	r4,r18,16
 4009d0c:	8806d43a 	srli	r3,r17,16
 4009d10:	b5ffffcc 	andi	r23,r22,65535
 4009d14:	b8a5383a 	mul	r18,r23,r2
 4009d18:	20c8b03a 	or	r4,r4,r3
 4009d1c:	1021883a 	mov	r16,r2
 4009d20:	2480062e 	bgeu	r4,r18,4009d3c <__udivdi3+0x438>
 4009d24:	2589883a 	add	r4,r4,r22
 4009d28:	10bfffc4 	addi	r2,r2,-1
 4009d2c:	25804b36 	bltu	r4,r22,4009e5c <__udivdi3+0x558>
 4009d30:	24804a2e 	bgeu	r4,r18,4009e5c <__udivdi3+0x558>
 4009d34:	843fff84 	addi	r16,r16,-2
 4009d38:	2589883a 	add	r4,r4,r22
 4009d3c:	24a5c83a 	sub	r18,r4,r18
 4009d40:	9009883a 	mov	r4,r18
 4009d44:	e00b883a 	mov	r5,fp
 4009d48:	400a5200 	call	400a520 <__umodsi3>
 4009d4c:	9009883a 	mov	r4,r18
 4009d50:	e00b883a 	mov	r5,fp
 4009d54:	1025883a 	mov	r18,r2
 4009d58:	9024943a 	slli	r18,r18,16
 4009d5c:	400a4bc0 	call	400a4bc <__udivsi3>
 4009d60:	b8af383a 	mul	r23,r23,r2
 4009d64:	8c7fffcc 	andi	r17,r17,65535
 4009d68:	9462b03a 	or	r17,r18,r17
 4009d6c:	8dc0062e 	bgeu	r17,r23,4009d88 <__udivdi3+0x484>
 4009d70:	8da3883a 	add	r17,r17,r22
 4009d74:	10ffffc4 	addi	r3,r2,-1
 4009d78:	8d803436 	bltu	r17,r22,4009e4c <__udivdi3+0x548>
 4009d7c:	8dc0332e 	bgeu	r17,r23,4009e4c <__udivdi3+0x548>
 4009d80:	10bfff84 	addi	r2,r2,-2
 4009d84:	8da3883a 	add	r17,r17,r22
 4009d88:	8020943a 	slli	r16,r16,16
 4009d8c:	10ffffcc 	andi	r3,r2,65535
 4009d90:	a00ed43a 	srli	r7,r20,16
 4009d94:	8084b03a 	or	r2,r16,r2
 4009d98:	1008d43a 	srli	r4,r2,16
 4009d9c:	a1bfffcc 	andi	r6,r20,65535
 4009da0:	1991383a 	mul	r8,r3,r6
 4009da4:	218d383a 	mul	r6,r4,r6
 4009da8:	19c7383a 	mul	r3,r3,r7
 4009dac:	400ad43a 	srli	r5,r8,16
 4009db0:	21c9383a 	mul	r4,r4,r7
 4009db4:	1987883a 	add	r3,r3,r6
 4009db8:	28c7883a 	add	r3,r5,r3
 4009dbc:	8de3c83a 	sub	r17,r17,r23
 4009dc0:	1980022e 	bgeu	r3,r6,4009dcc <__udivdi3+0x4c8>
 4009dc4:	01400074 	movhi	r5,1
 4009dc8:	2149883a 	add	r4,r4,r5
 4009dcc:	180ad43a 	srli	r5,r3,16
 4009dd0:	2909883a 	add	r4,r5,r4
 4009dd4:	89000836 	bltu	r17,r4,4009df8 <__udivdi3+0x4f4>
 4009dd8:	89000226 	beq	r17,r4,4009de4 <__udivdi3+0x4e0>
 4009ddc:	0007883a 	mov	r3,zero
 4009de0:	003f1a06 	br	4009a4c <__udivdi3+0x148>
 4009de4:	1806943a 	slli	r3,r3,16
 4009de8:	9d4c983a 	sll	r6,r19,r21
 4009dec:	423fffcc 	andi	r8,r8,65535
 4009df0:	1a07883a 	add	r3,r3,r8
 4009df4:	30fff92e 	bgeu	r6,r3,4009ddc <__udivdi3+0x4d8>
 4009df8:	10bfffc4 	addi	r2,r2,-1
 4009dfc:	003ff706 	br	4009ddc <__udivdi3+0x4d8>
 4009e00:	3806d43a 	srli	r3,r7,16
 4009e04:	01000404 	movi	r4,16
 4009e08:	003f2206 	br	4009a94 <__udivdi3+0x190>
 4009e0c:	3007883a 	mov	r3,r6
 4009e10:	003ed506 	br	4009968 <__udivdi3+0x64>
 4009e14:	0007883a 	mov	r3,zero
 4009e18:	00800044 	movi	r2,1
 4009e1c:	003f0b06 	br	4009a4c <__udivdi3+0x148>
 4009e20:	3807883a 	mov	r3,r7
 4009e24:	0009883a 	mov	r4,zero
 4009e28:	003f1a06 	br	4009a94 <__udivdi3+0x190>
 4009e2c:	8806d43a 	srli	r3,r17,16
 4009e30:	05000404 	movi	r20,16
 4009e34:	003f2d06 	br	4009aec <__udivdi3+0x1e8>
 4009e38:	3006d43a 	srli	r3,r6,16
 4009e3c:	05000404 	movi	r20,16
 4009e40:	003ec906 	br	4009968 <__udivdi3+0x64>
 4009e44:	8807883a 	mov	r3,r17
 4009e48:	003f2806 	br	4009aec <__udivdi3+0x1e8>
 4009e4c:	1805883a 	mov	r2,r3
 4009e50:	003fcd06 	br	4009d88 <__udivdi3+0x484>
 4009e54:	1805883a 	mov	r2,r3
 4009e58:	003f9706 	br	4009cb8 <__udivdi3+0x3b4>
 4009e5c:	1021883a 	mov	r16,r2
 4009e60:	003fb606 	br	4009d3c <__udivdi3+0x438>
 4009e64:	102d883a 	mov	r22,r2
 4009e68:	003f8006 	br	4009c6c <__udivdi3+0x368>
 4009e6c:	10bfff84 	addi	r2,r2,-2
 4009e70:	003f5106 	br	4009bb8 <__udivdi3+0x2b4>
 4009e74:	10bfff84 	addi	r2,r2,-2
 4009e78:	003eed06 	br	4009a30 <__udivdi3+0x12c>
 4009e7c:	843fff84 	addi	r16,r16,-2
 4009e80:	2449883a 	add	r4,r4,r17
 4009e84:	003ed806 	br	40099e8 <__udivdi3+0xe4>
 4009e88:	a53fff84 	addi	r20,r20,-2
 4009e8c:	2449883a 	add	r4,r4,r17
 4009e90:	003f3506 	br	4009b68 <__udivdi3+0x264>

04009e94 <__umoddi3>:
 4009e94:	defff504 	addi	sp,sp,-44
 4009e98:	dc400215 	stw	r17,8(sp)
 4009e9c:	dc000115 	stw	r16,4(sp)
 4009ea0:	dfc00a15 	stw	ra,40(sp)
 4009ea4:	df000915 	stw	fp,36(sp)
 4009ea8:	ddc00815 	stw	r23,32(sp)
 4009eac:	dd800715 	stw	r22,28(sp)
 4009eb0:	dd400615 	stw	r21,24(sp)
 4009eb4:	dd000515 	stw	r20,20(sp)
 4009eb8:	dcc00415 	stw	r19,16(sp)
 4009ebc:	dc800315 	stw	r18,12(sp)
 4009ec0:	2823883a 	mov	r17,r5
 4009ec4:	2021883a 	mov	r16,r4
 4009ec8:	3800371e 	bne	r7,zero,4009fa8 <__umoddi3+0x114>
 4009ecc:	3825883a 	mov	r18,r7
 4009ed0:	3029883a 	mov	r20,r6
 4009ed4:	2027883a 	mov	r19,r4
 4009ed8:	2980572e 	bgeu	r5,r6,400a038 <__umoddi3+0x1a4>
 4009edc:	00bfffd4 	movui	r2,65535
 4009ee0:	282b883a 	mov	r21,r5
 4009ee4:	1180922e 	bgeu	r2,r6,400a130 <__umoddi3+0x29c>
 4009ee8:	00804034 	movhi	r2,256
 4009eec:	30812036 	bltu	r6,r2,400a370 <__umoddi3+0x4dc>
 4009ef0:	3006d63a 	srli	r3,r6,24
 4009ef4:	04800604 	movi	r18,24
 4009ef8:	00810074 	movhi	r2,1025
 4009efc:	1885883a 	add	r2,r3,r2
 4009f00:	10bf0603 	ldbu	r2,-1000(r2)
 4009f04:	00c00804 	movi	r3,32
 4009f08:	1485883a 	add	r2,r2,r18
 4009f0c:	18a5c83a 	sub	r18,r3,r2
 4009f10:	18800526 	beq	r3,r2,4009f28 <__umoddi3+0x94>
 4009f14:	8ca2983a 	sll	r17,r17,r18
 4009f18:	8084d83a 	srl	r2,r16,r2
 4009f1c:	34a8983a 	sll	r20,r6,r18
 4009f20:	84a6983a 	sll	r19,r16,r18
 4009f24:	146ab03a 	or	r21,r2,r17
 4009f28:	a02ed43a 	srli	r23,r20,16
 4009f2c:	a809883a 	mov	r4,r21
 4009f30:	a43fffcc 	andi	r16,r20,65535
 4009f34:	b80b883a 	mov	r5,r23
 4009f38:	400a5200 	call	400a520 <__umodsi3>
 4009f3c:	a809883a 	mov	r4,r21
 4009f40:	b80b883a 	mov	r5,r23
 4009f44:	102d883a 	mov	r22,r2
 4009f48:	400a4bc0 	call	400a4bc <__udivsi3>
 4009f4c:	b02c943a 	slli	r22,r22,16
 4009f50:	9808d43a 	srli	r4,r19,16
 4009f54:	80ab383a 	mul	r21,r16,r2
 4009f58:	b108b03a 	or	r4,r22,r4
 4009f5c:	2540042e 	bgeu	r4,r21,4009f70 <__umoddi3+0xdc>
 4009f60:	2509883a 	add	r4,r4,r20
 4009f64:	25000236 	bltu	r4,r20,4009f70 <__umoddi3+0xdc>
 4009f68:	2540012e 	bgeu	r4,r21,4009f70 <__umoddi3+0xdc>
 4009f6c:	2509883a 	add	r4,r4,r20
 4009f70:	256bc83a 	sub	r21,r4,r21
 4009f74:	b80b883a 	mov	r5,r23
 4009f78:	a809883a 	mov	r4,r21
 4009f7c:	400a5200 	call	400a520 <__umodsi3>
 4009f80:	1023883a 	mov	r17,r2
 4009f84:	b80b883a 	mov	r5,r23
 4009f88:	a809883a 	mov	r4,r21
 4009f8c:	400a4bc0 	call	400a4bc <__udivsi3>
 4009f90:	8822943a 	slli	r17,r17,16
 4009f94:	8085383a 	mul	r2,r16,r2
 4009f98:	98ffffcc 	andi	r3,r19,65535
 4009f9c:	88c6b03a 	or	r3,r17,r3
 4009fa0:	18805a2e 	bgeu	r3,r2,400a10c <__umoddi3+0x278>
 4009fa4:	00005506 	br	400a0fc <__umoddi3+0x268>
 4009fa8:	2005883a 	mov	r2,r4
 4009fac:	29c00d2e 	bgeu	r5,r7,4009fe4 <__umoddi3+0x150>
 4009fb0:	2807883a 	mov	r3,r5
 4009fb4:	dfc00a17 	ldw	ra,40(sp)
 4009fb8:	df000917 	ldw	fp,36(sp)
 4009fbc:	ddc00817 	ldw	r23,32(sp)
 4009fc0:	dd800717 	ldw	r22,28(sp)
 4009fc4:	dd400617 	ldw	r21,24(sp)
 4009fc8:	dd000517 	ldw	r20,20(sp)
 4009fcc:	dcc00417 	ldw	r19,16(sp)
 4009fd0:	dc800317 	ldw	r18,12(sp)
 4009fd4:	dc400217 	ldw	r17,8(sp)
 4009fd8:	dc000117 	ldw	r16,4(sp)
 4009fdc:	dec00b04 	addi	sp,sp,44
 4009fe0:	f800283a 	ret
 4009fe4:	013fffd4 	movui	r4,65535
 4009fe8:	2807883a 	mov	r3,r5
 4009fec:	21c0552e 	bgeu	r4,r7,400a144 <__umoddi3+0x2b0>
 4009ff0:	01004034 	movhi	r4,256
 4009ff4:	3900e336 	bltu	r7,r4,400a384 <__umoddi3+0x4f0>
 4009ff8:	3808d63a 	srli	r4,r7,24
 4009ffc:	02000604 	movi	r8,24
 400a000:	01410074 	movhi	r5,1025
 400a004:	214b883a 	add	r5,r4,r5
 400a008:	2d7f0603 	ldbu	r21,-1000(r5)
 400a00c:	01000804 	movi	r4,32
 400a010:	aa2b883a 	add	r21,r21,r8
 400a014:	2569c83a 	sub	r20,r4,r21
 400a018:	25404f1e 	bne	r4,r21,400a158 <__umoddi3+0x2c4>
 400a01c:	3c400136 	bltu	r7,r17,400a024 <__umoddi3+0x190>
 400a020:	81bfe436 	bltu	r16,r6,4009fb4 <__umoddi3+0x120>
 400a024:	8185c83a 	sub	r2,r16,r6
 400a028:	89cfc83a 	sub	r7,r17,r7
 400a02c:	8087803a 	cmpltu	r3,r16,r2
 400a030:	38c7c83a 	sub	r3,r7,r3
 400a034:	003fdf06 	br	4009fb4 <__umoddi3+0x120>
 400a038:	3000041e 	bne	r6,zero,400a04c <__umoddi3+0x1b8>
 400a03c:	000b883a 	mov	r5,zero
 400a040:	01000044 	movi	r4,1
 400a044:	400a4bc0 	call	400a4bc <__udivsi3>
 400a048:	1029883a 	mov	r20,r2
 400a04c:	00bfffd4 	movui	r2,65535
 400a050:	1500322e 	bgeu	r2,r20,400a11c <__umoddi3+0x288>
 400a054:	00804034 	movhi	r2,256
 400a058:	a080cd36 	bltu	r20,r2,400a390 <__umoddi3+0x4fc>
 400a05c:	a006d63a 	srli	r3,r20,24
 400a060:	04800604 	movi	r18,24
 400a064:	00810074 	movhi	r2,1025
 400a068:	1885883a 	add	r2,r3,r2
 400a06c:	15bf0603 	ldbu	r22,-1000(r2)
 400a070:	00800804 	movi	r2,32
 400a074:	b4ad883a 	add	r22,r22,r18
 400a078:	15a5c83a 	sub	r18,r2,r22
 400a07c:	15808a1e 	bne	r2,r22,400a2a8 <__umoddi3+0x414>
 400a080:	a02ed43a 	srli	r23,r20,16
 400a084:	8d23c83a 	sub	r17,r17,r20
 400a088:	a57fffcc 	andi	r21,r20,65535
 400a08c:	b80b883a 	mov	r5,r23
 400a090:	8809883a 	mov	r4,r17
 400a094:	400a5200 	call	400a520 <__umodsi3>
 400a098:	8809883a 	mov	r4,r17
 400a09c:	b80b883a 	mov	r5,r23
 400a0a0:	102d883a 	mov	r22,r2
 400a0a4:	400a4bc0 	call	400a4bc <__udivsi3>
 400a0a8:	b02c943a 	slli	r22,r22,16
 400a0ac:	9808d43a 	srli	r4,r19,16
 400a0b0:	1561383a 	mul	r16,r2,r21
 400a0b4:	b108b03a 	or	r4,r22,r4
 400a0b8:	2400032e 	bgeu	r4,r16,400a0c8 <__umoddi3+0x234>
 400a0bc:	2509883a 	add	r4,r4,r20
 400a0c0:	25000136 	bltu	r4,r20,400a0c8 <__umoddi3+0x234>
 400a0c4:	2400be36 	bltu	r4,r16,400a3c0 <__umoddi3+0x52c>
 400a0c8:	2421c83a 	sub	r16,r4,r16
 400a0cc:	b80b883a 	mov	r5,r23
 400a0d0:	8009883a 	mov	r4,r16
 400a0d4:	400a5200 	call	400a520 <__umodsi3>
 400a0d8:	1023883a 	mov	r17,r2
 400a0dc:	b80b883a 	mov	r5,r23
 400a0e0:	8009883a 	mov	r4,r16
 400a0e4:	400a4bc0 	call	400a4bc <__udivsi3>
 400a0e8:	8822943a 	slli	r17,r17,16
 400a0ec:	1545383a 	mul	r2,r2,r21
 400a0f0:	9cffffcc 	andi	r19,r19,65535
 400a0f4:	8cc6b03a 	or	r3,r17,r19
 400a0f8:	1880042e 	bgeu	r3,r2,400a10c <__umoddi3+0x278>
 400a0fc:	1d07883a 	add	r3,r3,r20
 400a100:	1d000236 	bltu	r3,r20,400a10c <__umoddi3+0x278>
 400a104:	1880012e 	bgeu	r3,r2,400a10c <__umoddi3+0x278>
 400a108:	1d07883a 	add	r3,r3,r20
 400a10c:	1885c83a 	sub	r2,r3,r2
 400a110:	1484d83a 	srl	r2,r2,r18
 400a114:	0007883a 	mov	r3,zero
 400a118:	003fa606 	br	4009fb4 <__umoddi3+0x120>
 400a11c:	a0804030 	cmpltui	r2,r20,256
 400a120:	10009e1e 	bne	r2,zero,400a39c <__umoddi3+0x508>
 400a124:	a006d23a 	srli	r3,r20,8
 400a128:	04800204 	movi	r18,8
 400a12c:	003fcd06 	br	400a064 <__umoddi3+0x1d0>
 400a130:	30804030 	cmpltui	r2,r6,256
 400a134:	1000911e 	bne	r2,zero,400a37c <__umoddi3+0x4e8>
 400a138:	3006d23a 	srli	r3,r6,8
 400a13c:	04800204 	movi	r18,8
 400a140:	003f6d06 	br	4009ef8 <__umoddi3+0x64>
 400a144:	39004030 	cmpltui	r4,r7,256
 400a148:	2000961e 	bne	r4,zero,400a3a4 <__umoddi3+0x510>
 400a14c:	3808d23a 	srli	r4,r7,8
 400a150:	02000204 	movi	r8,8
 400a154:	003faa06 	br	400a000 <__umoddi3+0x16c>
 400a158:	3d0e983a 	sll	r7,r7,r20
 400a15c:	3544d83a 	srl	r2,r6,r21
 400a160:	8d64d83a 	srl	r18,r17,r21
 400a164:	8d22983a 	sll	r17,r17,r20
 400a168:	11eeb03a 	or	r23,r2,r7
 400a16c:	b838d43a 	srli	fp,r23,16
 400a170:	8544d83a 	srl	r2,r16,r21
 400a174:	9009883a 	mov	r4,r18
 400a178:	e00b883a 	mov	r5,fp
 400a17c:	3526983a 	sll	r19,r6,r20
 400a180:	1462b03a 	or	r17,r2,r17
 400a184:	400a5200 	call	400a520 <__umodsi3>
 400a188:	9009883a 	mov	r4,r18
 400a18c:	e00b883a 	mov	r5,fp
 400a190:	1025883a 	mov	r18,r2
 400a194:	400a4bc0 	call	400a4bc <__udivsi3>
 400a198:	9008943a 	slli	r4,r18,16
 400a19c:	8806d43a 	srli	r3,r17,16
 400a1a0:	b9ffffcc 	andi	r7,r23,65535
 400a1a4:	38a5383a 	mul	r18,r7,r2
 400a1a8:	20c8b03a 	or	r4,r4,r3
 400a1ac:	8520983a 	sll	r16,r16,r20
 400a1b0:	102d883a 	mov	r22,r2
 400a1b4:	2480062e 	bgeu	r4,r18,400a1d0 <__umoddi3+0x33c>
 400a1b8:	25c9883a 	add	r4,r4,r23
 400a1bc:	10bfffc4 	addi	r2,r2,-1
 400a1c0:	25c07d36 	bltu	r4,r23,400a3b8 <__umoddi3+0x524>
 400a1c4:	24807c2e 	bgeu	r4,r18,400a3b8 <__umoddi3+0x524>
 400a1c8:	b5bfff84 	addi	r22,r22,-2
 400a1cc:	25c9883a 	add	r4,r4,r23
 400a1d0:	24a5c83a 	sub	r18,r4,r18
 400a1d4:	9009883a 	mov	r4,r18
 400a1d8:	e00b883a 	mov	r5,fp
 400a1dc:	d9c00015 	stw	r7,0(sp)
 400a1e0:	400a5200 	call	400a520 <__umodsi3>
 400a1e4:	9009883a 	mov	r4,r18
 400a1e8:	e00b883a 	mov	r5,fp
 400a1ec:	1025883a 	mov	r18,r2
 400a1f0:	400a4bc0 	call	400a4bc <__udivsi3>
 400a1f4:	d9c00017 	ldw	r7,0(sp)
 400a1f8:	9024943a 	slli	r18,r18,16
 400a1fc:	8c7fffcc 	andi	r17,r17,65535
 400a200:	388f383a 	mul	r7,r7,r2
 400a204:	9448b03a 	or	r4,r18,r17
 400a208:	21c0062e 	bgeu	r4,r7,400a224 <__umoddi3+0x390>
 400a20c:	25c9883a 	add	r4,r4,r23
 400a210:	10ffffc4 	addi	r3,r2,-1
 400a214:	25c06636 	bltu	r4,r23,400a3b0 <__umoddi3+0x51c>
 400a218:	21c0652e 	bgeu	r4,r7,400a3b0 <__umoddi3+0x51c>
 400a21c:	10bfff84 	addi	r2,r2,-2
 400a220:	25c9883a 	add	r4,r4,r23
 400a224:	b00a943a 	slli	r5,r22,16
 400a228:	11bfffcc 	andi	r6,r2,65535
 400a22c:	9806d43a 	srli	r3,r19,16
 400a230:	2884b03a 	or	r2,r5,r2
 400a234:	102cd43a 	srli	r22,r2,16
 400a238:	997fffcc 	andi	r5,r19,65535
 400a23c:	3151383a 	mul	r8,r6,r5
 400a240:	b14b383a 	mul	r5,r22,r5
 400a244:	30cd383a 	mul	r6,r6,r3
 400a248:	4004d43a 	srli	r2,r8,16
 400a24c:	b0ed383a 	mul	r22,r22,r3
 400a250:	314d883a 	add	r6,r6,r5
 400a254:	1185883a 	add	r2,r2,r6
 400a258:	21c9c83a 	sub	r4,r4,r7
 400a25c:	1140022e 	bgeu	r2,r5,400a268 <__umoddi3+0x3d4>
 400a260:	00c00074 	movhi	r3,1
 400a264:	b0ed883a 	add	r22,r22,r3
 400a268:	1006d43a 	srli	r3,r2,16
 400a26c:	1004943a 	slli	r2,r2,16
 400a270:	423fffcc 	andi	r8,r8,65535
 400a274:	1dad883a 	add	r22,r3,r22
 400a278:	1205883a 	add	r2,r2,r8
 400a27c:	25803636 	bltu	r4,r22,400a358 <__umoddi3+0x4c4>
 400a280:	25803426 	beq	r4,r22,400a354 <__umoddi3+0x4c0>
 400a284:	8085c83a 	sub	r2,r16,r2
 400a288:	8087803a 	cmpltu	r3,r16,r2
 400a28c:	2589c83a 	sub	r4,r4,r22
 400a290:	20c7c83a 	sub	r3,r4,r3
 400a294:	1d60983a 	sll	r16,r3,r21
 400a298:	1504d83a 	srl	r2,r2,r20
 400a29c:	1d06d83a 	srl	r3,r3,r20
 400a2a0:	8084b03a 	or	r2,r16,r2
 400a2a4:	003f4306 	br	4009fb4 <__umoddi3+0x120>
 400a2a8:	a4a8983a 	sll	r20,r20,r18
 400a2ac:	8daad83a 	srl	r21,r17,r22
 400a2b0:	8ca2983a 	sll	r17,r17,r18
 400a2b4:	a02ed43a 	srli	r23,r20,16
 400a2b8:	a809883a 	mov	r4,r21
 400a2bc:	85acd83a 	srl	r22,r16,r22
 400a2c0:	b80b883a 	mov	r5,r23
 400a2c4:	400a5200 	call	400a520 <__umodsi3>
 400a2c8:	a809883a 	mov	r4,r21
 400a2cc:	b80b883a 	mov	r5,r23
 400a2d0:	b46cb03a 	or	r22,r22,r17
 400a2d4:	1027883a 	mov	r19,r2
 400a2d8:	400a4bc0 	call	400a4bc <__udivsi3>
 400a2dc:	9826943a 	slli	r19,r19,16
 400a2e0:	b008d43a 	srli	r4,r22,16
 400a2e4:	a57fffcc 	andi	r21,r20,65535
 400a2e8:	a8a3383a 	mul	r17,r21,r2
 400a2ec:	9908b03a 	or	r4,r19,r4
 400a2f0:	84a6983a 	sll	r19,r16,r18
 400a2f4:	2440042e 	bgeu	r4,r17,400a308 <__umoddi3+0x474>
 400a2f8:	2509883a 	add	r4,r4,r20
 400a2fc:	25000236 	bltu	r4,r20,400a308 <__umoddi3+0x474>
 400a300:	2440012e 	bgeu	r4,r17,400a308 <__umoddi3+0x474>
 400a304:	2509883a 	add	r4,r4,r20
 400a308:	2463c83a 	sub	r17,r4,r17
 400a30c:	8809883a 	mov	r4,r17
 400a310:	b80b883a 	mov	r5,r23
 400a314:	400a5200 	call	400a520 <__umodsi3>
 400a318:	1021883a 	mov	r16,r2
 400a31c:	8809883a 	mov	r4,r17
 400a320:	b80b883a 	mov	r5,r23
 400a324:	8020943a 	slli	r16,r16,16
 400a328:	400a4bc0 	call	400a4bc <__udivsi3>
 400a32c:	a885383a 	mul	r2,r21,r2
 400a330:	b47fffcc 	andi	r17,r22,65535
 400a334:	8462b03a 	or	r17,r16,r17
 400a338:	8880042e 	bgeu	r17,r2,400a34c <__umoddi3+0x4b8>
 400a33c:	8d23883a 	add	r17,r17,r20
 400a340:	8d000236 	bltu	r17,r20,400a34c <__umoddi3+0x4b8>
 400a344:	8880012e 	bgeu	r17,r2,400a34c <__umoddi3+0x4b8>
 400a348:	8d23883a 	add	r17,r17,r20
 400a34c:	88a3c83a 	sub	r17,r17,r2
 400a350:	003f4e06 	br	400a08c <__umoddi3+0x1f8>
 400a354:	80bfcb2e 	bgeu	r16,r2,400a284 <__umoddi3+0x3f0>
 400a358:	14e7c83a 	sub	r19,r2,r19
 400a35c:	14c5803a 	cmpltu	r2,r2,r19
 400a360:	15c5883a 	add	r2,r2,r23
 400a364:	b0adc83a 	sub	r22,r22,r2
 400a368:	9805883a 	mov	r2,r19
 400a36c:	003fc506 	br	400a284 <__umoddi3+0x3f0>
 400a370:	3006d43a 	srli	r3,r6,16
 400a374:	04800404 	movi	r18,16
 400a378:	003edf06 	br	4009ef8 <__umoddi3+0x64>
 400a37c:	3007883a 	mov	r3,r6
 400a380:	003edd06 	br	4009ef8 <__umoddi3+0x64>
 400a384:	3808d43a 	srli	r4,r7,16
 400a388:	02000404 	movi	r8,16
 400a38c:	003f1c06 	br	400a000 <__umoddi3+0x16c>
 400a390:	a006d43a 	srli	r3,r20,16
 400a394:	04800404 	movi	r18,16
 400a398:	003f3206 	br	400a064 <__umoddi3+0x1d0>
 400a39c:	a007883a 	mov	r3,r20
 400a3a0:	003f3006 	br	400a064 <__umoddi3+0x1d0>
 400a3a4:	3809883a 	mov	r4,r7
 400a3a8:	0011883a 	mov	r8,zero
 400a3ac:	003f1406 	br	400a000 <__umoddi3+0x16c>
 400a3b0:	1805883a 	mov	r2,r3
 400a3b4:	003f9b06 	br	400a224 <__umoddi3+0x390>
 400a3b8:	102d883a 	mov	r22,r2
 400a3bc:	003f8406 	br	400a1d0 <__umoddi3+0x33c>
 400a3c0:	2509883a 	add	r4,r4,r20
 400a3c4:	003f4006 	br	400a0c8 <__umoddi3+0x234>

0400a3c8 <__divsi3>:
 400a3c8:	20001a16 	blt	r4,zero,400a434 <__divsi3+0x6c>
 400a3cc:	000f883a 	mov	r7,zero
 400a3d0:	2800020e 	bge	r5,zero,400a3dc <__divsi3+0x14>
 400a3d4:	014bc83a 	sub	r5,zero,r5
 400a3d8:	39c0005c 	xori	r7,r7,1
 400a3dc:	200d883a 	mov	r6,r4
 400a3e0:	00c00044 	movi	r3,1
 400a3e4:	2900092e 	bgeu	r5,r4,400a40c <__divsi3+0x44>
 400a3e8:	00800804 	movi	r2,32
 400a3ec:	00c00044 	movi	r3,1
 400a3f0:	00000106 	br	400a3f8 <__divsi3+0x30>
 400a3f4:	10001226 	beq	r2,zero,400a440 <__divsi3+0x78>
 400a3f8:	294b883a 	add	r5,r5,r5
 400a3fc:	10bfffc4 	addi	r2,r2,-1
 400a400:	18c7883a 	add	r3,r3,r3
 400a404:	293ffb36 	bltu	r5,r4,400a3f4 <__divsi3+0x2c>
 400a408:	18000d26 	beq	r3,zero,400a440 <__divsi3+0x78>
 400a40c:	0005883a 	mov	r2,zero
 400a410:	31400236 	bltu	r6,r5,400a41c <__divsi3+0x54>
 400a414:	314dc83a 	sub	r6,r6,r5
 400a418:	10c4b03a 	or	r2,r2,r3
 400a41c:	1806d07a 	srli	r3,r3,1
 400a420:	280ad07a 	srli	r5,r5,1
 400a424:	183ffa1e 	bne	r3,zero,400a410 <__divsi3+0x48>
 400a428:	38000126 	beq	r7,zero,400a430 <__divsi3+0x68>
 400a42c:	0085c83a 	sub	r2,zero,r2
 400a430:	f800283a 	ret
 400a434:	0109c83a 	sub	r4,zero,r4
 400a438:	01c00044 	movi	r7,1
 400a43c:	003fe406 	br	400a3d0 <__divsi3+0x8>
 400a440:	0005883a 	mov	r2,zero
 400a444:	003ff806 	br	400a428 <__divsi3+0x60>

0400a448 <__modsi3>:
 400a448:	20001916 	blt	r4,zero,400a4b0 <__modsi3+0x68>
 400a44c:	000f883a 	mov	r7,zero
 400a450:	2005883a 	mov	r2,r4
 400a454:	2800010e 	bge	r5,zero,400a45c <__modsi3+0x14>
 400a458:	014bc83a 	sub	r5,zero,r5
 400a45c:	00c00044 	movi	r3,1
 400a460:	2900092e 	bgeu	r5,r4,400a488 <__modsi3+0x40>
 400a464:	01800804 	movi	r6,32
 400a468:	00c00044 	movi	r3,1
 400a46c:	00000106 	br	400a474 <__modsi3+0x2c>
 400a470:	30000d26 	beq	r6,zero,400a4a8 <__modsi3+0x60>
 400a474:	294b883a 	add	r5,r5,r5
 400a478:	31bfffc4 	addi	r6,r6,-1
 400a47c:	18c7883a 	add	r3,r3,r3
 400a480:	293ffb36 	bltu	r5,r4,400a470 <__modsi3+0x28>
 400a484:	18000826 	beq	r3,zero,400a4a8 <__modsi3+0x60>
 400a488:	1806d07a 	srli	r3,r3,1
 400a48c:	11400136 	bltu	r2,r5,400a494 <__modsi3+0x4c>
 400a490:	1145c83a 	sub	r2,r2,r5
 400a494:	280ad07a 	srli	r5,r5,1
 400a498:	183ffb1e 	bne	r3,zero,400a488 <__modsi3+0x40>
 400a49c:	38000126 	beq	r7,zero,400a4a4 <__modsi3+0x5c>
 400a4a0:	0085c83a 	sub	r2,zero,r2
 400a4a4:	f800283a 	ret
 400a4a8:	2005883a 	mov	r2,r4
 400a4ac:	003ffb06 	br	400a49c <__modsi3+0x54>
 400a4b0:	0109c83a 	sub	r4,zero,r4
 400a4b4:	01c00044 	movi	r7,1
 400a4b8:	003fe506 	br	400a450 <__modsi3+0x8>

0400a4bc <__udivsi3>:
 400a4bc:	200d883a 	mov	r6,r4
 400a4c0:	2900152e 	bgeu	r5,r4,400a518 <__udivsi3+0x5c>
 400a4c4:	28001416 	blt	r5,zero,400a518 <__udivsi3+0x5c>
 400a4c8:	00800804 	movi	r2,32
 400a4cc:	00c00044 	movi	r3,1
 400a4d0:	00000206 	br	400a4dc <__udivsi3+0x20>
 400a4d4:	10000e26 	beq	r2,zero,400a510 <__udivsi3+0x54>
 400a4d8:	28000516 	blt	r5,zero,400a4f0 <__udivsi3+0x34>
 400a4dc:	294b883a 	add	r5,r5,r5
 400a4e0:	10bfffc4 	addi	r2,r2,-1
 400a4e4:	18c7883a 	add	r3,r3,r3
 400a4e8:	293ffa36 	bltu	r5,r4,400a4d4 <__udivsi3+0x18>
 400a4ec:	18000826 	beq	r3,zero,400a510 <__udivsi3+0x54>
 400a4f0:	0005883a 	mov	r2,zero
 400a4f4:	31400236 	bltu	r6,r5,400a500 <__udivsi3+0x44>
 400a4f8:	314dc83a 	sub	r6,r6,r5
 400a4fc:	10c4b03a 	or	r2,r2,r3
 400a500:	1806d07a 	srli	r3,r3,1
 400a504:	280ad07a 	srli	r5,r5,1
 400a508:	183ffa1e 	bne	r3,zero,400a4f4 <__udivsi3+0x38>
 400a50c:	f800283a 	ret
 400a510:	0005883a 	mov	r2,zero
 400a514:	f800283a 	ret
 400a518:	00c00044 	movi	r3,1
 400a51c:	003ff406 	br	400a4f0 <__udivsi3+0x34>

0400a520 <__umodsi3>:
 400a520:	2005883a 	mov	r2,r4
 400a524:	2900132e 	bgeu	r5,r4,400a574 <__umodsi3+0x54>
 400a528:	28001216 	blt	r5,zero,400a574 <__umodsi3+0x54>
 400a52c:	01800804 	movi	r6,32
 400a530:	00c00044 	movi	r3,1
 400a534:	00000206 	br	400a540 <__umodsi3+0x20>
 400a538:	30000c26 	beq	r6,zero,400a56c <__umodsi3+0x4c>
 400a53c:	28000516 	blt	r5,zero,400a554 <__umodsi3+0x34>
 400a540:	294b883a 	add	r5,r5,r5
 400a544:	31bfffc4 	addi	r6,r6,-1
 400a548:	18c7883a 	add	r3,r3,r3
 400a54c:	293ffa36 	bltu	r5,r4,400a538 <__umodsi3+0x18>
 400a550:	18000626 	beq	r3,zero,400a56c <__umodsi3+0x4c>
 400a554:	1806d07a 	srli	r3,r3,1
 400a558:	11400136 	bltu	r2,r5,400a560 <__umodsi3+0x40>
 400a55c:	1145c83a 	sub	r2,r2,r5
 400a560:	280ad07a 	srli	r5,r5,1
 400a564:	183ffb1e 	bne	r3,zero,400a554 <__umodsi3+0x34>
 400a568:	f800283a 	ret
 400a56c:	2005883a 	mov	r2,r4
 400a570:	f800283a 	ret
 400a574:	00c00044 	movi	r3,1
 400a578:	003ff606 	br	400a554 <__umodsi3+0x34>

0400a57c <__adddf3>:
 400a57c:	02000434 	movhi	r8,16
 400a580:	423fffc4 	addi	r8,r8,-1
 400a584:	3a12703a 	and	r9,r7,r8
 400a588:	2a06703a 	and	r3,r5,r8
 400a58c:	2818d53a 	srli	r12,r5,20
 400a590:	3804d53a 	srli	r2,r7,20
 400a594:	481490fa 	slli	r10,r9,3
 400a598:	280ad7fa 	srli	r5,r5,31
 400a59c:	180690fa 	slli	r3,r3,3
 400a5a0:	2016d77a 	srli	r11,r4,29
 400a5a4:	3012d77a 	srli	r9,r6,29
 400a5a8:	380ed7fa 	srli	r7,r7,31
 400a5ac:	defffb04 	addi	sp,sp,-20
 400a5b0:	dc400115 	stw	r17,4(sp)
 400a5b4:	dc000015 	stw	r16,0(sp)
 400a5b8:	dfc00415 	stw	ra,16(sp)
 400a5bc:	dcc00315 	stw	r19,12(sp)
 400a5c0:	dc800215 	stw	r18,8(sp)
 400a5c4:	201c90fa 	slli	r14,r4,3
 400a5c8:	301a90fa 	slli	r13,r6,3
 400a5cc:	6441ffcc 	andi	r17,r12,2047
 400a5d0:	2821883a 	mov	r16,r5
 400a5d4:	58c6b03a 	or	r3,r11,r3
 400a5d8:	1081ffcc 	andi	r2,r2,2047
 400a5dc:	4a92b03a 	or	r9,r9,r10
 400a5e0:	29c06326 	beq	r5,r7,400a770 <__adddf3+0x1f4>
 400a5e4:	888bc83a 	sub	r5,r17,r2
 400a5e8:	0140560e 	bge	zero,r5,400a744 <__adddf3+0x1c8>
 400a5ec:	10007526 	beq	r2,zero,400a7c4 <__adddf3+0x248>
 400a5f0:	8881ffd8 	cmpnei	r2,r17,2047
 400a5f4:	10012d26 	beq	r2,zero,400aaac <__adddf3+0x530>
 400a5f8:	4a402034 	orhi	r9,r9,128
 400a5fc:	28800e48 	cmpgei	r2,r5,57
 400a600:	1000f41e 	bne	r2,zero,400a9d4 <__adddf3+0x458>
 400a604:	28800808 	cmpgei	r2,r5,32
 400a608:	1001471e 	bne	r2,zero,400ab28 <__adddf3+0x5ac>
 400a60c:	00800804 	movi	r2,32
 400a610:	1145c83a 	sub	r2,r2,r5
 400a614:	6948d83a 	srl	r4,r13,r5
 400a618:	48a4983a 	sll	r18,r9,r2
 400a61c:	6884983a 	sll	r2,r13,r2
 400a620:	494ad83a 	srl	r5,r9,r5
 400a624:	9124b03a 	or	r18,r18,r4
 400a628:	101ac03a 	cmpne	r13,r2,zero
 400a62c:	9364b03a 	or	r18,r18,r13
 400a630:	1947c83a 	sub	r3,r3,r5
 400a634:	74a5c83a 	sub	r18,r14,r18
 400a638:	7489803a 	cmpltu	r4,r14,r18
 400a63c:	1909c83a 	sub	r4,r3,r4
 400a640:	2080202c 	andhi	r2,r4,128
 400a644:	10008626 	beq	r2,zero,400a860 <__adddf3+0x2e4>
 400a648:	00802034 	movhi	r2,128
 400a64c:	10bfffc4 	addi	r2,r2,-1
 400a650:	20a6703a 	and	r19,r4,r2
 400a654:	9800d626 	beq	r19,zero,400a9b0 <__adddf3+0x434>
 400a658:	9809883a 	mov	r4,r19
 400a65c:	400cb780 	call	400cb78 <__clzsi2>
 400a660:	133ffe04 	addi	r12,r2,-8
 400a664:	01000804 	movi	r4,32
 400a668:	2309c83a 	sub	r4,r4,r12
 400a66c:	9108d83a 	srl	r4,r18,r4
 400a670:	9b04983a 	sll	r2,r19,r12
 400a674:	9324983a 	sll	r18,r18,r12
 400a678:	2088b03a 	or	r4,r4,r2
 400a67c:	6440c716 	blt	r12,r17,400a99c <__adddf3+0x420>
 400a680:	6459c83a 	sub	r12,r12,r17
 400a684:	62000044 	addi	r8,r12,1
 400a688:	40800808 	cmpgei	r2,r8,32
 400a68c:	1001191e 	bne	r2,zero,400aaf4 <__adddf3+0x578>
 400a690:	00800804 	movi	r2,32
 400a694:	1205c83a 	sub	r2,r2,r8
 400a698:	9206d83a 	srl	r3,r18,r8
 400a69c:	90a4983a 	sll	r18,r18,r2
 400a6a0:	2084983a 	sll	r2,r4,r2
 400a6a4:	2208d83a 	srl	r4,r4,r8
 400a6a8:	9024c03a 	cmpne	r18,r18,zero
 400a6ac:	10c4b03a 	or	r2,r2,r3
 400a6b0:	14a4b03a 	or	r18,r2,r18
 400a6b4:	0023883a 	mov	r17,zero
 400a6b8:	908001cc 	andi	r2,r18,7
 400a6bc:	10000726 	beq	r2,zero,400a6dc <__adddf3+0x160>
 400a6c0:	908003cc 	andi	r2,r18,15
 400a6c4:	10800120 	cmpeqi	r2,r2,4
 400a6c8:	1000041e 	bne	r2,zero,400a6dc <__adddf3+0x160>
 400a6cc:	90c00104 	addi	r3,r18,4
 400a6d0:	1ca5803a 	cmpltu	r18,r3,r18
 400a6d4:	2489883a 	add	r4,r4,r18
 400a6d8:	1825883a 	mov	r18,r3
 400a6dc:	2080202c 	andhi	r2,r4,128
 400a6e0:	10006126 	beq	r2,zero,400a868 <__adddf3+0x2ec>
 400a6e4:	89400044 	addi	r5,r17,1
 400a6e8:	2881ffe0 	cmpeqi	r2,r5,2047
 400a6ec:	2941ffcc 	andi	r5,r5,2047
 400a6f0:	1000731e 	bne	r2,zero,400a8c0 <__adddf3+0x344>
 400a6f4:	023fe034 	movhi	r8,65408
 400a6f8:	423fffc4 	addi	r8,r8,-1
 400a6fc:	2210703a 	and	r8,r4,r8
 400a700:	4006927a 	slli	r3,r8,9
 400a704:	9024d0fa 	srli	r18,r18,3
 400a708:	4004977a 	slli	r2,r8,29
 400a70c:	1806d33a 	srli	r3,r3,12
 400a710:	1484b03a 	or	r2,r2,r18
 400a714:	280a953a 	slli	r5,r5,20
 400a718:	84003fcc 	andi	r16,r16,255
 400a71c:	802097fa 	slli	r16,r16,31
 400a720:	28c6b03a 	or	r3,r5,r3
 400a724:	1c06b03a 	or	r3,r3,r16
 400a728:	dfc00417 	ldw	ra,16(sp)
 400a72c:	dcc00317 	ldw	r19,12(sp)
 400a730:	dc800217 	ldw	r18,8(sp)
 400a734:	dc400117 	ldw	r17,4(sp)
 400a738:	dc000017 	ldw	r16,0(sp)
 400a73c:	dec00504 	addi	sp,sp,20
 400a740:	f800283a 	ret
 400a744:	28002726 	beq	r5,zero,400a7e4 <__adddf3+0x268>
 400a748:	144bc83a 	sub	r5,r2,r17
 400a74c:	8800be1e 	bne	r17,zero,400aa48 <__adddf3+0x4cc>
 400a750:	1b88b03a 	or	r4,r3,r14
 400a754:	20013126 	beq	r4,zero,400ac1c <__adddf3+0x6a0>
 400a758:	293fffc4 	addi	r4,r5,-1
 400a75c:	20017226 	beq	r4,zero,400ad28 <__adddf3+0x7ac>
 400a760:	2941ffd8 	cmpnei	r5,r5,2047
 400a764:	2801c226 	beq	r5,zero,400ae70 <__adddf3+0x8f4>
 400a768:	200b883a 	mov	r5,r4
 400a76c:	0000b906 	br	400aa54 <__adddf3+0x4d8>
 400a770:	888bc83a 	sub	r5,r17,r2
 400a774:	0140700e 	bge	zero,r5,400a938 <__adddf3+0x3bc>
 400a778:	10002a26 	beq	r2,zero,400a824 <__adddf3+0x2a8>
 400a77c:	8881ffd8 	cmpnei	r2,r17,2047
 400a780:	1000ca26 	beq	r2,zero,400aaac <__adddf3+0x530>
 400a784:	4a402034 	orhi	r9,r9,128
 400a788:	28800e48 	cmpgei	r2,r5,57
 400a78c:	1000421e 	bne	r2,zero,400a898 <__adddf3+0x31c>
 400a790:	28800808 	cmpgei	r2,r5,32
 400a794:	1000ff26 	beq	r2,zero,400ab94 <__adddf3+0x618>
 400a798:	2cbff804 	addi	r18,r5,-32
 400a79c:	29000820 	cmpeqi	r4,r5,32
 400a7a0:	4c84d83a 	srl	r2,r9,r18
 400a7a4:	2000041e 	bne	r4,zero,400a7b8 <__adddf3+0x23c>
 400a7a8:	01001004 	movi	r4,64
 400a7ac:	214bc83a 	sub	r5,r4,r5
 400a7b0:	4952983a 	sll	r9,r9,r5
 400a7b4:	6a5ab03a 	or	r13,r13,r9
 400a7b8:	6824c03a 	cmpne	r18,r13,zero
 400a7bc:	90a4b03a 	or	r18,r18,r2
 400a7c0:	00003706 	br	400a8a0 <__adddf3+0x324>
 400a7c4:	4b44b03a 	or	r2,r9,r13
 400a7c8:	1000b126 	beq	r2,zero,400aa90 <__adddf3+0x514>
 400a7cc:	28bfffc4 	addi	r2,r5,-1
 400a7d0:	10011a26 	beq	r2,zero,400ac3c <__adddf3+0x6c0>
 400a7d4:	2941ffd8 	cmpnei	r5,r5,2047
 400a7d8:	28012526 	beq	r5,zero,400ac70 <__adddf3+0x6f4>
 400a7dc:	100b883a 	mov	r5,r2
 400a7e0:	003f8606 	br	400a5fc <__adddf3+0x80>
 400a7e4:	8a800044 	addi	r10,r17,1
 400a7e8:	5281ff8c 	andi	r10,r10,2046
 400a7ec:	50008b1e 	bne	r10,zero,400aa1c <__adddf3+0x4a0>
 400a7f0:	1b96b03a 	or	r11,r3,r14
 400a7f4:	4b44b03a 	or	r2,r9,r13
 400a7f8:	8801031e 	bne	r17,zero,400ac08 <__adddf3+0x68c>
 400a7fc:	58014126 	beq	r11,zero,400ad04 <__adddf3+0x788>
 400a800:	1001571e 	bne	r2,zero,400ad60 <__adddf3+0x7e4>
 400a804:	1804977a 	slli	r2,r3,29
 400a808:	01480034 	movhi	r5,8192
 400a80c:	297fffc4 	addi	r5,r5,-1
 400a810:	2148703a 	and	r4,r4,r5
 400a814:	1810d0fa 	srli	r8,r3,3
 400a818:	1104b03a 	or	r2,r2,r4
 400a81c:	500b883a 	mov	r5,r10
 400a820:	00001806 	br	400a884 <__adddf3+0x308>
 400a824:	4b44b03a 	or	r2,r9,r13
 400a828:	10010a26 	beq	r2,zero,400ac54 <__adddf3+0x6d8>
 400a82c:	28bfffc4 	addi	r2,r5,-1
 400a830:	10000426 	beq	r2,zero,400a844 <__adddf3+0x2c8>
 400a834:	2941ffd8 	cmpnei	r5,r5,2047
 400a838:	28014226 	beq	r5,zero,400ad44 <__adddf3+0x7c8>
 400a83c:	100b883a 	mov	r5,r2
 400a840:	003fd106 	br	400a788 <__adddf3+0x20c>
 400a844:	7365883a 	add	r18,r14,r13
 400a848:	1a47883a 	add	r3,r3,r9
 400a84c:	9389803a 	cmpltu	r4,r18,r14
 400a850:	1909883a 	add	r4,r3,r4
 400a854:	2080202c 	andhi	r2,r4,128
 400a858:	10009b1e 	bne	r2,zero,400aac8 <__adddf3+0x54c>
 400a85c:	04400044 	movi	r17,1
 400a860:	908001cc 	andi	r2,r18,7
 400a864:	103f961e 	bne	r2,zero,400a6c0 <__adddf3+0x144>
 400a868:	9024d0fa 	srli	r18,r18,3
 400a86c:	2004977a 	slli	r2,r4,29
 400a870:	2010d0fa 	srli	r8,r4,3
 400a874:	880b883a 	mov	r5,r17
 400a878:	9084b03a 	or	r2,r18,r2
 400a87c:	28c1ffe0 	cmpeqi	r3,r5,2047
 400a880:	1800251e 	bne	r3,zero,400a918 <__adddf3+0x39c>
 400a884:	00c00434 	movhi	r3,16
 400a888:	18ffffc4 	addi	r3,r3,-1
 400a88c:	40c6703a 	and	r3,r8,r3
 400a890:	2941ffcc 	andi	r5,r5,2047
 400a894:	003f9f06 	br	400a714 <__adddf3+0x198>
 400a898:	4b64b03a 	or	r18,r9,r13
 400a89c:	9024c03a 	cmpne	r18,r18,zero
 400a8a0:	93a5883a 	add	r18,r18,r14
 400a8a4:	9389803a 	cmpltu	r4,r18,r14
 400a8a8:	20c9883a 	add	r4,r4,r3
 400a8ac:	2080202c 	andhi	r2,r4,128
 400a8b0:	103feb26 	beq	r2,zero,400a860 <__adddf3+0x2e4>
 400a8b4:	8c400044 	addi	r17,r17,1
 400a8b8:	8881ffe0 	cmpeqi	r2,r17,2047
 400a8bc:	10008326 	beq	r2,zero,400aacc <__adddf3+0x550>
 400a8c0:	0141ffc4 	movi	r5,2047
 400a8c4:	0007883a 	mov	r3,zero
 400a8c8:	0005883a 	mov	r2,zero
 400a8cc:	003f9106 	br	400a714 <__adddf3+0x198>
 400a8d0:	4b44b03a 	or	r2,r9,r13
 400a8d4:	180a977a 	slli	r5,r3,29
 400a8d8:	1810d0fa 	srli	r8,r3,3
 400a8dc:	10016c26 	beq	r2,zero,400ae90 <__adddf3+0x914>
 400a8e0:	00c80034 	movhi	r3,8192
 400a8e4:	18ffffc4 	addi	r3,r3,-1
 400a8e8:	20c4703a 	and	r2,r4,r3
 400a8ec:	4100022c 	andhi	r4,r8,8
 400a8f0:	1144b03a 	or	r2,r2,r5
 400a8f4:	20000826 	beq	r4,zero,400a918 <__adddf3+0x39c>
 400a8f8:	4808d0fa 	srli	r4,r9,3
 400a8fc:	2140022c 	andhi	r5,r4,8
 400a900:	2800051e 	bne	r5,zero,400a918 <__adddf3+0x39c>
 400a904:	4804977a 	slli	r2,r9,29
 400a908:	30cc703a 	and	r6,r6,r3
 400a90c:	3821883a 	mov	r16,r7
 400a910:	3084b03a 	or	r2,r6,r2
 400a914:	2011883a 	mov	r8,r4
 400a918:	4086b03a 	or	r3,r8,r2
 400a91c:	18017126 	beq	r3,zero,400aee4 <__adddf3+0x968>
 400a920:	01000434 	movhi	r4,16
 400a924:	40c00234 	orhi	r3,r8,8
 400a928:	213fffc4 	addi	r4,r4,-1
 400a92c:	1906703a 	and	r3,r3,r4
 400a930:	0141ffc4 	movi	r5,2047
 400a934:	003f7706 	br	400a714 <__adddf3+0x198>
 400a938:	28002926 	beq	r5,zero,400a9e0 <__adddf3+0x464>
 400a93c:	144bc83a 	sub	r5,r2,r17
 400a940:	88008c26 	beq	r17,zero,400ab74 <__adddf3+0x5f8>
 400a944:	1101ffd8 	cmpnei	r4,r2,2047
 400a948:	20011126 	beq	r4,zero,400ad90 <__adddf3+0x814>
 400a94c:	18c02034 	orhi	r3,r3,128
 400a950:	29000e48 	cmpgei	r4,r5,57
 400a954:	2000d51e 	bne	r4,zero,400acac <__adddf3+0x730>
 400a958:	29000808 	cmpgei	r4,r5,32
 400a95c:	2001511e 	bne	r4,zero,400aea4 <__adddf3+0x928>
 400a960:	01000804 	movi	r4,32
 400a964:	2149c83a 	sub	r4,r4,r5
 400a968:	1924983a 	sll	r18,r3,r4
 400a96c:	714cd83a 	srl	r6,r14,r5
 400a970:	7108983a 	sll	r4,r14,r4
 400a974:	194ad83a 	srl	r5,r3,r5
 400a978:	91a4b03a 	or	r18,r18,r6
 400a97c:	2006c03a 	cmpne	r3,r4,zero
 400a980:	90e4b03a 	or	r18,r18,r3
 400a984:	4953883a 	add	r9,r9,r5
 400a988:	9365883a 	add	r18,r18,r13
 400a98c:	9349803a 	cmpltu	r4,r18,r13
 400a990:	2249883a 	add	r4,r4,r9
 400a994:	1023883a 	mov	r17,r2
 400a998:	003fc406 	br	400a8ac <__adddf3+0x330>
 400a99c:	023fe034 	movhi	r8,65408
 400a9a0:	423fffc4 	addi	r8,r8,-1
 400a9a4:	8b23c83a 	sub	r17,r17,r12
 400a9a8:	2208703a 	and	r4,r4,r8
 400a9ac:	003f4206 	br	400a6b8 <__adddf3+0x13c>
 400a9b0:	9009883a 	mov	r4,r18
 400a9b4:	400cb780 	call	400cb78 <__clzsi2>
 400a9b8:	13000604 	addi	r12,r2,24
 400a9bc:	60c00808 	cmpgei	r3,r12,32
 400a9c0:	183f2826 	beq	r3,zero,400a664 <__adddf3+0xe8>
 400a9c4:	113ffe04 	addi	r4,r2,-8
 400a9c8:	9108983a 	sll	r4,r18,r4
 400a9cc:	0025883a 	mov	r18,zero
 400a9d0:	003f2a06 	br	400a67c <__adddf3+0x100>
 400a9d4:	4b64b03a 	or	r18,r9,r13
 400a9d8:	9024c03a 	cmpne	r18,r18,zero
 400a9dc:	003f1506 	br	400a634 <__adddf3+0xb8>
 400a9e0:	8a000044 	addi	r8,r17,1
 400a9e4:	4081ff8c 	andi	r2,r8,2046
 400a9e8:	1000751e 	bne	r2,zero,400abc0 <__adddf3+0x644>
 400a9ec:	1b84b03a 	or	r2,r3,r14
 400a9f0:	8800bc1e 	bne	r17,zero,400ace4 <__adddf3+0x768>
 400a9f4:	10010c26 	beq	r2,zero,400ae28 <__adddf3+0x8ac>
 400a9f8:	4b44b03a 	or	r2,r9,r13
 400a9fc:	1001111e 	bne	r2,zero,400ae44 <__adddf3+0x8c8>
 400aa00:	180c977a 	slli	r6,r3,29
 400aa04:	00880034 	movhi	r2,8192
 400aa08:	10bfffc4 	addi	r2,r2,-1
 400aa0c:	2084703a 	and	r2,r4,r2
 400aa10:	1810d0fa 	srli	r8,r3,3
 400aa14:	1184b03a 	or	r2,r2,r6
 400aa18:	003f9a06 	br	400a884 <__adddf3+0x308>
 400aa1c:	7365c83a 	sub	r18,r14,r13
 400aa20:	1a67c83a 	sub	r19,r3,r9
 400aa24:	7489803a 	cmpltu	r4,r14,r18
 400aa28:	9927c83a 	sub	r19,r19,r4
 400aa2c:	9880202c 	andhi	r2,r19,128
 400aa30:	10006f1e 	bne	r2,zero,400abf0 <__adddf3+0x674>
 400aa34:	94c4b03a 	or	r2,r18,r19
 400aa38:	103f061e 	bne	r2,zero,400a654 <__adddf3+0xd8>
 400aa3c:	0011883a 	mov	r8,zero
 400aa40:	0021883a 	mov	r16,zero
 400aa44:	003f8f06 	br	400a884 <__adddf3+0x308>
 400aa48:	1101ffd8 	cmpnei	r4,r2,2047
 400aa4c:	20008f26 	beq	r4,zero,400ac8c <__adddf3+0x710>
 400aa50:	18c02034 	orhi	r3,r3,128
 400aa54:	29000e48 	cmpgei	r4,r5,57
 400aa58:	20003e1e 	bne	r4,zero,400ab54 <__adddf3+0x5d8>
 400aa5c:	29000808 	cmpgei	r4,r5,32
 400aa60:	2000951e 	bne	r4,zero,400acb8 <__adddf3+0x73c>
 400aa64:	01000804 	movi	r4,32
 400aa68:	2149c83a 	sub	r4,r4,r5
 400aa6c:	1924983a 	sll	r18,r3,r4
 400aa70:	714cd83a 	srl	r6,r14,r5
 400aa74:	711c983a 	sll	r14,r14,r4
 400aa78:	1946d83a 	srl	r3,r3,r5
 400aa7c:	91a4b03a 	or	r18,r18,r6
 400aa80:	701cc03a 	cmpne	r14,r14,zero
 400aa84:	93a4b03a 	or	r18,r18,r14
 400aa88:	48d3c83a 	sub	r9,r9,r3
 400aa8c:	00003306 	br	400ab5c <__adddf3+0x5e0>
 400aa90:	1824977a 	slli	r18,r3,29
 400aa94:	01880034 	movhi	r6,8192
 400aa98:	31bfffc4 	addi	r6,r6,-1
 400aa9c:	2184703a 	and	r2,r4,r6
 400aaa0:	1810d0fa 	srli	r8,r3,3
 400aaa4:	1484b03a 	or	r2,r2,r18
 400aaa8:	003f7406 	br	400a87c <__adddf3+0x300>
 400aaac:	1804977a 	slli	r2,r3,29
 400aab0:	01480034 	movhi	r5,8192
 400aab4:	297fffc4 	addi	r5,r5,-1
 400aab8:	2148703a 	and	r4,r4,r5
 400aabc:	1810d0fa 	srli	r8,r3,3
 400aac0:	1104b03a 	or	r2,r2,r4
 400aac4:	003f9406 	br	400a918 <__adddf3+0x39c>
 400aac8:	04400084 	movi	r17,2
 400aacc:	00bfe034 	movhi	r2,65408
 400aad0:	10bfffc4 	addi	r2,r2,-1
 400aad4:	9006d07a 	srli	r3,r18,1
 400aad8:	2088703a 	and	r4,r4,r2
 400aadc:	200497fa 	slli	r2,r4,31
 400aae0:	9480004c 	andi	r18,r18,1
 400aae4:	1ca4b03a 	or	r18,r3,r18
 400aae8:	2008d07a 	srli	r4,r4,1
 400aaec:	14a4b03a 	or	r18,r2,r18
 400aaf0:	003ef106 	br	400a6b8 <__adddf3+0x13c>
 400aaf4:	633ff844 	addi	r12,r12,-31
 400aaf8:	40800820 	cmpeqi	r2,r8,32
 400aafc:	2318d83a 	srl	r12,r4,r12
 400ab00:	1000041e 	bne	r2,zero,400ab14 <__adddf3+0x598>
 400ab04:	00801004 	movi	r2,64
 400ab08:	1211c83a 	sub	r8,r2,r8
 400ab0c:	2208983a 	sll	r4,r4,r8
 400ab10:	9124b03a 	or	r18,r18,r4
 400ab14:	9024c03a 	cmpne	r18,r18,zero
 400ab18:	9324b03a 	or	r18,r18,r12
 400ab1c:	0009883a 	mov	r4,zero
 400ab20:	0023883a 	mov	r17,zero
 400ab24:	003f4e06 	br	400a860 <__adddf3+0x2e4>
 400ab28:	2cbff804 	addi	r18,r5,-32
 400ab2c:	29000820 	cmpeqi	r4,r5,32
 400ab30:	4c84d83a 	srl	r2,r9,r18
 400ab34:	2000041e 	bne	r4,zero,400ab48 <__adddf3+0x5cc>
 400ab38:	01001004 	movi	r4,64
 400ab3c:	214bc83a 	sub	r5,r4,r5
 400ab40:	4952983a 	sll	r9,r9,r5
 400ab44:	6a5ab03a 	or	r13,r13,r9
 400ab48:	6824c03a 	cmpne	r18,r13,zero
 400ab4c:	90a4b03a 	or	r18,r18,r2
 400ab50:	003eb806 	br	400a634 <__adddf3+0xb8>
 400ab54:	1b88b03a 	or	r4,r3,r14
 400ab58:	2024c03a 	cmpne	r18,r4,zero
 400ab5c:	6ca5c83a 	sub	r18,r13,r18
 400ab60:	6c89803a 	cmpltu	r4,r13,r18
 400ab64:	4909c83a 	sub	r4,r9,r4
 400ab68:	3821883a 	mov	r16,r7
 400ab6c:	1023883a 	mov	r17,r2
 400ab70:	003eb306 	br	400a640 <__adddf3+0xc4>
 400ab74:	1b88b03a 	or	r4,r3,r14
 400ab78:	20008c26 	beq	r4,zero,400adac <__adddf3+0x830>
 400ab7c:	293fffc4 	addi	r4,r5,-1
 400ab80:	2000d326 	beq	r4,zero,400aed0 <__adddf3+0x954>
 400ab84:	2941ffd8 	cmpnei	r5,r5,2047
 400ab88:	28008126 	beq	r5,zero,400ad90 <__adddf3+0x814>
 400ab8c:	200b883a 	mov	r5,r4
 400ab90:	003f6f06 	br	400a950 <__adddf3+0x3d4>
 400ab94:	00800804 	movi	r2,32
 400ab98:	1145c83a 	sub	r2,r2,r5
 400ab9c:	6948d83a 	srl	r4,r13,r5
 400aba0:	48a4983a 	sll	r18,r9,r2
 400aba4:	6884983a 	sll	r2,r13,r2
 400aba8:	494ad83a 	srl	r5,r9,r5
 400abac:	9124b03a 	or	r18,r18,r4
 400abb0:	101ac03a 	cmpne	r13,r2,zero
 400abb4:	9364b03a 	or	r18,r18,r13
 400abb8:	1947883a 	add	r3,r3,r5
 400abbc:	003f3806 	br	400a8a0 <__adddf3+0x324>
 400abc0:	4081ffe0 	cmpeqi	r2,r8,2047
 400abc4:	103f3e1e 	bne	r2,zero,400a8c0 <__adddf3+0x344>
 400abc8:	7345883a 	add	r2,r14,r13
 400abcc:	139d803a 	cmpltu	r14,r2,r14
 400abd0:	1a49883a 	add	r4,r3,r9
 400abd4:	2389883a 	add	r4,r4,r14
 400abd8:	202497fa 	slli	r18,r4,31
 400abdc:	1004d07a 	srli	r2,r2,1
 400abe0:	2008d07a 	srli	r4,r4,1
 400abe4:	4023883a 	mov	r17,r8
 400abe8:	90a4b03a 	or	r18,r18,r2
 400abec:	003f1c06 	br	400a860 <__adddf3+0x2e4>
 400abf0:	6ba5c83a 	sub	r18,r13,r14
 400abf4:	48c9c83a 	sub	r4,r9,r3
 400abf8:	6c85803a 	cmpltu	r2,r13,r18
 400abfc:	20a7c83a 	sub	r19,r4,r2
 400ac00:	3821883a 	mov	r16,r7
 400ac04:	003e9306 	br	400a654 <__adddf3+0xd8>
 400ac08:	58006f1e 	bne	r11,zero,400adc8 <__adddf3+0x84c>
 400ac0c:	10001f1e 	bne	r2,zero,400ac8c <__adddf3+0x710>
 400ac10:	00bfffc4 	movi	r2,-1
 400ac14:	0021883a 	mov	r16,zero
 400ac18:	003f4106 	br	400a920 <__adddf3+0x3a4>
 400ac1c:	4808977a 	slli	r4,r9,29
 400ac20:	00c80034 	movhi	r3,8192
 400ac24:	18ffffc4 	addi	r3,r3,-1
 400ac28:	30c4703a 	and	r2,r6,r3
 400ac2c:	4810d0fa 	srli	r8,r9,3
 400ac30:	1104b03a 	or	r2,r2,r4
 400ac34:	3821883a 	mov	r16,r7
 400ac38:	003f1006 	br	400a87c <__adddf3+0x300>
 400ac3c:	7365c83a 	sub	r18,r14,r13
 400ac40:	1a47c83a 	sub	r3,r3,r9
 400ac44:	7489803a 	cmpltu	r4,r14,r18
 400ac48:	1909c83a 	sub	r4,r3,r4
 400ac4c:	04400044 	movi	r17,1
 400ac50:	003e7b06 	br	400a640 <__adddf3+0xc4>
 400ac54:	1824977a 	slli	r18,r3,29
 400ac58:	01c80034 	movhi	r7,8192
 400ac5c:	39ffffc4 	addi	r7,r7,-1
 400ac60:	21c4703a 	and	r2,r4,r7
 400ac64:	1810d0fa 	srli	r8,r3,3
 400ac68:	1484b03a 	or	r2,r2,r18
 400ac6c:	003f0306 	br	400a87c <__adddf3+0x300>
 400ac70:	1824977a 	slli	r18,r3,29
 400ac74:	01480034 	movhi	r5,8192
 400ac78:	297fffc4 	addi	r5,r5,-1
 400ac7c:	2144703a 	and	r2,r4,r5
 400ac80:	1810d0fa 	srli	r8,r3,3
 400ac84:	1484b03a 	or	r2,r2,r18
 400ac88:	003f2306 	br	400a918 <__adddf3+0x39c>
 400ac8c:	4806977a 	slli	r3,r9,29
 400ac90:	00880034 	movhi	r2,8192
 400ac94:	10bfffc4 	addi	r2,r2,-1
 400ac98:	3084703a 	and	r2,r6,r2
 400ac9c:	4810d0fa 	srli	r8,r9,3
 400aca0:	10c4b03a 	or	r2,r2,r3
 400aca4:	3821883a 	mov	r16,r7
 400aca8:	003f1b06 	br	400a918 <__adddf3+0x39c>
 400acac:	1b88b03a 	or	r4,r3,r14
 400acb0:	2024c03a 	cmpne	r18,r4,zero
 400acb4:	003f3406 	br	400a988 <__adddf3+0x40c>
 400acb8:	2cbff804 	addi	r18,r5,-32
 400acbc:	29800820 	cmpeqi	r6,r5,32
 400acc0:	1c88d83a 	srl	r4,r3,r18
 400acc4:	3000041e 	bne	r6,zero,400acd8 <__adddf3+0x75c>
 400acc8:	01801004 	movi	r6,64
 400accc:	314bc83a 	sub	r5,r6,r5
 400acd0:	1946983a 	sll	r3,r3,r5
 400acd4:	70dcb03a 	or	r14,r14,r3
 400acd8:	7024c03a 	cmpne	r18,r14,zero
 400acdc:	9124b03a 	or	r18,r18,r4
 400ace0:	003f9e06 	br	400ab5c <__adddf3+0x5e0>
 400ace4:	103efa1e 	bne	r2,zero,400a8d0 <__adddf3+0x354>
 400ace8:	4804977a 	slli	r2,r9,29
 400acec:	00c80034 	movhi	r3,8192
 400acf0:	18ffffc4 	addi	r3,r3,-1
 400acf4:	30cc703a 	and	r6,r6,r3
 400acf8:	4810d0fa 	srli	r8,r9,3
 400acfc:	1184b03a 	or	r2,r2,r6
 400ad00:	003f0506 	br	400a918 <__adddf3+0x39c>
 400ad04:	10004426 	beq	r2,zero,400ae18 <__adddf3+0x89c>
 400ad08:	4806977a 	slli	r3,r9,29
 400ad0c:	00880034 	movhi	r2,8192
 400ad10:	10bfffc4 	addi	r2,r2,-1
 400ad14:	3084703a 	and	r2,r6,r2
 400ad18:	4810d0fa 	srli	r8,r9,3
 400ad1c:	10c4b03a 	or	r2,r2,r3
 400ad20:	3821883a 	mov	r16,r7
 400ad24:	003ed706 	br	400a884 <__adddf3+0x308>
 400ad28:	6ba5c83a 	sub	r18,r13,r14
 400ad2c:	48c7c83a 	sub	r3,r9,r3
 400ad30:	6c85803a 	cmpltu	r2,r13,r18
 400ad34:	1889c83a 	sub	r4,r3,r2
 400ad38:	3821883a 	mov	r16,r7
 400ad3c:	04400044 	movi	r17,1
 400ad40:	003e3f06 	br	400a640 <__adddf3+0xc4>
 400ad44:	180a977a 	slli	r5,r3,29
 400ad48:	00880034 	movhi	r2,8192
 400ad4c:	10bfffc4 	addi	r2,r2,-1
 400ad50:	2084703a 	and	r2,r4,r2
 400ad54:	1810d0fa 	srli	r8,r3,3
 400ad58:	1144b03a 	or	r2,r2,r5
 400ad5c:	003eee06 	br	400a918 <__adddf3+0x39c>
 400ad60:	7365c83a 	sub	r18,r14,r13
 400ad64:	7485803a 	cmpltu	r2,r14,r18
 400ad68:	1a49c83a 	sub	r4,r3,r9
 400ad6c:	2089c83a 	sub	r4,r4,r2
 400ad70:	2080202c 	andhi	r2,r4,128
 400ad74:	10002626 	beq	r2,zero,400ae10 <__adddf3+0x894>
 400ad78:	6ba5c83a 	sub	r18,r13,r14
 400ad7c:	48c7c83a 	sub	r3,r9,r3
 400ad80:	6c85803a 	cmpltu	r2,r13,r18
 400ad84:	1889c83a 	sub	r4,r3,r2
 400ad88:	3821883a 	mov	r16,r7
 400ad8c:	003e4a06 	br	400a6b8 <__adddf3+0x13c>
 400ad90:	4806977a 	slli	r3,r9,29
 400ad94:	00880034 	movhi	r2,8192
 400ad98:	10bfffc4 	addi	r2,r2,-1
 400ad9c:	3084703a 	and	r2,r6,r2
 400ada0:	4810d0fa 	srli	r8,r9,3
 400ada4:	10c4b03a 	or	r2,r2,r3
 400ada8:	003edb06 	br	400a918 <__adddf3+0x39c>
 400adac:	4806977a 	slli	r3,r9,29
 400adb0:	00880034 	movhi	r2,8192
 400adb4:	10bfffc4 	addi	r2,r2,-1
 400adb8:	3084703a 	and	r2,r6,r2
 400adbc:	4810d0fa 	srli	r8,r9,3
 400adc0:	10c4b03a 	or	r2,r2,r3
 400adc4:	003ead06 	br	400a87c <__adddf3+0x300>
 400adc8:	180a977a 	slli	r5,r3,29
 400adcc:	1810d0fa 	srli	r8,r3,3
 400add0:	10002f26 	beq	r2,zero,400ae90 <__adddf3+0x914>
 400add4:	00c80034 	movhi	r3,8192
 400add8:	18ffffc4 	addi	r3,r3,-1
 400addc:	20c4703a 	and	r2,r4,r3
 400ade0:	4100022c 	andhi	r4,r8,8
 400ade4:	1144b03a 	or	r2,r2,r5
 400ade8:	203ecb26 	beq	r4,zero,400a918 <__adddf3+0x39c>
 400adec:	4808d0fa 	srli	r4,r9,3
 400adf0:	2140022c 	andhi	r5,r4,8
 400adf4:	283ec81e 	bne	r5,zero,400a918 <__adddf3+0x39c>
 400adf8:	4812977a 	slli	r9,r9,29
 400adfc:	30c4703a 	and	r2,r6,r3
 400ae00:	3821883a 	mov	r16,r7
 400ae04:	1244b03a 	or	r2,r2,r9
 400ae08:	2011883a 	mov	r8,r4
 400ae0c:	003ec206 	br	400a918 <__adddf3+0x39c>
 400ae10:	9104b03a 	or	r2,r18,r4
 400ae14:	103e921e 	bne	r2,zero,400a860 <__adddf3+0x2e4>
 400ae18:	0011883a 	mov	r8,zero
 400ae1c:	100b883a 	mov	r5,r2
 400ae20:	0021883a 	mov	r16,zero
 400ae24:	003e9706 	br	400a884 <__adddf3+0x308>
 400ae28:	4804977a 	slli	r2,r9,29
 400ae2c:	00c80034 	movhi	r3,8192
 400ae30:	18ffffc4 	addi	r3,r3,-1
 400ae34:	30cc703a 	and	r6,r6,r3
 400ae38:	4810d0fa 	srli	r8,r9,3
 400ae3c:	1184b03a 	or	r2,r2,r6
 400ae40:	003e9006 	br	400a884 <__adddf3+0x308>
 400ae44:	7365883a 	add	r18,r14,r13
 400ae48:	1a47883a 	add	r3,r3,r9
 400ae4c:	9389803a 	cmpltu	r4,r18,r14
 400ae50:	1909883a 	add	r4,r3,r4
 400ae54:	2080202c 	andhi	r2,r4,128
 400ae58:	103e8126 	beq	r2,zero,400a860 <__adddf3+0x2e4>
 400ae5c:	00bfe034 	movhi	r2,65408
 400ae60:	10bfffc4 	addi	r2,r2,-1
 400ae64:	2088703a 	and	r4,r4,r2
 400ae68:	04400044 	movi	r17,1
 400ae6c:	003e7c06 	br	400a860 <__adddf3+0x2e4>
 400ae70:	4804977a 	slli	r2,r9,29
 400ae74:	00c80034 	movhi	r3,8192
 400ae78:	18ffffc4 	addi	r3,r3,-1
 400ae7c:	30cc703a 	and	r6,r6,r3
 400ae80:	4810d0fa 	srli	r8,r9,3
 400ae84:	1184b03a 	or	r2,r2,r6
 400ae88:	3821883a 	mov	r16,r7
 400ae8c:	003ea206 	br	400a918 <__adddf3+0x39c>
 400ae90:	00880034 	movhi	r2,8192
 400ae94:	10bfffc4 	addi	r2,r2,-1
 400ae98:	2084703a 	and	r2,r4,r2
 400ae9c:	1144b03a 	or	r2,r2,r5
 400aea0:	003e9d06 	br	400a918 <__adddf3+0x39c>
 400aea4:	293ff804 	addi	r4,r5,-32
 400aea8:	29800820 	cmpeqi	r6,r5,32
 400aeac:	1908d83a 	srl	r4,r3,r4
 400aeb0:	3000041e 	bne	r6,zero,400aec4 <__adddf3+0x948>
 400aeb4:	01801004 	movi	r6,64
 400aeb8:	314bc83a 	sub	r5,r6,r5
 400aebc:	1946983a 	sll	r3,r3,r5
 400aec0:	70dcb03a 	or	r14,r14,r3
 400aec4:	7024c03a 	cmpne	r18,r14,zero
 400aec8:	9124b03a 	or	r18,r18,r4
 400aecc:	003eae06 	br	400a988 <__adddf3+0x40c>
 400aed0:	7365883a 	add	r18,r14,r13
 400aed4:	1a47883a 	add	r3,r3,r9
 400aed8:	9345803a 	cmpltu	r2,r18,r13
 400aedc:	1889883a 	add	r4,r3,r2
 400aee0:	003e5c06 	br	400a854 <__adddf3+0x2d8>
 400aee4:	0005883a 	mov	r2,zero
 400aee8:	0141ffc4 	movi	r5,2047
 400aeec:	0007883a 	mov	r3,zero
 400aef0:	003e0806 	br	400a714 <__adddf3+0x198>

0400aef4 <__divdf3>:
 400aef4:	2804d53a 	srli	r2,r5,20
 400aef8:	defff204 	addi	sp,sp,-56
 400aefc:	dc000415 	stw	r16,16(sp)
 400af00:	04000434 	movhi	r16,16
 400af04:	ddc00b15 	stw	r23,44(sp)
 400af08:	dd800a15 	stw	r22,40(sp)
 400af0c:	dc800615 	stw	r18,24(sp)
 400af10:	843fffc4 	addi	r16,r16,-1
 400af14:	dfc00d15 	stw	ra,52(sp)
 400af18:	df000c15 	stw	fp,48(sp)
 400af1c:	dd400915 	stw	r21,36(sp)
 400af20:	dd000815 	stw	r20,32(sp)
 400af24:	dcc00715 	stw	r19,28(sp)
 400af28:	dc400515 	stw	r17,20(sp)
 400af2c:	1081ffcc 	andi	r2,r2,2047
 400af30:	282cd7fa 	srli	r22,r5,31
 400af34:	302f883a 	mov	r23,r6
 400af38:	2025883a 	mov	r18,r4
 400af3c:	2c20703a 	and	r16,r5,r16
 400af40:	10005326 	beq	r2,zero,400b090 <__divdf3+0x19c>
 400af44:	10c1ffe0 	cmpeqi	r3,r2,2047
 400af48:	1800661e 	bne	r3,zero,400b0e4 <__divdf3+0x1f0>
 400af4c:	2028d77a 	srli	r20,r4,29
 400af50:	800a90fa 	slli	r5,r16,3
 400af54:	202490fa 	slli	r18,r4,3
 400af58:	14ff0044 	addi	r19,r2,-1023
 400af5c:	a14ab03a 	or	r5,r20,r5
 400af60:	2d002034 	orhi	r20,r5,128
 400af64:	0021883a 	mov	r16,zero
 400af68:	0039883a 	mov	fp,zero
 400af6c:	3804d53a 	srli	r2,r7,20
 400af70:	00c00434 	movhi	r3,16
 400af74:	18ffffc4 	addi	r3,r3,-1
 400af78:	1081ffcc 	andi	r2,r2,2047
 400af7c:	3810d7fa 	srli	r8,r7,31
 400af80:	38e2703a 	and	r17,r7,r3
 400af84:	10005e26 	beq	r2,zero,400b100 <__divdf3+0x20c>
 400af88:	10c1ffe0 	cmpeqi	r3,r2,2047
 400af8c:	1800201e 	bne	r3,zero,400b010 <__divdf3+0x11c>
 400af90:	880690fa 	slli	r3,r17,3
 400af94:	b822d77a 	srli	r17,r23,29
 400af98:	b81290fa 	slli	r9,r23,3
 400af9c:	10bf0044 	addi	r2,r2,-1023
 400afa0:	88c6b03a 	or	r3,r17,r3
 400afa4:	1c402034 	orhi	r17,r3,128
 400afa8:	98a7c83a 	sub	r19,r19,r2
 400afac:	0007883a 	mov	r3,zero
 400afb0:	80800428 	cmpgeui	r2,r16,16
 400afb4:	b22af03a 	xor	r21,r22,r8
 400afb8:	1000ac1e 	bne	r2,zero,400b26c <__divdf3+0x378>
 400afbc:	800490ba 	slli	r2,r16,2
 400afc0:	01810074 	movhi	r6,1025
 400afc4:	118d883a 	add	r6,r2,r6
 400afc8:	30abf417 	ldw	r2,-20528(r6)
 400afcc:	1000683a 	jmp	r2
 400afd0:	0400b26c 	andhi	r16,zero,713
 400afd4:	0400b080 	call	400b08 <__alt_mem_dram_controller-0x3bff4f8>
 400afd8:	0400b02c 	andhi	r16,zero,704
 400afdc:	0400b1b4 	movhi	r16,710
 400afe0:	0400b02c 	andhi	r16,zero,704
 400afe4:	0400b210 	cmplti	r16,zero,712
 400afe8:	0400b02c 	andhi	r16,zero,704
 400afec:	0400b1b4 	movhi	r16,710
 400aff0:	0400b080 	call	400b08 <__alt_mem_dram_controller-0x3bff4f8>
 400aff4:	0400b080 	call	400b08 <__alt_mem_dram_controller-0x3bff4f8>
 400aff8:	0400b210 	cmplti	r16,zero,712
 400affc:	0400b1b4 	movhi	r16,710
 400b000:	0400b14c 	andi	r16,zero,709
 400b004:	0400b14c 	andi	r16,zero,709
 400b008:	0400b14c 	andi	r16,zero,709
 400b00c:	0400b228 	cmpgeui	r16,zero,712
 400b010:	8dd2b03a 	or	r9,r17,r23
 400b014:	9cfe0044 	addi	r19,r19,-2047
 400b018:	48006b1e 	bne	r9,zero,400b1c8 <__divdf3+0x2d4>
 400b01c:	84000094 	ori	r16,r16,2
 400b020:	0023883a 	mov	r17,zero
 400b024:	00c00084 	movi	r3,2
 400b028:	003fe106 	br	400afb0 <__divdf3+0xbc>
 400b02c:	0007883a 	mov	r3,zero
 400b030:	000b883a 	mov	r5,zero
 400b034:	0025883a 	mov	r18,zero
 400b038:	a8803fcc 	andi	r2,r21,255
 400b03c:	1806953a 	slli	r3,r3,20
 400b040:	100497fa 	slli	r2,r2,31
 400b044:	1946b03a 	or	r3,r3,r5
 400b048:	1886b03a 	or	r3,r3,r2
 400b04c:	9005883a 	mov	r2,r18
 400b050:	dfc00d17 	ldw	ra,52(sp)
 400b054:	df000c17 	ldw	fp,48(sp)
 400b058:	ddc00b17 	ldw	r23,44(sp)
 400b05c:	dd800a17 	ldw	r22,40(sp)
 400b060:	dd400917 	ldw	r21,36(sp)
 400b064:	dd000817 	ldw	r20,32(sp)
 400b068:	dcc00717 	ldw	r19,28(sp)
 400b06c:	dc800617 	ldw	r18,24(sp)
 400b070:	dc400517 	ldw	r17,20(sp)
 400b074:	dc000417 	ldw	r16,16(sp)
 400b078:	dec00e04 	addi	sp,sp,56
 400b07c:	f800283a 	ret
 400b080:	00c1ffc4 	movi	r3,2047
 400b084:	000b883a 	mov	r5,zero
 400b088:	0025883a 	mov	r18,zero
 400b08c:	003fea06 	br	400b038 <__divdf3+0x144>
 400b090:	2428b03a 	or	r20,r4,r16
 400b094:	2023883a 	mov	r17,r4
 400b098:	a0005326 	beq	r20,zero,400b1e8 <__divdf3+0x2f4>
 400b09c:	d9c00015 	stw	r7,0(sp)
 400b0a0:	80014126 	beq	r16,zero,400b5a8 <__divdf3+0x6b4>
 400b0a4:	8009883a 	mov	r4,r16
 400b0a8:	400cb780 	call	400cb78 <__clzsi2>
 400b0ac:	d9c00017 	ldw	r7,0(sp)
 400b0b0:	10fffd44 	addi	r3,r2,-11
 400b0b4:	05000744 	movi	r20,29
 400b0b8:	113ffe04 	addi	r4,r2,-8
 400b0bc:	a0e9c83a 	sub	r20,r20,r3
 400b0c0:	810a983a 	sll	r5,r16,r4
 400b0c4:	8d28d83a 	srl	r20,r17,r20
 400b0c8:	8924983a 	sll	r18,r17,r4
 400b0cc:	a168b03a 	or	r20,r20,r5
 400b0d0:	04ff0344 	movi	r19,-1011
 400b0d4:	98a7c83a 	sub	r19,r19,r2
 400b0d8:	0021883a 	mov	r16,zero
 400b0dc:	0039883a 	mov	fp,zero
 400b0e0:	003fa206 	br	400af6c <__divdf3+0x78>
 400b0e4:	2428b03a 	or	r20,r4,r16
 400b0e8:	a000441e 	bne	r20,zero,400b1fc <__divdf3+0x308>
 400b0ec:	0025883a 	mov	r18,zero
 400b0f0:	04000204 	movi	r16,8
 400b0f4:	04c1ffc4 	movi	r19,2047
 400b0f8:	07000084 	movi	fp,2
 400b0fc:	003f9b06 	br	400af6c <__divdf3+0x78>
 400b100:	8dd2b03a 	or	r9,r17,r23
 400b104:	48003426 	beq	r9,zero,400b1d8 <__divdf3+0x2e4>
 400b108:	da000015 	stw	r8,0(sp)
 400b10c:	88013126 	beq	r17,zero,400b5d4 <__divdf3+0x6e0>
 400b110:	8809883a 	mov	r4,r17
 400b114:	400cb780 	call	400cb78 <__clzsi2>
 400b118:	da000017 	ldw	r8,0(sp)
 400b11c:	117ffd44 	addi	r5,r2,-11
 400b120:	01000744 	movi	r4,29
 400b124:	127ffe04 	addi	r9,r2,-8
 400b128:	2149c83a 	sub	r4,r4,r5
 400b12c:	8a46983a 	sll	r3,r17,r9
 400b130:	b908d83a 	srl	r4,r23,r4
 400b134:	ba52983a 	sll	r9,r23,r9
 400b138:	20e2b03a 	or	r17,r4,r3
 400b13c:	14c5883a 	add	r2,r2,r19
 400b140:	14c0fcc4 	addi	r19,r2,1011
 400b144:	0007883a 	mov	r3,zero
 400b148:	003f9906 	br	400afb0 <__divdf3+0xbc>
 400b14c:	b02b883a 	mov	r21,r22
 400b150:	e08000a0 	cmpeqi	r2,fp,2
 400b154:	103fca1e 	bne	r2,zero,400b080 <__divdf3+0x18c>
 400b158:	e08000e0 	cmpeqi	r2,fp,3
 400b15c:	1001741e 	bne	r2,zero,400b730 <__divdf3+0x83c>
 400b160:	e0800060 	cmpeqi	r2,fp,1
 400b164:	103fb11e 	bne	r2,zero,400b02c <__divdf3+0x138>
 400b168:	9c40ffc4 	addi	r17,r19,1023
 400b16c:	0440de0e 	bge	zero,r17,400b4e8 <__divdf3+0x5f4>
 400b170:	908001cc 	andi	r2,r18,7
 400b174:	10014a1e 	bne	r2,zero,400b6a0 <__divdf3+0x7ac>
 400b178:	900cd0fa 	srli	r6,r18,3
 400b17c:	a080402c 	andhi	r2,r20,256
 400b180:	10000426 	beq	r2,zero,400b194 <__divdf3+0x2a0>
 400b184:	00bfc034 	movhi	r2,65280
 400b188:	10bfffc4 	addi	r2,r2,-1
 400b18c:	a0a8703a 	and	r20,r20,r2
 400b190:	9c410004 	addi	r17,r19,1024
 400b194:	8881ffc8 	cmpgei	r2,r17,2047
 400b198:	103fb91e 	bne	r2,zero,400b080 <__divdf3+0x18c>
 400b19c:	a008977a 	slli	r4,r20,29
 400b1a0:	a00a927a 	slli	r5,r20,9
 400b1a4:	88c1ffcc 	andi	r3,r17,2047
 400b1a8:	21a4b03a 	or	r18,r4,r6
 400b1ac:	280ad33a 	srli	r5,r5,12
 400b1b0:	003fa106 	br	400b038 <__divdf3+0x144>
 400b1b4:	402b883a 	mov	r21,r8
 400b1b8:	8829883a 	mov	r20,r17
 400b1bc:	4825883a 	mov	r18,r9
 400b1c0:	1839883a 	mov	fp,r3
 400b1c4:	003fe206 	br	400b150 <__divdf3+0x25c>
 400b1c8:	840000d4 	ori	r16,r16,3
 400b1cc:	b813883a 	mov	r9,r23
 400b1d0:	00c000c4 	movi	r3,3
 400b1d4:	003f7606 	br	400afb0 <__divdf3+0xbc>
 400b1d8:	84000054 	ori	r16,r16,1
 400b1dc:	0023883a 	mov	r17,zero
 400b1e0:	00c00044 	movi	r3,1
 400b1e4:	003f7206 	br	400afb0 <__divdf3+0xbc>
 400b1e8:	0025883a 	mov	r18,zero
 400b1ec:	04000104 	movi	r16,4
 400b1f0:	0027883a 	mov	r19,zero
 400b1f4:	07000044 	movi	fp,1
 400b1f8:	003f5c06 	br	400af6c <__divdf3+0x78>
 400b1fc:	8029883a 	mov	r20,r16
 400b200:	04c1ffc4 	movi	r19,2047
 400b204:	04000304 	movi	r16,12
 400b208:	070000c4 	movi	fp,3
 400b20c:	003f5706 	br	400af6c <__divdf3+0x78>
 400b210:	01400434 	movhi	r5,16
 400b214:	002b883a 	mov	r21,zero
 400b218:	297fffc4 	addi	r5,r5,-1
 400b21c:	04bfffc4 	movi	r18,-1
 400b220:	00c1ffc4 	movi	r3,2047
 400b224:	003f8406 	br	400b038 <__divdf3+0x144>
 400b228:	a080022c 	andhi	r2,r20,8
 400b22c:	10000926 	beq	r2,zero,400b254 <__divdf3+0x360>
 400b230:	8880022c 	andhi	r2,r17,8
 400b234:	1000071e 	bne	r2,zero,400b254 <__divdf3+0x360>
 400b238:	00800434 	movhi	r2,16
 400b23c:	89400234 	orhi	r5,r17,8
 400b240:	10bfffc4 	addi	r2,r2,-1
 400b244:	288a703a 	and	r5,r5,r2
 400b248:	402b883a 	mov	r21,r8
 400b24c:	4825883a 	mov	r18,r9
 400b250:	003ff306 	br	400b220 <__divdf3+0x32c>
 400b254:	00800434 	movhi	r2,16
 400b258:	a1400234 	orhi	r5,r20,8
 400b25c:	10bfffc4 	addi	r2,r2,-1
 400b260:	288a703a 	and	r5,r5,r2
 400b264:	b02b883a 	mov	r21,r22
 400b268:	003fed06 	br	400b220 <__divdf3+0x32c>
 400b26c:	8d00c836 	bltu	r17,r20,400b590 <__divdf3+0x69c>
 400b270:	8d00c626 	beq	r17,r20,400b58c <__divdf3+0x698>
 400b274:	9cffffc4 	addi	r19,r19,-1
 400b278:	0021883a 	mov	r16,zero
 400b27c:	8806923a 	slli	r3,r17,8
 400b280:	480cd63a 	srli	r6,r9,24
 400b284:	4804923a 	slli	r2,r9,8
 400b288:	1838d43a 	srli	fp,r3,16
 400b28c:	a009883a 	mov	r4,r20
 400b290:	30ecb03a 	or	r22,r6,r3
 400b294:	e00b883a 	mov	r5,fp
 400b298:	d8800015 	stw	r2,0(sp)
 400b29c:	400a4bc0 	call	400a4bc <__udivsi3>
 400b2a0:	a009883a 	mov	r4,r20
 400b2a4:	e00b883a 	mov	r5,fp
 400b2a8:	d8800115 	stw	r2,4(sp)
 400b2ac:	400a5200 	call	400a520 <__umodsi3>
 400b2b0:	d8c00117 	ldw	r3,4(sp)
 400b2b4:	1004943a 	slli	r2,r2,16
 400b2b8:	9008d43a 	srli	r4,r18,16
 400b2bc:	b5ffffcc 	andi	r23,r22,65535
 400b2c0:	b8e3383a 	mul	r17,r23,r3
 400b2c4:	2088b03a 	or	r4,r4,r2
 400b2c8:	2440042e 	bgeu	r4,r17,400b2dc <__divdf3+0x3e8>
 400b2cc:	2589883a 	add	r4,r4,r22
 400b2d0:	18bfffc4 	addi	r2,r3,-1
 400b2d4:	2580d32e 	bgeu	r4,r22,400b624 <__divdf3+0x730>
 400b2d8:	1007883a 	mov	r3,r2
 400b2dc:	2463c83a 	sub	r17,r4,r17
 400b2e0:	e00b883a 	mov	r5,fp
 400b2e4:	8809883a 	mov	r4,r17
 400b2e8:	d8c00115 	stw	r3,4(sp)
 400b2ec:	400a4bc0 	call	400a4bc <__udivsi3>
 400b2f0:	8809883a 	mov	r4,r17
 400b2f4:	e00b883a 	mov	r5,fp
 400b2f8:	1029883a 	mov	r20,r2
 400b2fc:	400a5200 	call	400a520 <__umodsi3>
 400b300:	1008943a 	slli	r4,r2,16
 400b304:	bd13383a 	mul	r9,r23,r20
 400b308:	94bfffcc 	andi	r18,r18,65535
 400b30c:	9108b03a 	or	r4,r18,r4
 400b310:	d8c00117 	ldw	r3,4(sp)
 400b314:	2240042e 	bgeu	r4,r9,400b328 <__divdf3+0x434>
 400b318:	2589883a 	add	r4,r4,r22
 400b31c:	a0bfffc4 	addi	r2,r20,-1
 400b320:	2580bc2e 	bgeu	r4,r22,400b614 <__divdf3+0x720>
 400b324:	1029883a 	mov	r20,r2
 400b328:	180a943a 	slli	r5,r3,16
 400b32c:	d8800017 	ldw	r2,0(sp)
 400b330:	2249c83a 	sub	r4,r4,r9
 400b334:	2d28b03a 	or	r20,r5,r20
 400b338:	100ed43a 	srli	r7,r2,16
 400b33c:	123fffcc 	andi	r8,r2,65535
 400b340:	a00ad43a 	srli	r5,r20,16
 400b344:	a0bfffcc 	andi	r2,r20,65535
 400b348:	1225383a 	mul	r18,r2,r8
 400b34c:	2a15383a 	mul	r10,r5,r8
 400b350:	3887383a 	mul	r3,r7,r2
 400b354:	9004d43a 	srli	r2,r18,16
 400b358:	29cb383a 	mul	r5,r5,r7
 400b35c:	1a87883a 	add	r3,r3,r10
 400b360:	10c5883a 	add	r2,r2,r3
 400b364:	1280022e 	bgeu	r2,r10,400b370 <__divdf3+0x47c>
 400b368:	00c00074 	movhi	r3,1
 400b36c:	28cb883a 	add	r5,r5,r3
 400b370:	1006d43a 	srli	r3,r2,16
 400b374:	1004943a 	slli	r2,r2,16
 400b378:	94bfffcc 	andi	r18,r18,65535
 400b37c:	1947883a 	add	r3,r3,r5
 400b380:	14a5883a 	add	r18,r2,r18
 400b384:	20c07636 	bltu	r4,r3,400b560 <__divdf3+0x66c>
 400b388:	20c07426 	beq	r4,r3,400b55c <__divdf3+0x668>
 400b38c:	84a5c83a 	sub	r18,r16,r18
 400b390:	20c9c83a 	sub	r4,r4,r3
 400b394:	84a1803a 	cmpltu	r16,r16,r18
 400b398:	2421c83a 	sub	r16,r4,r16
 400b39c:	9c40ffc4 	addi	r17,r19,1023
 400b3a0:	b400ba26 	beq	r22,r16,400b68c <__divdf3+0x798>
 400b3a4:	8009883a 	mov	r4,r16
 400b3a8:	e00b883a 	mov	r5,fp
 400b3ac:	da000315 	stw	r8,12(sp)
 400b3b0:	d9c00215 	stw	r7,8(sp)
 400b3b4:	400a4bc0 	call	400a4bc <__udivsi3>
 400b3b8:	8009883a 	mov	r4,r16
 400b3bc:	e00b883a 	mov	r5,fp
 400b3c0:	d8800115 	stw	r2,4(sp)
 400b3c4:	400a5200 	call	400a520 <__umodsi3>
 400b3c8:	da400117 	ldw	r9,4(sp)
 400b3cc:	1004943a 	slli	r2,r2,16
 400b3d0:	9008d43a 	srli	r4,r18,16
 400b3d4:	ba61383a 	mul	r16,r23,r9
 400b3d8:	d9c00217 	ldw	r7,8(sp)
 400b3dc:	2088b03a 	or	r4,r4,r2
 400b3e0:	da000317 	ldw	r8,12(sp)
 400b3e4:	2400062e 	bgeu	r4,r16,400b400 <__divdf3+0x50c>
 400b3e8:	2589883a 	add	r4,r4,r22
 400b3ec:	48bfffc4 	addi	r2,r9,-1
 400b3f0:	2580b536 	bltu	r4,r22,400b6c8 <__divdf3+0x7d4>
 400b3f4:	2400b42e 	bgeu	r4,r16,400b6c8 <__divdf3+0x7d4>
 400b3f8:	4a7fff84 	addi	r9,r9,-2
 400b3fc:	2589883a 	add	r4,r4,r22
 400b400:	2421c83a 	sub	r16,r4,r16
 400b404:	8009883a 	mov	r4,r16
 400b408:	e00b883a 	mov	r5,fp
 400b40c:	da000315 	stw	r8,12(sp)
 400b410:	da400215 	stw	r9,8(sp)
 400b414:	d9c00115 	stw	r7,4(sp)
 400b418:	400a4bc0 	call	400a4bc <__udivsi3>
 400b41c:	8009883a 	mov	r4,r16
 400b420:	e00b883a 	mov	r5,fp
 400b424:	1021883a 	mov	r16,r2
 400b428:	400a5200 	call	400a520 <__umodsi3>
 400b42c:	1004943a 	slli	r2,r2,16
 400b430:	bc2f383a 	mul	r23,r23,r16
 400b434:	90ffffcc 	andi	r3,r18,65535
 400b438:	1886b03a 	or	r3,r3,r2
 400b43c:	d9c00117 	ldw	r7,4(sp)
 400b440:	da400217 	ldw	r9,8(sp)
 400b444:	da000317 	ldw	r8,12(sp)
 400b448:	1dc0062e 	bgeu	r3,r23,400b464 <__divdf3+0x570>
 400b44c:	1d87883a 	add	r3,r3,r22
 400b450:	80bfffc4 	addi	r2,r16,-1
 400b454:	1d809a36 	bltu	r3,r22,400b6c0 <__divdf3+0x7cc>
 400b458:	1dc0992e 	bgeu	r3,r23,400b6c0 <__divdf3+0x7cc>
 400b45c:	843fff84 	addi	r16,r16,-2
 400b460:	1d87883a 	add	r3,r3,r22
 400b464:	4808943a 	slli	r4,r9,16
 400b468:	1defc83a 	sub	r23,r3,r23
 400b46c:	2424b03a 	or	r18,r4,r16
 400b470:	900ad43a 	srli	r5,r18,16
 400b474:	90bfffcc 	andi	r2,r18,65535
 400b478:	4087383a 	mul	r3,r8,r2
 400b47c:	3885383a 	mul	r2,r7,r2
 400b480:	2a11383a 	mul	r8,r5,r8
 400b484:	1808d43a 	srli	r4,r3,16
 400b488:	394f383a 	mul	r7,r7,r5
 400b48c:	1205883a 	add	r2,r2,r8
 400b490:	2089883a 	add	r4,r4,r2
 400b494:	2200022e 	bgeu	r4,r8,400b4a0 <__divdf3+0x5ac>
 400b498:	00800074 	movhi	r2,1
 400b49c:	388f883a 	add	r7,r7,r2
 400b4a0:	2004d43a 	srli	r2,r4,16
 400b4a4:	2008943a 	slli	r4,r4,16
 400b4a8:	18ffffcc 	andi	r3,r3,65535
 400b4ac:	11cf883a 	add	r7,r2,r7
 400b4b0:	20c9883a 	add	r4,r4,r3
 400b4b4:	b9c00436 	bltu	r23,r7,400b4c8 <__divdf3+0x5d4>
 400b4b8:	b9c00226 	beq	r23,r7,400b4c4 <__divdf3+0x5d0>
 400b4bc:	94800054 	ori	r18,r18,1
 400b4c0:	003f2a06 	br	400b16c <__divdf3+0x278>
 400b4c4:	203f2926 	beq	r4,zero,400b16c <__divdf3+0x278>
 400b4c8:	b5ef883a 	add	r23,r22,r23
 400b4cc:	90bfffc4 	addi	r2,r18,-1
 400b4d0:	bd806936 	bltu	r23,r22,400b678 <__divdf3+0x784>
 400b4d4:	b9c08636 	bltu	r23,r7,400b6f0 <__divdf3+0x7fc>
 400b4d8:	b9c09a26 	beq	r23,r7,400b744 <__divdf3+0x850>
 400b4dc:	1025883a 	mov	r18,r2
 400b4e0:	003ff606 	br	400b4bc <__divdf3+0x5c8>
 400b4e4:	04bfffc4 	movi	r18,-1
 400b4e8:	01400044 	movi	r5,1
 400b4ec:	2c4bc83a 	sub	r5,r5,r17
 400b4f0:	28800e48 	cmpgei	r2,r5,57
 400b4f4:	103ecd1e 	bne	r2,zero,400b02c <__divdf3+0x138>
 400b4f8:	28800808 	cmpgei	r2,r5,32
 400b4fc:	10004d1e 	bne	r2,zero,400b634 <__divdf3+0x740>
 400b500:	98810784 	addi	r2,r19,1054
 400b504:	a086983a 	sll	r3,r20,r2
 400b508:	9148d83a 	srl	r4,r18,r5
 400b50c:	9084983a 	sll	r2,r18,r2
 400b510:	a14ad83a 	srl	r5,r20,r5
 400b514:	1924b03a 	or	r18,r3,r4
 400b518:	1004c03a 	cmpne	r2,r2,zero
 400b51c:	90a4b03a 	or	r18,r18,r2
 400b520:	908001cc 	andi	r2,r18,7
 400b524:	10000726 	beq	r2,zero,400b544 <__divdf3+0x650>
 400b528:	908003cc 	andi	r2,r18,15
 400b52c:	10800120 	cmpeqi	r2,r2,4
 400b530:	1000041e 	bne	r2,zero,400b544 <__divdf3+0x650>
 400b534:	90800104 	addi	r2,r18,4
 400b538:	14a5803a 	cmpltu	r18,r2,r18
 400b53c:	2c8b883a 	add	r5,r5,r18
 400b540:	1025883a 	mov	r18,r2
 400b544:	2880202c 	andhi	r2,r5,128
 400b548:	10007526 	beq	r2,zero,400b720 <__divdf3+0x82c>
 400b54c:	00c00044 	movi	r3,1
 400b550:	000b883a 	mov	r5,zero
 400b554:	0025883a 	mov	r18,zero
 400b558:	003eb706 	br	400b038 <__divdf3+0x144>
 400b55c:	84bf8b2e 	bgeu	r16,r18,400b38c <__divdf3+0x498>
 400b560:	d8800017 	ldw	r2,0(sp)
 400b564:	80a1883a 	add	r16,r16,r2
 400b568:	8085803a 	cmpltu	r2,r16,r2
 400b56c:	1585883a 	add	r2,r2,r22
 400b570:	2089883a 	add	r4,r4,r2
 400b574:	a0bfffc4 	addi	r2,r20,-1
 400b578:	b100222e 	bgeu	r22,r4,400b604 <__divdf3+0x710>
 400b57c:	20c05536 	bltu	r4,r3,400b6d4 <__divdf3+0x7e0>
 400b580:	19005326 	beq	r3,r4,400b6d0 <__divdf3+0x7dc>
 400b584:	1029883a 	mov	r20,r2
 400b588:	003f8006 	br	400b38c <__divdf3+0x498>
 400b58c:	927f3936 	bltu	r18,r9,400b274 <__divdf3+0x380>
 400b590:	a00897fa 	slli	r4,r20,31
 400b594:	9004d07a 	srli	r2,r18,1
 400b598:	902097fa 	slli	r16,r18,31
 400b59c:	a028d07a 	srli	r20,r20,1
 400b5a0:	20a4b03a 	or	r18,r4,r2
 400b5a4:	003f3506 	br	400b27c <__divdf3+0x388>
 400b5a8:	400cb780 	call	400cb78 <__clzsi2>
 400b5ac:	10c00544 	addi	r3,r2,21
 400b5b0:	19000748 	cmpgei	r4,r3,29
 400b5b4:	100b883a 	mov	r5,r2
 400b5b8:	d9c00017 	ldw	r7,0(sp)
 400b5bc:	10800804 	addi	r2,r2,32
 400b5c0:	203ebc26 	beq	r4,zero,400b0b4 <__divdf3+0x1c0>
 400b5c4:	297ffe04 	addi	r5,r5,-8
 400b5c8:	9168983a 	sll	r20,r18,r5
 400b5cc:	0025883a 	mov	r18,zero
 400b5d0:	003ebf06 	br	400b0d0 <__divdf3+0x1dc>
 400b5d4:	b809883a 	mov	r4,r23
 400b5d8:	400cb780 	call	400cb78 <__clzsi2>
 400b5dc:	11400544 	addi	r5,r2,21
 400b5e0:	29000748 	cmpgei	r4,r5,29
 400b5e4:	1007883a 	mov	r3,r2
 400b5e8:	da000017 	ldw	r8,0(sp)
 400b5ec:	10800804 	addi	r2,r2,32
 400b5f0:	203ecb26 	beq	r4,zero,400b120 <__divdf3+0x22c>
 400b5f4:	18fffe04 	addi	r3,r3,-8
 400b5f8:	b8e2983a 	sll	r17,r23,r3
 400b5fc:	0013883a 	mov	r9,zero
 400b600:	003ece06 	br	400b13c <__divdf3+0x248>
 400b604:	b13fdf1e 	bne	r22,r4,400b584 <__divdf3+0x690>
 400b608:	d9400017 	ldw	r5,0(sp)
 400b60c:	817fdd36 	bltu	r16,r5,400b584 <__divdf3+0x690>
 400b610:	003fda06 	br	400b57c <__divdf3+0x688>
 400b614:	227f432e 	bgeu	r4,r9,400b324 <__divdf3+0x430>
 400b618:	a53fff84 	addi	r20,r20,-2
 400b61c:	2589883a 	add	r4,r4,r22
 400b620:	003f4106 	br	400b328 <__divdf3+0x434>
 400b624:	247f2c2e 	bgeu	r4,r17,400b2d8 <__divdf3+0x3e4>
 400b628:	18ffff84 	addi	r3,r3,-2
 400b62c:	2589883a 	add	r4,r4,r22
 400b630:	003f2a06 	br	400b2dc <__divdf3+0x3e8>
 400b634:	00fff844 	movi	r3,-31
 400b638:	1c47c83a 	sub	r3,r3,r17
 400b63c:	29400820 	cmpeqi	r5,r5,32
 400b640:	a0c6d83a 	srl	r3,r20,r3
 400b644:	2800031e 	bne	r5,zero,400b654 <__divdf3+0x760>
 400b648:	99410f84 	addi	r5,r19,1086
 400b64c:	a14a983a 	sll	r5,r20,r5
 400b650:	9164b03a 	or	r18,r18,r5
 400b654:	9024c03a 	cmpne	r18,r18,zero
 400b658:	90e4b03a 	or	r18,r18,r3
 400b65c:	910001cc 	andi	r4,r18,7
 400b660:	20002b1e 	bne	r4,zero,400b710 <__divdf3+0x81c>
 400b664:	000b883a 	mov	r5,zero
 400b668:	9024d0fa 	srli	r18,r18,3
 400b66c:	0007883a 	mov	r3,zero
 400b670:	9124b03a 	or	r18,r18,r4
 400b674:	003e7006 	br	400b038 <__divdf3+0x144>
 400b678:	1025883a 	mov	r18,r2
 400b67c:	b9ff8f1e 	bne	r23,r7,400b4bc <__divdf3+0x5c8>
 400b680:	d8800017 	ldw	r2,0(sp)
 400b684:	20bf8d1e 	bne	r4,r2,400b4bc <__divdf3+0x5c8>
 400b688:	003eb806 	br	400b16c <__divdf3+0x278>
 400b68c:	047f950e 	bge	zero,r17,400b4e4 <__divdf3+0x5f0>
 400b690:	000d883a 	mov	r6,zero
 400b694:	01000044 	movi	r4,1
 400b698:	a129883a 	add	r20,r20,r4
 400b69c:	003eb706 	br	400b17c <__divdf3+0x288>
 400b6a0:	908003cc 	andi	r2,r18,15
 400b6a4:	10800118 	cmpnei	r2,r2,4
 400b6a8:	103eb326 	beq	r2,zero,400b178 <__divdf3+0x284>
 400b6ac:	91800104 	addi	r6,r18,4
 400b6b0:	013ffec4 	movi	r4,-5
 400b6b4:	300cd0fa 	srli	r6,r6,3
 400b6b8:	2489803a 	cmpltu	r4,r4,r18
 400b6bc:	003ff606 	br	400b698 <__divdf3+0x7a4>
 400b6c0:	1021883a 	mov	r16,r2
 400b6c4:	003f6706 	br	400b464 <__divdf3+0x570>
 400b6c8:	1013883a 	mov	r9,r2
 400b6cc:	003f4c06 	br	400b400 <__divdf3+0x50c>
 400b6d0:	84bfac2e 	bgeu	r16,r18,400b584 <__divdf3+0x690>
 400b6d4:	d8800017 	ldw	r2,0(sp)
 400b6d8:	a53fff84 	addi	r20,r20,-2
 400b6dc:	80a1883a 	add	r16,r16,r2
 400b6e0:	8085803a 	cmpltu	r2,r16,r2
 400b6e4:	1585883a 	add	r2,r2,r22
 400b6e8:	2089883a 	add	r4,r4,r2
 400b6ec:	003f2706 	br	400b38c <__divdf3+0x498>
 400b6f0:	d8c00017 	ldw	r3,0(sp)
 400b6f4:	94bfff84 	addi	r18,r18,-2
 400b6f8:	18c5883a 	add	r2,r3,r3
 400b6fc:	10c7803a 	cmpltu	r3,r2,r3
 400b700:	1d8d883a 	add	r6,r3,r22
 400b704:	b9af883a 	add	r23,r23,r6
 400b708:	d8800015 	stw	r2,0(sp)
 400b70c:	003fdb06 	br	400b67c <__divdf3+0x788>
 400b710:	908003cc 	andi	r2,r18,15
 400b714:	10800118 	cmpnei	r2,r2,4
 400b718:	000b883a 	mov	r5,zero
 400b71c:	103f851e 	bne	r2,zero,400b534 <__divdf3+0x640>
 400b720:	2804927a 	slli	r2,r5,9
 400b724:	2808977a 	slli	r4,r5,29
 400b728:	100ad33a 	srli	r5,r2,12
 400b72c:	003fce06 	br	400b668 <__divdf3+0x774>
 400b730:	00800434 	movhi	r2,16
 400b734:	a1400234 	orhi	r5,r20,8
 400b738:	10bfffc4 	addi	r2,r2,-1
 400b73c:	288a703a 	and	r5,r5,r2
 400b740:	003eb706 	br	400b220 <__divdf3+0x32c>
 400b744:	d8c00017 	ldw	r3,0(sp)
 400b748:	193fe936 	bltu	r3,r4,400b6f0 <__divdf3+0x7fc>
 400b74c:	1025883a 	mov	r18,r2
 400b750:	003fcb06 	br	400b680 <__divdf3+0x78c>

0400b754 <__eqdf2>:
 400b754:	2810d53a 	srli	r8,r5,20
 400b758:	3806d53a 	srli	r3,r7,20
 400b75c:	00800434 	movhi	r2,16
 400b760:	4201ffcc 	andi	r8,r8,2047
 400b764:	10bfffc4 	addi	r2,r2,-1
 400b768:	4241ffd8 	cmpnei	r9,r8,2047
 400b76c:	2814d7fa 	srli	r10,r5,31
 400b770:	3816d7fa 	srli	r11,r7,31
 400b774:	288a703a 	and	r5,r5,r2
 400b778:	388e703a 	and	r7,r7,r2
 400b77c:	1881ffcc 	andi	r2,r3,2047
 400b780:	48000626 	beq	r9,zero,400b79c <__eqdf2+0x48>
 400b784:	10c1ffe0 	cmpeqi	r3,r2,2047
 400b788:	1800021e 	bne	r3,zero,400b794 <__eqdf2+0x40>
 400b78c:	4080011e 	bne	r8,r2,400b794 <__eqdf2+0x40>
 400b790:	29c00826 	beq	r5,r7,400b7b4 <__eqdf2+0x60>
 400b794:	00800044 	movi	r2,1
 400b798:	f800283a 	ret
 400b79c:	2906b03a 	or	r3,r5,r4
 400b7a0:	183ffc1e 	bne	r3,zero,400b794 <__eqdf2+0x40>
 400b7a4:	1081ffd8 	cmpnei	r2,r2,2047
 400b7a8:	103ffa1e 	bne	r2,zero,400b794 <__eqdf2+0x40>
 400b7ac:	398eb03a 	or	r7,r7,r6
 400b7b0:	383ff81e 	bne	r7,zero,400b794 <__eqdf2+0x40>
 400b7b4:	21bff71e 	bne	r4,r6,400b794 <__eqdf2+0x40>
 400b7b8:	52c00426 	beq	r10,r11,400b7cc <__eqdf2+0x78>
 400b7bc:	403ff51e 	bne	r8,zero,400b794 <__eqdf2+0x40>
 400b7c0:	290ab03a 	or	r5,r5,r4
 400b7c4:	2804c03a 	cmpne	r2,r5,zero
 400b7c8:	f800283a 	ret
 400b7cc:	0005883a 	mov	r2,zero
 400b7d0:	f800283a 	ret

0400b7d4 <__gedf2>:
 400b7d4:	2810d53a 	srli	r8,r5,20
 400b7d8:	3812d53a 	srli	r9,r7,20
 400b7dc:	00c00434 	movhi	r3,16
 400b7e0:	4201ffcc 	andi	r8,r8,2047
 400b7e4:	18ffffc4 	addi	r3,r3,-1
 400b7e8:	4281ffd8 	cmpnei	r10,r8,2047
 400b7ec:	2816d7fa 	srli	r11,r5,31
 400b7f0:	3804d7fa 	srli	r2,r7,31
 400b7f4:	28ca703a 	and	r5,r5,r3
 400b7f8:	38ce703a 	and	r7,r7,r3
 400b7fc:	48c1ffcc 	andi	r3,r9,2047
 400b800:	50000b26 	beq	r10,zero,400b830 <__gedf2+0x5c>
 400b804:	1a41ffd8 	cmpnei	r9,r3,2047
 400b808:	48000d26 	beq	r9,zero,400b840 <__gedf2+0x6c>
 400b80c:	4000191e 	bne	r8,zero,400b874 <__gedf2+0xa0>
 400b810:	2914b03a 	or	r10,r5,r4
 400b814:	5013003a 	cmpeq	r9,r10,zero
 400b818:	1800131e 	bne	r3,zero,400b868 <__gedf2+0x94>
 400b81c:	3998b03a 	or	r12,r7,r6
 400b820:	6000111e 	bne	r12,zero,400b868 <__gedf2+0x94>
 400b824:	50000a1e 	bne	r10,zero,400b850 <__gedf2+0x7c>
 400b828:	0005883a 	mov	r2,zero
 400b82c:	f800283a 	ret
 400b830:	2912b03a 	or	r9,r5,r4
 400b834:	48001e1e 	bne	r9,zero,400b8b0 <__gedf2+0xdc>
 400b838:	1a41ffe0 	cmpeqi	r9,r3,2047
 400b83c:	48000d26 	beq	r9,zero,400b874 <__gedf2+0xa0>
 400b840:	3992b03a 	or	r9,r7,r6
 400b844:	48001a1e 	bne	r9,zero,400b8b0 <__gedf2+0xdc>
 400b848:	40000526 	beq	r8,zero,400b860 <__gedf2+0x8c>
 400b84c:	58800d26 	beq	r11,r2,400b884 <__gedf2+0xb0>
 400b850:	00800044 	movi	r2,1
 400b854:	58000626 	beq	r11,zero,400b870 <__gedf2+0x9c>
 400b858:	00bfffc4 	movi	r2,-1
 400b85c:	f800283a 	ret
 400b860:	2912b03a 	or	r9,r5,r4
 400b864:	4813003a 	cmpeq	r9,r9,zero
 400b868:	483ff826 	beq	r9,zero,400b84c <__gedf2+0x78>
 400b86c:	103ffa26 	beq	r2,zero,400b858 <__gedf2+0x84>
 400b870:	f800283a 	ret
 400b874:	183ff51e 	bne	r3,zero,400b84c <__gedf2+0x78>
 400b878:	3992b03a 	or	r9,r7,r6
 400b87c:	483ff31e 	bne	r9,zero,400b84c <__gedf2+0x78>
 400b880:	003ff306 	br	400b850 <__gedf2+0x7c>
 400b884:	1a000716 	blt	r3,r8,400b8a4 <__gedf2+0xd0>
 400b888:	40fff816 	blt	r8,r3,400b86c <__gedf2+0x98>
 400b88c:	397ff036 	bltu	r7,r5,400b850 <__gedf2+0x7c>
 400b890:	29c00926 	beq	r5,r7,400b8b8 <__gedf2+0xe4>
 400b894:	29ffe42e 	bgeu	r5,r7,400b828 <__gedf2+0x54>
 400b898:	583fef26 	beq	r11,zero,400b858 <__gedf2+0x84>
 400b89c:	5805883a 	mov	r2,r11
 400b8a0:	f800283a 	ret
 400b8a4:	103fec1e 	bne	r2,zero,400b858 <__gedf2+0x84>
 400b8a8:	00800044 	movi	r2,1
 400b8ac:	f800283a 	ret
 400b8b0:	00bfff84 	movi	r2,-2
 400b8b4:	f800283a 	ret
 400b8b8:	313fe536 	bltu	r6,r4,400b850 <__gedf2+0x7c>
 400b8bc:	21bfda2e 	bgeu	r4,r6,400b828 <__gedf2+0x54>
 400b8c0:	003ff506 	br	400b898 <__gedf2+0xc4>

0400b8c4 <__ledf2>:
 400b8c4:	2810d53a 	srli	r8,r5,20
 400b8c8:	3812d53a 	srli	r9,r7,20
 400b8cc:	00c00434 	movhi	r3,16
 400b8d0:	4201ffcc 	andi	r8,r8,2047
 400b8d4:	18ffffc4 	addi	r3,r3,-1
 400b8d8:	4281ffd8 	cmpnei	r10,r8,2047
 400b8dc:	2816d7fa 	srli	r11,r5,31
 400b8e0:	3804d7fa 	srli	r2,r7,31
 400b8e4:	28ca703a 	and	r5,r5,r3
 400b8e8:	38ce703a 	and	r7,r7,r3
 400b8ec:	48c1ffcc 	andi	r3,r9,2047
 400b8f0:	50000b26 	beq	r10,zero,400b920 <__ledf2+0x5c>
 400b8f4:	1a41ffd8 	cmpnei	r9,r3,2047
 400b8f8:	48000d26 	beq	r9,zero,400b930 <__ledf2+0x6c>
 400b8fc:	40001b1e 	bne	r8,zero,400b96c <__ledf2+0xa8>
 400b900:	2914b03a 	or	r10,r5,r4
 400b904:	5013003a 	cmpeq	r9,r10,zero
 400b908:	18000e1e 	bne	r3,zero,400b944 <__ledf2+0x80>
 400b90c:	3998b03a 	or	r12,r7,r6
 400b910:	60000c1e 	bne	r12,zero,400b944 <__ledf2+0x80>
 400b914:	50000d1e 	bne	r10,zero,400b94c <__ledf2+0x88>
 400b918:	0005883a 	mov	r2,zero
 400b91c:	f800283a 	ret
 400b920:	2912b03a 	or	r9,r5,r4
 400b924:	48000d1e 	bne	r9,zero,400b95c <__ledf2+0x98>
 400b928:	1a41ffe0 	cmpeqi	r9,r3,2047
 400b92c:	48000f26 	beq	r9,zero,400b96c <__ledf2+0xa8>
 400b930:	3992b03a 	or	r9,r7,r6
 400b934:	4800091e 	bne	r9,zero,400b95c <__ledf2+0x98>
 400b938:	4000031e 	bne	r8,zero,400b948 <__ledf2+0x84>
 400b93c:	2912b03a 	or	r9,r5,r4
 400b940:	4813003a 	cmpeq	r9,r9,zero
 400b944:	4800071e 	bne	r9,zero,400b964 <__ledf2+0xa0>
 400b948:	58800c26 	beq	r11,r2,400b97c <__ledf2+0xb8>
 400b94c:	00800044 	movi	r2,1
 400b950:	58000526 	beq	r11,zero,400b968 <__ledf2+0xa4>
 400b954:	00bfffc4 	movi	r2,-1
 400b958:	f800283a 	ret
 400b95c:	00800084 	movi	r2,2
 400b960:	f800283a 	ret
 400b964:	103ffb26 	beq	r2,zero,400b954 <__ledf2+0x90>
 400b968:	f800283a 	ret
 400b96c:	183ff61e 	bne	r3,zero,400b948 <__ledf2+0x84>
 400b970:	3992b03a 	or	r9,r7,r6
 400b974:	483ff41e 	bne	r9,zero,400b948 <__ledf2+0x84>
 400b978:	003ff406 	br	400b94c <__ledf2+0x88>
 400b97c:	1a00030e 	bge	r3,r8,400b98c <__ledf2+0xc8>
 400b980:	103ff41e 	bne	r2,zero,400b954 <__ledf2+0x90>
 400b984:	00800044 	movi	r2,1
 400b988:	f800283a 	ret
 400b98c:	40fff516 	blt	r8,r3,400b964 <__ledf2+0xa0>
 400b990:	397fee36 	bltu	r7,r5,400b94c <__ledf2+0x88>
 400b994:	29c00426 	beq	r5,r7,400b9a8 <__ledf2+0xe4>
 400b998:	29ffdf2e 	bgeu	r5,r7,400b918 <__ledf2+0x54>
 400b99c:	583fed26 	beq	r11,zero,400b954 <__ledf2+0x90>
 400b9a0:	5805883a 	mov	r2,r11
 400b9a4:	f800283a 	ret
 400b9a8:	313fe836 	bltu	r6,r4,400b94c <__ledf2+0x88>
 400b9ac:	21bfda2e 	bgeu	r4,r6,400b918 <__ledf2+0x54>
 400b9b0:	003ffa06 	br	400b99c <__ledf2+0xd8>

0400b9b4 <__muldf3>:
 400b9b4:	2804d53a 	srli	r2,r5,20
 400b9b8:	defff504 	addi	sp,sp,-44
 400b9bc:	02000434 	movhi	r8,16
 400b9c0:	df000915 	stw	fp,36(sp)
 400b9c4:	dd000515 	stw	r20,20(sp)
 400b9c8:	dcc00415 	stw	r19,16(sp)
 400b9cc:	dc000115 	stw	r16,4(sp)
 400b9d0:	423fffc4 	addi	r8,r8,-1
 400b9d4:	dfc00a15 	stw	ra,40(sp)
 400b9d8:	ddc00815 	stw	r23,32(sp)
 400b9dc:	dd800715 	stw	r22,28(sp)
 400b9e0:	dd400615 	stw	r21,24(sp)
 400b9e4:	dc800315 	stw	r18,12(sp)
 400b9e8:	dc400215 	stw	r17,8(sp)
 400b9ec:	1081ffcc 	andi	r2,r2,2047
 400b9f0:	2828d7fa 	srli	r20,r5,31
 400b9f4:	2027883a 	mov	r19,r4
 400b9f8:	3039883a 	mov	fp,r6
 400b9fc:	2a20703a 	and	r16,r5,r8
 400ba00:	10005a26 	beq	r2,zero,400bb6c <__muldf3+0x1b8>
 400ba04:	10c1ffe0 	cmpeqi	r3,r2,2047
 400ba08:	18006c1e 	bne	r3,zero,400bbbc <__muldf3+0x208>
 400ba0c:	800a90fa 	slli	r5,r16,3
 400ba10:	2020d77a 	srli	r16,r4,29
 400ba14:	202490fa 	slli	r18,r4,3
 400ba18:	14ff0044 	addi	r19,r2,-1023
 400ba1c:	8160b03a 	or	r16,r16,r5
 400ba20:	84002034 	orhi	r16,r16,128
 400ba24:	002b883a 	mov	r21,zero
 400ba28:	002d883a 	mov	r22,zero
 400ba2c:	3804d53a 	srli	r2,r7,20
 400ba30:	00c00434 	movhi	r3,16
 400ba34:	18ffffc4 	addi	r3,r3,-1
 400ba38:	1081ffcc 	andi	r2,r2,2047
 400ba3c:	382ed7fa 	srli	r23,r7,31
 400ba40:	38e2703a 	and	r17,r7,r3
 400ba44:	10006426 	beq	r2,zero,400bbd8 <__muldf3+0x224>
 400ba48:	10c1ffe0 	cmpeqi	r3,r2,2047
 400ba4c:	1800211e 	bne	r3,zero,400bad4 <__muldf3+0x120>
 400ba50:	880690fa 	slli	r3,r17,3
 400ba54:	e022d77a 	srli	r17,fp,29
 400ba58:	e00a90fa 	slli	r5,fp,3
 400ba5c:	10bf0044 	addi	r2,r2,-1023
 400ba60:	88e2b03a 	or	r17,r17,r3
 400ba64:	8c402034 	orhi	r17,r17,128
 400ba68:	98a7883a 	add	r19,r19,r2
 400ba6c:	0007883a 	mov	r3,zero
 400ba70:	a9000428 	cmpgeui	r4,r21,16
 400ba74:	a5ccf03a 	xor	r6,r20,r23
 400ba78:	9a000044 	addi	r8,r19,1
 400ba7c:	20006b1e 	bne	r4,zero,400bc2c <__muldf3+0x278>
 400ba80:	a80490ba 	slli	r2,r21,2
 400ba84:	01010074 	movhi	r4,1025
 400ba88:	1109883a 	add	r4,r2,r4
 400ba8c:	20aea517 	ldw	r2,-17772(r4)
 400ba90:	1000683a 	jmp	r2
 400ba94:	0400bc2c 	andhi	r16,zero,752
 400ba98:	0400baf4 	movhi	r16,747
 400ba9c:	0400baf4 	movhi	r16,747
 400baa0:	0400baf0 	cmpltui	r16,zero,747
 400baa4:	0400bb00 	call	400bb0 <__alt_mem_dram_controller-0x3bff450>
 400baa8:	0400bb00 	call	400bb0 <__alt_mem_dram_controller-0x3bff450>
 400baac:	0400be7c 	xorhi	r16,zero,761
 400bab0:	0400baf0 	cmpltui	r16,zero,747
 400bab4:	0400bb00 	call	400bb0 <__alt_mem_dram_controller-0x3bff450>
 400bab8:	0400be7c 	xorhi	r16,zero,761
 400babc:	0400bb00 	call	400bb0 <__alt_mem_dram_controller-0x3bff450>
 400bac0:	0400baf0 	cmpltui	r16,zero,747
 400bac4:	0400be2c 	andhi	r16,zero,760
 400bac8:	0400be2c 	andhi	r16,zero,760
 400bacc:	0400be2c 	andhi	r16,zero,760
 400bad0:	0400bf08 	cmpgei	r16,zero,764
 400bad4:	e44ab03a 	or	r5,fp,r17
 400bad8:	9cc1ffc4 	addi	r19,r19,2047
 400badc:	2800d51e 	bne	r5,zero,400be34 <__muldf3+0x480>
 400bae0:	ad400094 	ori	r21,r21,2
 400bae4:	0023883a 	mov	r17,zero
 400bae8:	00c00084 	movi	r3,2
 400baec:	003fe006 	br	400ba70 <__muldf3+0xbc>
 400baf0:	b80d883a 	mov	r6,r23
 400baf4:	8821883a 	mov	r16,r17
 400baf8:	2825883a 	mov	r18,r5
 400bafc:	182d883a 	mov	r22,r3
 400bb00:	b08000a0 	cmpeqi	r2,r22,2
 400bb04:	1000451e 	bne	r2,zero,400bc1c <__muldf3+0x268>
 400bb08:	b08000e0 	cmpeqi	r2,r22,3
 400bb0c:	1001401e 	bne	r2,zero,400c010 <__muldf3+0x65c>
 400bb10:	b0800060 	cmpeqi	r2,r22,1
 400bb14:	1000ab26 	beq	r2,zero,400bdc4 <__muldf3+0x410>
 400bb18:	0007883a 	mov	r3,zero
 400bb1c:	0021883a 	mov	r16,zero
 400bb20:	0025883a 	mov	r18,zero
 400bb24:	30803fcc 	andi	r2,r6,255
 400bb28:	1806953a 	slli	r3,r3,20
 400bb2c:	100497fa 	slli	r2,r2,31
 400bb30:	1c06b03a 	or	r3,r3,r16
 400bb34:	1886b03a 	or	r3,r3,r2
 400bb38:	9005883a 	mov	r2,r18
 400bb3c:	dfc00a17 	ldw	ra,40(sp)
 400bb40:	df000917 	ldw	fp,36(sp)
 400bb44:	ddc00817 	ldw	r23,32(sp)
 400bb48:	dd800717 	ldw	r22,28(sp)
 400bb4c:	dd400617 	ldw	r21,24(sp)
 400bb50:	dd000517 	ldw	r20,20(sp)
 400bb54:	dcc00417 	ldw	r19,16(sp)
 400bb58:	dc800317 	ldw	r18,12(sp)
 400bb5c:	dc400217 	ldw	r17,8(sp)
 400bb60:	dc000117 	ldw	r16,4(sp)
 400bb64:	dec00b04 	addi	sp,sp,44
 400bb68:	f800283a 	ret
 400bb6c:	8124b03a 	or	r18,r16,r4
 400bb70:	9000bd26 	beq	r18,zero,400be68 <__muldf3+0x4b4>
 400bb74:	d9c00015 	stw	r7,0(sp)
 400bb78:	8000ff26 	beq	r16,zero,400bf78 <__muldf3+0x5c4>
 400bb7c:	8009883a 	mov	r4,r16
 400bb80:	400cb780 	call	400cb78 <__clzsi2>
 400bb84:	d9c00017 	ldw	r7,0(sp)
 400bb88:	113ffd44 	addi	r4,r2,-11
 400bb8c:	00c00744 	movi	r3,29
 400bb90:	14bffe04 	addi	r18,r2,-8
 400bb94:	1907c83a 	sub	r3,r3,r4
 400bb98:	84a0983a 	sll	r16,r16,r18
 400bb9c:	98c6d83a 	srl	r3,r19,r3
 400bba0:	9ca4983a 	sll	r18,r19,r18
 400bba4:	1c20b03a 	or	r16,r3,r16
 400bba8:	04ff0344 	movi	r19,-1011
 400bbac:	98a7c83a 	sub	r19,r19,r2
 400bbb0:	002b883a 	mov	r21,zero
 400bbb4:	002d883a 	mov	r22,zero
 400bbb8:	003f9c06 	br	400ba2c <__muldf3+0x78>
 400bbbc:	8124b03a 	or	r18,r16,r4
 400bbc0:	9000a41e 	bne	r18,zero,400be54 <__muldf3+0x4a0>
 400bbc4:	0021883a 	mov	r16,zero
 400bbc8:	05400204 	movi	r21,8
 400bbcc:	04c1ffc4 	movi	r19,2047
 400bbd0:	05800084 	movi	r22,2
 400bbd4:	003f9506 	br	400ba2c <__muldf3+0x78>
 400bbd8:	e44ab03a 	or	r5,fp,r17
 400bbdc:	28009926 	beq	r5,zero,400be44 <__muldf3+0x490>
 400bbe0:	8800da26 	beq	r17,zero,400bf4c <__muldf3+0x598>
 400bbe4:	8809883a 	mov	r4,r17
 400bbe8:	400cb780 	call	400cb78 <__clzsi2>
 400bbec:	11bffd44 	addi	r6,r2,-11
 400bbf0:	01000744 	movi	r4,29
 400bbf4:	117ffe04 	addi	r5,r2,-8
 400bbf8:	2189c83a 	sub	r4,r4,r6
 400bbfc:	8962983a 	sll	r17,r17,r5
 400bc00:	e108d83a 	srl	r4,fp,r4
 400bc04:	e14a983a 	sll	r5,fp,r5
 400bc08:	2462b03a 	or	r17,r4,r17
 400bc0c:	9885c83a 	sub	r2,r19,r2
 400bc10:	14ff0344 	addi	r19,r2,-1011
 400bc14:	0007883a 	mov	r3,zero
 400bc18:	003f9506 	br	400ba70 <__muldf3+0xbc>
 400bc1c:	00c1ffc4 	movi	r3,2047
 400bc20:	0021883a 	mov	r16,zero
 400bc24:	0025883a 	mov	r18,zero
 400bc28:	003fbe06 	br	400bb24 <__muldf3+0x170>
 400bc2c:	9008d43a 	srli	r4,r18,16
 400bc30:	281ed43a 	srli	r15,r5,16
 400bc34:	94bfffcc 	andi	r18,r18,65535
 400bc38:	297fffcc 	andi	r5,r5,65535
 400bc3c:	2c85383a 	mul	r2,r5,r18
 400bc40:	214f383a 	mul	r7,r4,r5
 400bc44:	7c87383a 	mul	r3,r15,r18
 400bc48:	1012d43a 	srli	r9,r2,16
 400bc4c:	23dd383a 	mul	r14,r4,r15
 400bc50:	19c7883a 	add	r3,r3,r7
 400bc54:	48d3883a 	add	r9,r9,r3
 400bc58:	49c0022e 	bgeu	r9,r7,400bc64 <__muldf3+0x2b0>
 400bc5c:	00c00074 	movhi	r3,1
 400bc60:	70dd883a 	add	r14,r14,r3
 400bc64:	881ad43a 	srli	r13,r17,16
 400bc68:	8c7fffcc 	andi	r17,r17,65535
 400bc6c:	8c87383a 	mul	r3,r17,r18
 400bc70:	244f383a 	mul	r7,r4,r17
 400bc74:	6ca5383a 	mul	r18,r13,r18
 400bc78:	1816d43a 	srli	r11,r3,16
 400bc7c:	4814943a 	slli	r10,r9,16
 400bc80:	91e5883a 	add	r18,r18,r7
 400bc84:	10bfffcc 	andi	r2,r2,65535
 400bc88:	5c97883a 	add	r11,r11,r18
 400bc8c:	4818d43a 	srli	r12,r9,16
 400bc90:	2349383a 	mul	r4,r4,r13
 400bc94:	5095883a 	add	r10,r10,r2
 400bc98:	59c0022e 	bgeu	r11,r7,400bca4 <__muldf3+0x2f0>
 400bc9c:	00800074 	movhi	r2,1
 400bca0:	2089883a 	add	r4,r4,r2
 400bca4:	8028d43a 	srli	r20,r16,16
 400bca8:	827fffcc 	andi	r9,r16,65535
 400bcac:	2a6b383a 	mul	r21,r5,r9
 400bcb0:	7a45383a 	mul	r2,r15,r9
 400bcb4:	a14b383a 	mul	r5,r20,r5
 400bcb8:	580e943a 	slli	r7,r11,16
 400bcbc:	a82cd43a 	srli	r22,r21,16
 400bcc0:	5824d43a 	srli	r18,r11,16
 400bcc4:	18ffffcc 	andi	r3,r3,65535
 400bcc8:	1145883a 	add	r2,r2,r5
 400bccc:	38cf883a 	add	r7,r7,r3
 400bcd0:	b085883a 	add	r2,r22,r2
 400bcd4:	7d1f383a 	mul	r15,r15,r20
 400bcd8:	9117883a 	add	r11,r18,r4
 400bcdc:	61c7883a 	add	r3,r12,r7
 400bce0:	1140022e 	bgeu	r2,r5,400bcec <__muldf3+0x338>
 400bce4:	01000074 	movhi	r4,1
 400bce8:	791f883a 	add	r15,r15,r4
 400bcec:	8a65383a 	mul	r18,r17,r9
 400bcf0:	6a53383a 	mul	r9,r13,r9
 400bcf4:	a463383a 	mul	r17,r20,r17
 400bcf8:	9020d43a 	srli	r16,r18,16
 400bcfc:	100ad43a 	srli	r5,r2,16
 400bd00:	1004943a 	slli	r2,r2,16
 400bd04:	4c53883a 	add	r9,r9,r17
 400bd08:	ab3fffcc 	andi	r12,r21,65535
 400bd0c:	8253883a 	add	r9,r16,r9
 400bd10:	6d1b383a 	mul	r13,r13,r20
 400bd14:	2bdf883a 	add	r15,r5,r15
 400bd18:	1305883a 	add	r2,r2,r12
 400bd1c:	4c40022e 	bgeu	r9,r17,400bd28 <__muldf3+0x374>
 400bd20:	01000074 	movhi	r4,1
 400bd24:	691b883a 	add	r13,r13,r4
 400bd28:	4808943a 	slli	r4,r9,16
 400bd2c:	917fffcc 	andi	r5,r18,65535
 400bd30:	1b87883a 	add	r3,r3,r14
 400bd34:	2149883a 	add	r4,r4,r5
 400bd38:	19cf803a 	cmpltu	r7,r3,r7
 400bd3c:	22c9883a 	add	r4,r4,r11
 400bd40:	1887883a 	add	r3,r3,r2
 400bd44:	21dd883a 	add	r14,r4,r7
 400bd48:	1885803a 	cmpltu	r2,r3,r2
 400bd4c:	73cb883a 	add	r5,r14,r15
 400bd50:	4812d43a 	srli	r9,r9,16
 400bd54:	2899883a 	add	r12,r5,r2
 400bd58:	22c9803a 	cmpltu	r4,r4,r11
 400bd5c:	71e1803a 	cmpltu	r16,r14,r7
 400bd60:	2bcb803a 	cmpltu	r5,r5,r15
 400bd64:	2420b03a 	or	r16,r4,r16
 400bd68:	6085803a 	cmpltu	r2,r12,r2
 400bd6c:	2884b03a 	or	r2,r5,r2
 400bd70:	8261883a 	add	r16,r16,r9
 400bd74:	1824927a 	slli	r18,r3,9
 400bd78:	80a1883a 	add	r16,r16,r2
 400bd7c:	8361883a 	add	r16,r16,r13
 400bd80:	8020927a 	slli	r16,r16,9
 400bd84:	1806d5fa 	srli	r3,r3,23
 400bd88:	600ad5fa 	srli	r5,r12,23
 400bd8c:	6004927a 	slli	r2,r12,9
 400bd90:	92a4b03a 	or	r18,r18,r10
 400bd94:	9024c03a 	cmpne	r18,r18,zero
 400bd98:	90e4b03a 	or	r18,r18,r3
 400bd9c:	80c0402c 	andhi	r3,r16,256
 400bda0:	90a4b03a 	or	r18,r18,r2
 400bda4:	8160b03a 	or	r16,r16,r5
 400bda8:	18007e26 	beq	r3,zero,400bfa4 <__muldf3+0x5f0>
 400bdac:	9006d07a 	srli	r3,r18,1
 400bdb0:	800497fa 	slli	r2,r16,31
 400bdb4:	9480004c 	andi	r18,r18,1
 400bdb8:	8020d07a 	srli	r16,r16,1
 400bdbc:	1c86b03a 	or	r3,r3,r18
 400bdc0:	18a4b03a 	or	r18,r3,r2
 400bdc4:	4100ffc4 	addi	r4,r8,1023
 400bdc8:	0100320e 	bge	zero,r4,400be94 <__muldf3+0x4e0>
 400bdcc:	908001cc 	andi	r2,r18,7
 400bdd0:	10000726 	beq	r2,zero,400bdf0 <__muldf3+0x43c>
 400bdd4:	908003cc 	andi	r2,r18,15
 400bdd8:	10800120 	cmpeqi	r2,r2,4
 400bddc:	1000041e 	bne	r2,zero,400bdf0 <__muldf3+0x43c>
 400bde0:	90800104 	addi	r2,r18,4
 400bde4:	14a5803a 	cmpltu	r18,r2,r18
 400bde8:	84a1883a 	add	r16,r16,r18
 400bdec:	1025883a 	mov	r18,r2
 400bdf0:	8080402c 	andhi	r2,r16,256
 400bdf4:	10000426 	beq	r2,zero,400be08 <__muldf3+0x454>
 400bdf8:	00bfc034 	movhi	r2,65280
 400bdfc:	10bfffc4 	addi	r2,r2,-1
 400be00:	80a0703a 	and	r16,r16,r2
 400be04:	41010004 	addi	r4,r8,1024
 400be08:	2081ffc8 	cmpgei	r2,r4,2047
 400be0c:	103f831e 	bne	r2,zero,400bc1c <__muldf3+0x268>
 400be10:	8004977a 	slli	r2,r16,29
 400be14:	9024d0fa 	srli	r18,r18,3
 400be18:	8020927a 	slli	r16,r16,9
 400be1c:	20c1ffcc 	andi	r3,r4,2047
 400be20:	14a4b03a 	or	r18,r2,r18
 400be24:	8020d33a 	srli	r16,r16,12
 400be28:	003f3e06 	br	400bb24 <__muldf3+0x170>
 400be2c:	a00d883a 	mov	r6,r20
 400be30:	003f3306 	br	400bb00 <__muldf3+0x14c>
 400be34:	ad4000d4 	ori	r21,r21,3
 400be38:	e00b883a 	mov	r5,fp
 400be3c:	00c000c4 	movi	r3,3
 400be40:	003f0b06 	br	400ba70 <__muldf3+0xbc>
 400be44:	ad400054 	ori	r21,r21,1
 400be48:	0023883a 	mov	r17,zero
 400be4c:	00c00044 	movi	r3,1
 400be50:	003f0706 	br	400ba70 <__muldf3+0xbc>
 400be54:	2025883a 	mov	r18,r4
 400be58:	05400304 	movi	r21,12
 400be5c:	04c1ffc4 	movi	r19,2047
 400be60:	058000c4 	movi	r22,3
 400be64:	003ef106 	br	400ba2c <__muldf3+0x78>
 400be68:	0021883a 	mov	r16,zero
 400be6c:	05400104 	movi	r21,4
 400be70:	0027883a 	mov	r19,zero
 400be74:	05800044 	movi	r22,1
 400be78:	003eec06 	br	400ba2c <__muldf3+0x78>
 400be7c:	04000434 	movhi	r16,16
 400be80:	000d883a 	mov	r6,zero
 400be84:	843fffc4 	addi	r16,r16,-1
 400be88:	04bfffc4 	movi	r18,-1
 400be8c:	00c1ffc4 	movi	r3,2047
 400be90:	003f2406 	br	400bb24 <__muldf3+0x170>
 400be94:	00800044 	movi	r2,1
 400be98:	1105c83a 	sub	r2,r2,r4
 400be9c:	10c00e48 	cmpgei	r3,r2,57
 400bea0:	183f1d1e 	bne	r3,zero,400bb18 <__muldf3+0x164>
 400bea4:	10c00808 	cmpgei	r3,r2,32
 400bea8:	1800401e 	bne	r3,zero,400bfac <__muldf3+0x5f8>
 400beac:	42010784 	addi	r8,r8,1054
 400beb0:	8206983a 	sll	r3,r16,r8
 400beb4:	9088d83a 	srl	r4,r18,r2
 400beb8:	9210983a 	sll	r8,r18,r8
 400bebc:	80a0d83a 	srl	r16,r16,r2
 400bec0:	1904b03a 	or	r2,r3,r4
 400bec4:	4024c03a 	cmpne	r18,r8,zero
 400bec8:	1484b03a 	or	r2,r2,r18
 400becc:	10c001cc 	andi	r3,r2,7
 400bed0:	18000726 	beq	r3,zero,400bef0 <__muldf3+0x53c>
 400bed4:	10c003cc 	andi	r3,r2,15
 400bed8:	18c00120 	cmpeqi	r3,r3,4
 400bedc:	1800041e 	bne	r3,zero,400bef0 <__muldf3+0x53c>
 400bee0:	10c00104 	addi	r3,r2,4
 400bee4:	1885803a 	cmpltu	r2,r3,r2
 400bee8:	80a1883a 	add	r16,r16,r2
 400beec:	1805883a 	mov	r2,r3
 400bef0:	80c0202c 	andhi	r3,r16,128
 400bef4:	18004226 	beq	r3,zero,400c000 <__muldf3+0x64c>
 400bef8:	00c00044 	movi	r3,1
 400befc:	0021883a 	mov	r16,zero
 400bf00:	0025883a 	mov	r18,zero
 400bf04:	003f0706 	br	400bb24 <__muldf3+0x170>
 400bf08:	8080022c 	andhi	r2,r16,8
 400bf0c:	10000926 	beq	r2,zero,400bf34 <__muldf3+0x580>
 400bf10:	8880022c 	andhi	r2,r17,8
 400bf14:	1000071e 	bne	r2,zero,400bf34 <__muldf3+0x580>
 400bf18:	00800434 	movhi	r2,16
 400bf1c:	8c000234 	orhi	r16,r17,8
 400bf20:	10bfffc4 	addi	r2,r2,-1
 400bf24:	80a0703a 	and	r16,r16,r2
 400bf28:	b80d883a 	mov	r6,r23
 400bf2c:	2825883a 	mov	r18,r5
 400bf30:	003fd606 	br	400be8c <__muldf3+0x4d8>
 400bf34:	00800434 	movhi	r2,16
 400bf38:	84000234 	orhi	r16,r16,8
 400bf3c:	10bfffc4 	addi	r2,r2,-1
 400bf40:	80a0703a 	and	r16,r16,r2
 400bf44:	a00d883a 	mov	r6,r20
 400bf48:	003fd006 	br	400be8c <__muldf3+0x4d8>
 400bf4c:	e009883a 	mov	r4,fp
 400bf50:	400cb780 	call	400cb78 <__clzsi2>
 400bf54:	11800544 	addi	r6,r2,21
 400bf58:	31000748 	cmpgei	r4,r6,29
 400bf5c:	1007883a 	mov	r3,r2
 400bf60:	10800804 	addi	r2,r2,32
 400bf64:	203f2226 	beq	r4,zero,400bbf0 <__muldf3+0x23c>
 400bf68:	1c7ffe04 	addi	r17,r3,-8
 400bf6c:	e462983a 	sll	r17,fp,r17
 400bf70:	000b883a 	mov	r5,zero
 400bf74:	003f2506 	br	400bc0c <__muldf3+0x258>
 400bf78:	400cb780 	call	400cb78 <__clzsi2>
 400bf7c:	11000544 	addi	r4,r2,21
 400bf80:	21400748 	cmpgei	r5,r4,29
 400bf84:	1007883a 	mov	r3,r2
 400bf88:	d9c00017 	ldw	r7,0(sp)
 400bf8c:	10800804 	addi	r2,r2,32
 400bf90:	283efe26 	beq	r5,zero,400bb8c <__muldf3+0x1d8>
 400bf94:	1c3ffe04 	addi	r16,r3,-8
 400bf98:	9c20983a 	sll	r16,r19,r16
 400bf9c:	0025883a 	mov	r18,zero
 400bfa0:	003f0106 	br	400bba8 <__muldf3+0x1f4>
 400bfa4:	9811883a 	mov	r8,r19
 400bfa8:	003f8606 	br	400bdc4 <__muldf3+0x410>
 400bfac:	00fff844 	movi	r3,-31
 400bfb0:	1907c83a 	sub	r3,r3,r4
 400bfb4:	10800820 	cmpeqi	r2,r2,32
 400bfb8:	80c6d83a 	srl	r3,r16,r3
 400bfbc:	1000031e 	bne	r2,zero,400bfcc <__muldf3+0x618>
 400bfc0:	42010f84 	addi	r8,r8,1086
 400bfc4:	8220983a 	sll	r16,r16,r8
 400bfc8:	9424b03a 	or	r18,r18,r16
 400bfcc:	9024c03a 	cmpne	r18,r18,zero
 400bfd0:	90c4b03a 	or	r2,r18,r3
 400bfd4:	148001cc 	andi	r18,r2,7
 400bfd8:	9000051e 	bne	r18,zero,400bff0 <__muldf3+0x63c>
 400bfdc:	0021883a 	mov	r16,zero
 400bfe0:	1004d0fa 	srli	r2,r2,3
 400bfe4:	0007883a 	mov	r3,zero
 400bfe8:	14a4b03a 	or	r18,r2,r18
 400bfec:	003ecd06 	br	400bb24 <__muldf3+0x170>
 400bff0:	10c003cc 	andi	r3,r2,15
 400bff4:	18c00118 	cmpnei	r3,r3,4
 400bff8:	0021883a 	mov	r16,zero
 400bffc:	183fb81e 	bne	r3,zero,400bee0 <__muldf3+0x52c>
 400c000:	8006927a 	slli	r3,r16,9
 400c004:	8024977a 	slli	r18,r16,29
 400c008:	1820d33a 	srli	r16,r3,12
 400c00c:	003ff406 	br	400bfe0 <__muldf3+0x62c>
 400c010:	00800434 	movhi	r2,16
 400c014:	84000234 	orhi	r16,r16,8
 400c018:	10bfffc4 	addi	r2,r2,-1
 400c01c:	80a0703a 	and	r16,r16,r2
 400c020:	003f9a06 	br	400be8c <__muldf3+0x4d8>

0400c024 <__subdf3>:
 400c024:	00c00434 	movhi	r3,16
 400c028:	3812d53a 	srli	r9,r7,20
 400c02c:	18ffffc4 	addi	r3,r3,-1
 400c030:	defffb04 	addi	sp,sp,-20
 400c034:	28d0703a 	and	r8,r5,r3
 400c038:	38c6703a 	and	r3,r7,r3
 400c03c:	2804d7fa 	srli	r2,r5,31
 400c040:	401090fa 	slli	r8,r8,3
 400c044:	280ad53a 	srli	r5,r5,20
 400c048:	180690fa 	slli	r3,r3,3
 400c04c:	dcc00315 	stw	r19,12(sp)
 400c050:	dc400115 	stw	r17,4(sp)
 400c054:	2026d77a 	srli	r19,r4,29
 400c058:	3022d77a 	srli	r17,r6,29
 400c05c:	4b41ffcc 	andi	r13,r9,2047
 400c060:	dc800215 	stw	r18,8(sp)
 400c064:	dc000015 	stw	r16,0(sp)
 400c068:	dfc00415 	stw	ra,16(sp)
 400c06c:	6a41ffe0 	cmpeqi	r9,r13,2047
 400c070:	1025883a 	mov	r18,r2
 400c074:	201690fa 	slli	r11,r4,3
 400c078:	380ed7fa 	srli	r7,r7,31
 400c07c:	301490fa 	slli	r10,r6,3
 400c080:	2c01ffcc 	andi	r16,r5,2047
 400c084:	10803fcc 	andi	r2,r2,255
 400c088:	9a10b03a 	or	r8,r19,r8
 400c08c:	88c6b03a 	or	r3,r17,r3
 400c090:	48006e1e 	bne	r9,zero,400c24c <__subdf3+0x228>
 400c094:	3a40005c 	xori	r9,r7,1
 400c098:	834bc83a 	sub	r5,r16,r13
 400c09c:	12405726 	beq	r2,r9,400c1fc <__subdf3+0x1d8>
 400c0a0:	01406f0e 	bge	zero,r5,400c260 <__subdf3+0x23c>
 400c0a4:	68007a26 	beq	r13,zero,400c290 <__subdf3+0x26c>
 400c0a8:	8081ffd8 	cmpnei	r2,r16,2047
 400c0ac:	10019f26 	beq	r2,zero,400c72c <__subdf3+0x708>
 400c0b0:	18c02034 	orhi	r3,r3,128
 400c0b4:	28800e48 	cmpgei	r2,r5,57
 400c0b8:	1000f91e 	bne	r2,zero,400c4a0 <__subdf3+0x47c>
 400c0bc:	28800808 	cmpgei	r2,r5,32
 400c0c0:	1001451e 	bne	r2,zero,400c5d8 <__subdf3+0x5b4>
 400c0c4:	00800804 	movi	r2,32
 400c0c8:	1145c83a 	sub	r2,r2,r5
 400c0cc:	18a2983a 	sll	r17,r3,r2
 400c0d0:	5148d83a 	srl	r4,r10,r5
 400c0d4:	5084983a 	sll	r2,r10,r2
 400c0d8:	1946d83a 	srl	r3,r3,r5
 400c0dc:	8922b03a 	or	r17,r17,r4
 400c0e0:	1004c03a 	cmpne	r2,r2,zero
 400c0e4:	88a2b03a 	or	r17,r17,r2
 400c0e8:	40d1c83a 	sub	r8,r8,r3
 400c0ec:	5c63c83a 	sub	r17,r11,r17
 400c0f0:	5c49803a 	cmpltu	r4,r11,r17
 400c0f4:	4109c83a 	sub	r4,r8,r4
 400c0f8:	2080202c 	andhi	r2,r4,128
 400c0fc:	1000a526 	beq	r2,zero,400c394 <__subdf3+0x370>
 400c100:	04c02034 	movhi	r19,128
 400c104:	9cffffc4 	addi	r19,r19,-1
 400c108:	24e6703a 	and	r19,r4,r19
 400c10c:	9800db26 	beq	r19,zero,400c47c <__subdf3+0x458>
 400c110:	9809883a 	mov	r4,r19
 400c114:	400cb780 	call	400cb78 <__clzsi2>
 400c118:	117ffe04 	addi	r5,r2,-8
 400c11c:	01000804 	movi	r4,32
 400c120:	2149c83a 	sub	r4,r4,r5
 400c124:	8906d83a 	srl	r3,r17,r4
 400c128:	9948983a 	sll	r4,r19,r5
 400c12c:	8962983a 	sll	r17,r17,r5
 400c130:	1908b03a 	or	r4,r3,r4
 400c134:	2c00cc16 	blt	r5,r16,400c468 <__subdf3+0x444>
 400c138:	2c0bc83a 	sub	r5,r5,r16
 400c13c:	28c00044 	addi	r3,r5,1
 400c140:	18800808 	cmpgei	r2,r3,32
 400c144:	1001171e 	bne	r2,zero,400c5a4 <__subdf3+0x580>
 400c148:	00800804 	movi	r2,32
 400c14c:	10c5c83a 	sub	r2,r2,r3
 400c150:	88cad83a 	srl	r5,r17,r3
 400c154:	88a2983a 	sll	r17,r17,r2
 400c158:	2084983a 	sll	r2,r4,r2
 400c15c:	20c8d83a 	srl	r4,r4,r3
 400c160:	8822c03a 	cmpne	r17,r17,zero
 400c164:	1144b03a 	or	r2,r2,r5
 400c168:	1462b03a 	or	r17,r2,r17
 400c16c:	0021883a 	mov	r16,zero
 400c170:	888001cc 	andi	r2,r17,7
 400c174:	10000726 	beq	r2,zero,400c194 <__subdf3+0x170>
 400c178:	888003cc 	andi	r2,r17,15
 400c17c:	10800120 	cmpeqi	r2,r2,4
 400c180:	1000041e 	bne	r2,zero,400c194 <__subdf3+0x170>
 400c184:	88c00104 	addi	r3,r17,4
 400c188:	1c63803a 	cmpltu	r17,r3,r17
 400c18c:	2449883a 	add	r4,r4,r17
 400c190:	1823883a 	mov	r17,r3
 400c194:	2080202c 	andhi	r2,r4,128
 400c198:	10008026 	beq	r2,zero,400c39c <__subdf3+0x378>
 400c19c:	81400044 	addi	r5,r16,1
 400c1a0:	2881ffe0 	cmpeqi	r2,r5,2047
 400c1a4:	2941ffcc 	andi	r5,r5,2047
 400c1a8:	1000921e 	bne	r2,zero,400c3f4 <__subdf3+0x3d0>
 400c1ac:	00bfe034 	movhi	r2,65408
 400c1b0:	10bfffc4 	addi	r2,r2,-1
 400c1b4:	2088703a 	and	r4,r4,r2
 400c1b8:	2006927a 	slli	r3,r4,9
 400c1bc:	8822d0fa 	srli	r17,r17,3
 400c1c0:	2004977a 	slli	r2,r4,29
 400c1c4:	1806d33a 	srli	r3,r3,12
 400c1c8:	1444b03a 	or	r2,r2,r17
 400c1cc:	280a953a 	slli	r5,r5,20
 400c1d0:	94803fcc 	andi	r18,r18,255
 400c1d4:	902497fa 	slli	r18,r18,31
 400c1d8:	28c6b03a 	or	r3,r5,r3
 400c1dc:	1c86b03a 	or	r3,r3,r18
 400c1e0:	dfc00417 	ldw	ra,16(sp)
 400c1e4:	dcc00317 	ldw	r19,12(sp)
 400c1e8:	dc800217 	ldw	r18,8(sp)
 400c1ec:	dc400117 	ldw	r17,4(sp)
 400c1f0:	dc000017 	ldw	r16,0(sp)
 400c1f4:	dec00504 	addi	sp,sp,20
 400c1f8:	f800283a 	ret
 400c1fc:	01402e0e 	bge	zero,r5,400c2b8 <__subdf3+0x294>
 400c200:	68005526 	beq	r13,zero,400c358 <__subdf3+0x334>
 400c204:	8081ffd8 	cmpnei	r2,r16,2047
 400c208:	10013b26 	beq	r2,zero,400c6f8 <__subdf3+0x6d4>
 400c20c:	18c02034 	orhi	r3,r3,128
 400c210:	28800e48 	cmpgei	r2,r5,57
 400c214:	10006d1e 	bne	r2,zero,400c3cc <__subdf3+0x3a8>
 400c218:	28800808 	cmpgei	r2,r5,32
 400c21c:	10010826 	beq	r2,zero,400c640 <__subdf3+0x61c>
 400c220:	2c7ff804 	addi	r17,r5,-32
 400c224:	29000820 	cmpeqi	r4,r5,32
 400c228:	1c44d83a 	srl	r2,r3,r17
 400c22c:	2000041e 	bne	r4,zero,400c240 <__subdf3+0x21c>
 400c230:	01001004 	movi	r4,64
 400c234:	214bc83a 	sub	r5,r4,r5
 400c238:	1946983a 	sll	r3,r3,r5
 400c23c:	50d4b03a 	or	r10,r10,r3
 400c240:	5022c03a 	cmpne	r17,r10,zero
 400c244:	88a2b03a 	or	r17,r17,r2
 400c248:	00006206 	br	400c3d4 <__subdf3+0x3b0>
 400c24c:	1a98b03a 	or	r12,r3,r10
 400c250:	817e0044 	addi	r5,r16,-2047
 400c254:	6000161e 	bne	r12,zero,400c2b0 <__subdf3+0x28c>
 400c258:	3a40005c 	xori	r9,r7,1
 400c25c:	12401626 	beq	r2,r9,400c2b8 <__subdf3+0x294>
 400c260:	28002e26 	beq	r5,zero,400c31c <__subdf3+0x2f8>
 400c264:	6c0bc83a 	sub	r5,r13,r16
 400c268:	4825883a 	mov	r18,r9
 400c26c:	80009e1e 	bne	r16,zero,400c4e8 <__subdf3+0x4c4>
 400c270:	42c4b03a 	or	r2,r8,r11
 400c274:	10010926 	beq	r2,zero,400c69c <__subdf3+0x678>
 400c278:	28bfffc4 	addi	r2,r5,-1
 400c27c:	10016826 	beq	r2,zero,400c820 <__subdf3+0x7fc>
 400c280:	2941ffd8 	cmpnei	r5,r5,2047
 400c284:	28015f26 	beq	r5,zero,400c804 <__subdf3+0x7e0>
 400c288:	100b883a 	mov	r5,r2
 400c28c:	00009906 	br	400c4f4 <__subdf3+0x4d0>
 400c290:	1a84b03a 	or	r2,r3,r10
 400c294:	1000b126 	beq	r2,zero,400c55c <__subdf3+0x538>
 400c298:	28bfffc4 	addi	r2,r5,-1
 400c29c:	10011d26 	beq	r2,zero,400c714 <__subdf3+0x6f0>
 400c2a0:	2941ffd8 	cmpnei	r5,r5,2047
 400c2a4:	28011426 	beq	r5,zero,400c6f8 <__subdf3+0x6d4>
 400c2a8:	100b883a 	mov	r5,r2
 400c2ac:	003f8106 	br	400c0b4 <__subdf3+0x90>
 400c2b0:	3a403fcc 	andi	r9,r7,255
 400c2b4:	11ffea1e 	bne	r2,r7,400c260 <__subdf3+0x23c>
 400c2b8:	28007c26 	beq	r5,zero,400c4ac <__subdf3+0x488>
 400c2bc:	6c0bc83a 	sub	r5,r13,r16
 400c2c0:	8000d726 	beq	r16,zero,400c620 <__subdf3+0x5fc>
 400c2c4:	6881ffd8 	cmpnei	r2,r13,2047
 400c2c8:	10012626 	beq	r2,zero,400c764 <__subdf3+0x740>
 400c2cc:	42002034 	orhi	r8,r8,128
 400c2d0:	28800e48 	cmpgei	r2,r5,57
 400c2d4:	10012a1e 	bne	r2,zero,400c780 <__subdf3+0x75c>
 400c2d8:	28800808 	cmpgei	r2,r5,32
 400c2dc:	1001821e 	bne	r2,zero,400c8e8 <__subdf3+0x8c4>
 400c2e0:	00800804 	movi	r2,32
 400c2e4:	1145c83a 	sub	r2,r2,r5
 400c2e8:	40a2983a 	sll	r17,r8,r2
 400c2ec:	5948d83a 	srl	r4,r11,r5
 400c2f0:	5884983a 	sll	r2,r11,r2
 400c2f4:	4150d83a 	srl	r8,r8,r5
 400c2f8:	8922b03a 	or	r17,r17,r4
 400c2fc:	1004c03a 	cmpne	r2,r2,zero
 400c300:	88a2b03a 	or	r17,r17,r2
 400c304:	1a07883a 	add	r3,r3,r8
 400c308:	8aa3883a 	add	r17,r17,r10
 400c30c:	8a89803a 	cmpltu	r4,r17,r10
 400c310:	20c9883a 	add	r4,r4,r3
 400c314:	6821883a 	mov	r16,r13
 400c318:	00003106 	br	400c3e0 <__subdf3+0x3bc>
 400c31c:	80800044 	addi	r2,r16,1
 400c320:	1081ff8c 	andi	r2,r2,2046
 400c324:	1000821e 	bne	r2,zero,400c530 <__subdf3+0x50c>
 400c328:	42ceb03a 	or	r7,r8,r11
 400c32c:	1a84b03a 	or	r2,r3,r10
 400c330:	8000e11e 	bne	r16,zero,400c6b8 <__subdf3+0x694>
 400c334:	38012a26 	beq	r7,zero,400c7e0 <__subdf3+0x7bc>
 400c338:	1001461e 	bne	r2,zero,400c854 <__subdf3+0x830>
 400c33c:	4004977a 	slli	r2,r8,29
 400c340:	00c80034 	movhi	r3,8192
 400c344:	18ffffc4 	addi	r3,r3,-1
 400c348:	20c8703a 	and	r4,r4,r3
 400c34c:	4010d0fa 	srli	r8,r8,3
 400c350:	1104b03a 	or	r2,r2,r4
 400c354:	00001806 	br	400c3b8 <__subdf3+0x394>
 400c358:	1a84b03a 	or	r2,r3,r10
 400c35c:	1000fa26 	beq	r2,zero,400c748 <__subdf3+0x724>
 400c360:	28bfffc4 	addi	r2,r5,-1
 400c364:	10000426 	beq	r2,zero,400c378 <__subdf3+0x354>
 400c368:	2941ffd8 	cmpnei	r5,r5,2047
 400c36c:	28013226 	beq	r5,zero,400c838 <__subdf3+0x814>
 400c370:	100b883a 	mov	r5,r2
 400c374:	003fa606 	br	400c210 <__subdf3+0x1ec>
 400c378:	5aa3883a 	add	r17,r11,r10
 400c37c:	40c9883a 	add	r4,r8,r3
 400c380:	8ad7803a 	cmpltu	r11,r17,r11
 400c384:	22c9883a 	add	r4,r4,r11
 400c388:	2080202c 	andhi	r2,r4,128
 400c38c:	10007a1e 	bne	r2,zero,400c578 <__subdf3+0x554>
 400c390:	04000044 	movi	r16,1
 400c394:	888001cc 	andi	r2,r17,7
 400c398:	103f771e 	bne	r2,zero,400c178 <__subdf3+0x154>
 400c39c:	8822d0fa 	srli	r17,r17,3
 400c3a0:	2004977a 	slli	r2,r4,29
 400c3a4:	2010d0fa 	srli	r8,r4,3
 400c3a8:	800b883a 	mov	r5,r16
 400c3ac:	8884b03a 	or	r2,r17,r2
 400c3b0:	28c1ffe0 	cmpeqi	r3,r5,2047
 400c3b4:	1800241e 	bne	r3,zero,400c448 <__subdf3+0x424>
 400c3b8:	00c00434 	movhi	r3,16
 400c3bc:	18ffffc4 	addi	r3,r3,-1
 400c3c0:	40c6703a 	and	r3,r8,r3
 400c3c4:	2941ffcc 	andi	r5,r5,2047
 400c3c8:	003f8006 	br	400c1cc <__subdf3+0x1a8>
 400c3cc:	1aa2b03a 	or	r17,r3,r10
 400c3d0:	8822c03a 	cmpne	r17,r17,zero
 400c3d4:	8ae3883a 	add	r17,r17,r11
 400c3d8:	8ac9803a 	cmpltu	r4,r17,r11
 400c3dc:	2209883a 	add	r4,r4,r8
 400c3e0:	2080202c 	andhi	r2,r4,128
 400c3e4:	103feb26 	beq	r2,zero,400c394 <__subdf3+0x370>
 400c3e8:	84000044 	addi	r16,r16,1
 400c3ec:	8081ffe0 	cmpeqi	r2,r16,2047
 400c3f0:	10006226 	beq	r2,zero,400c57c <__subdf3+0x558>
 400c3f4:	0141ffc4 	movi	r5,2047
 400c3f8:	0007883a 	mov	r3,zero
 400c3fc:	0005883a 	mov	r2,zero
 400c400:	003f7206 	br	400c1cc <__subdf3+0x1a8>
 400c404:	400e977a 	slli	r7,r8,29
 400c408:	4010d0fa 	srli	r8,r8,3
 400c40c:	1000ef26 	beq	r2,zero,400c7cc <__subdf3+0x7a8>
 400c410:	01480034 	movhi	r5,8192
 400c414:	297fffc4 	addi	r5,r5,-1
 400c418:	2144703a 	and	r2,r4,r5
 400c41c:	4100022c 	andhi	r4,r8,8
 400c420:	11c4b03a 	or	r2,r2,r7
 400c424:	20000826 	beq	r4,zero,400c448 <__subdf3+0x424>
 400c428:	1808d0fa 	srli	r4,r3,3
 400c42c:	21c0022c 	andhi	r7,r4,8
 400c430:	3800051e 	bne	r7,zero,400c448 <__subdf3+0x424>
 400c434:	1804977a 	slli	r2,r3,29
 400c438:	314c703a 	and	r6,r6,r5
 400c43c:	4825883a 	mov	r18,r9
 400c440:	3084b03a 	or	r2,r6,r2
 400c444:	2011883a 	mov	r8,r4
 400c448:	1206b03a 	or	r3,r2,r8
 400c44c:	18013e26 	beq	r3,zero,400c948 <__subdf3+0x924>
 400c450:	01000434 	movhi	r4,16
 400c454:	40c00234 	orhi	r3,r8,8
 400c458:	213fffc4 	addi	r4,r4,-1
 400c45c:	1906703a 	and	r3,r3,r4
 400c460:	0141ffc4 	movi	r5,2047
 400c464:	003f5906 	br	400c1cc <__subdf3+0x1a8>
 400c468:	00ffe034 	movhi	r3,65408
 400c46c:	18ffffc4 	addi	r3,r3,-1
 400c470:	8161c83a 	sub	r16,r16,r5
 400c474:	20c8703a 	and	r4,r4,r3
 400c478:	003f3d06 	br	400c170 <__subdf3+0x14c>
 400c47c:	8809883a 	mov	r4,r17
 400c480:	400cb780 	call	400cb78 <__clzsi2>
 400c484:	11400604 	addi	r5,r2,24
 400c488:	28c00808 	cmpgei	r3,r5,32
 400c48c:	183f2326 	beq	r3,zero,400c11c <__subdf3+0xf8>
 400c490:	113ffe04 	addi	r4,r2,-8
 400c494:	8908983a 	sll	r4,r17,r4
 400c498:	0023883a 	mov	r17,zero
 400c49c:	003f2506 	br	400c134 <__subdf3+0x110>
 400c4a0:	1aa2b03a 	or	r17,r3,r10
 400c4a4:	8822c03a 	cmpne	r17,r17,zero
 400c4a8:	003f1006 	br	400c0ec <__subdf3+0xc8>
 400c4ac:	80800044 	addi	r2,r16,1
 400c4b0:	11c1ff8c 	andi	r7,r2,2046
 400c4b4:	38006d1e 	bne	r7,zero,400c66c <__subdf3+0x648>
 400c4b8:	42c4b03a 	or	r2,r8,r11
 400c4bc:	8000be1e 	bne	r16,zero,400c7b8 <__subdf3+0x794>
 400c4c0:	1000f726 	beq	r2,zero,400c8a0 <__subdf3+0x87c>
 400c4c4:	1a84b03a 	or	r2,r3,r10
 400c4c8:	1000fc1e 	bne	r2,zero,400c8bc <__subdf3+0x898>
 400c4cc:	4006977a 	slli	r3,r8,29
 400c4d0:	00880034 	movhi	r2,8192
 400c4d4:	10bfffc4 	addi	r2,r2,-1
 400c4d8:	2084703a 	and	r2,r4,r2
 400c4dc:	4010d0fa 	srli	r8,r8,3
 400c4e0:	10c4b03a 	or	r2,r2,r3
 400c4e4:	003fb406 	br	400c3b8 <__subdf3+0x394>
 400c4e8:	6881ffd8 	cmpnei	r2,r13,2047
 400c4ec:	10009d26 	beq	r2,zero,400c764 <__subdf3+0x740>
 400c4f0:	42002034 	orhi	r8,r8,128
 400c4f4:	28800e48 	cmpgei	r2,r5,57
 400c4f8:	1000421e 	bne	r2,zero,400c604 <__subdf3+0x5e0>
 400c4fc:	28800808 	cmpgei	r2,r5,32
 400c500:	1000a21e 	bne	r2,zero,400c78c <__subdf3+0x768>
 400c504:	00800804 	movi	r2,32
 400c508:	1145c83a 	sub	r2,r2,r5
 400c50c:	40a2983a 	sll	r17,r8,r2
 400c510:	5948d83a 	srl	r4,r11,r5
 400c514:	5896983a 	sll	r11,r11,r2
 400c518:	4150d83a 	srl	r8,r8,r5
 400c51c:	8922b03a 	or	r17,r17,r4
 400c520:	5816c03a 	cmpne	r11,r11,zero
 400c524:	8ae2b03a 	or	r17,r17,r11
 400c528:	1a07c83a 	sub	r3,r3,r8
 400c52c:	00003706 	br	400c60c <__subdf3+0x5e8>
 400c530:	5aa3c83a 	sub	r17,r11,r10
 400c534:	40e7c83a 	sub	r19,r8,r3
 400c538:	5c49803a 	cmpltu	r4,r11,r17
 400c53c:	9927c83a 	sub	r19,r19,r4
 400c540:	9880202c 	andhi	r2,r19,128
 400c544:	1000661e 	bne	r2,zero,400c6e0 <__subdf3+0x6bc>
 400c548:	8cc4b03a 	or	r2,r17,r19
 400c54c:	103eef1e 	bne	r2,zero,400c10c <__subdf3+0xe8>
 400c550:	0011883a 	mov	r8,zero
 400c554:	0025883a 	mov	r18,zero
 400c558:	003f9706 	br	400c3b8 <__subdf3+0x394>
 400c55c:	4022977a 	slli	r17,r8,29
 400c560:	00880034 	movhi	r2,8192
 400c564:	10bfffc4 	addi	r2,r2,-1
 400c568:	2088703a 	and	r4,r4,r2
 400c56c:	4010d0fa 	srli	r8,r8,3
 400c570:	2444b03a 	or	r2,r4,r17
 400c574:	003f8e06 	br	400c3b0 <__subdf3+0x38c>
 400c578:	04000084 	movi	r16,2
 400c57c:	00bfe034 	movhi	r2,65408
 400c580:	10bfffc4 	addi	r2,r2,-1
 400c584:	8806d07a 	srli	r3,r17,1
 400c588:	2088703a 	and	r4,r4,r2
 400c58c:	200497fa 	slli	r2,r4,31
 400c590:	8c40004c 	andi	r17,r17,1
 400c594:	1c62b03a 	or	r17,r3,r17
 400c598:	2008d07a 	srli	r4,r4,1
 400c59c:	1462b03a 	or	r17,r2,r17
 400c5a0:	003ef306 	br	400c170 <__subdf3+0x14c>
 400c5a4:	297ff844 	addi	r5,r5,-31
 400c5a8:	18800820 	cmpeqi	r2,r3,32
 400c5ac:	214ad83a 	srl	r5,r4,r5
 400c5b0:	1000041e 	bne	r2,zero,400c5c4 <__subdf3+0x5a0>
 400c5b4:	00801004 	movi	r2,64
 400c5b8:	10c7c83a 	sub	r3,r2,r3
 400c5bc:	20c8983a 	sll	r4,r4,r3
 400c5c0:	8922b03a 	or	r17,r17,r4
 400c5c4:	8822c03a 	cmpne	r17,r17,zero
 400c5c8:	8962b03a 	or	r17,r17,r5
 400c5cc:	0009883a 	mov	r4,zero
 400c5d0:	0021883a 	mov	r16,zero
 400c5d4:	003f6f06 	br	400c394 <__subdf3+0x370>
 400c5d8:	2c7ff804 	addi	r17,r5,-32
 400c5dc:	29000820 	cmpeqi	r4,r5,32
 400c5e0:	1c44d83a 	srl	r2,r3,r17
 400c5e4:	2000041e 	bne	r4,zero,400c5f8 <__subdf3+0x5d4>
 400c5e8:	01001004 	movi	r4,64
 400c5ec:	214bc83a 	sub	r5,r4,r5
 400c5f0:	1946983a 	sll	r3,r3,r5
 400c5f4:	50d4b03a 	or	r10,r10,r3
 400c5f8:	5022c03a 	cmpne	r17,r10,zero
 400c5fc:	88a2b03a 	or	r17,r17,r2
 400c600:	003eba06 	br	400c0ec <__subdf3+0xc8>
 400c604:	42d0b03a 	or	r8,r8,r11
 400c608:	4022c03a 	cmpne	r17,r8,zero
 400c60c:	5463c83a 	sub	r17,r10,r17
 400c610:	5449803a 	cmpltu	r4,r10,r17
 400c614:	1909c83a 	sub	r4,r3,r4
 400c618:	6821883a 	mov	r16,r13
 400c61c:	003eb606 	br	400c0f8 <__subdf3+0xd4>
 400c620:	42c4b03a 	or	r2,r8,r11
 400c624:	10009726 	beq	r2,zero,400c884 <__subdf3+0x860>
 400c628:	28bfffc4 	addi	r2,r5,-1
 400c62c:	1000b926 	beq	r2,zero,400c914 <__subdf3+0x8f0>
 400c630:	2941ffd8 	cmpnei	r5,r5,2047
 400c634:	28007326 	beq	r5,zero,400c804 <__subdf3+0x7e0>
 400c638:	100b883a 	mov	r5,r2
 400c63c:	003f2406 	br	400c2d0 <__subdf3+0x2ac>
 400c640:	00800804 	movi	r2,32
 400c644:	1145c83a 	sub	r2,r2,r5
 400c648:	18a2983a 	sll	r17,r3,r2
 400c64c:	5148d83a 	srl	r4,r10,r5
 400c650:	5084983a 	sll	r2,r10,r2
 400c654:	1946d83a 	srl	r3,r3,r5
 400c658:	8922b03a 	or	r17,r17,r4
 400c65c:	1004c03a 	cmpne	r2,r2,zero
 400c660:	88a2b03a 	or	r17,r17,r2
 400c664:	40d1883a 	add	r8,r8,r3
 400c668:	003f5a06 	br	400c3d4 <__subdf3+0x3b0>
 400c66c:	1101ffe0 	cmpeqi	r4,r2,2047
 400c670:	203f601e 	bne	r4,zero,400c3f4 <__subdf3+0x3d0>
 400c674:	5a95883a 	add	r10,r11,r10
 400c678:	52d7803a 	cmpltu	r11,r10,r11
 400c67c:	40c9883a 	add	r4,r8,r3
 400c680:	22c9883a 	add	r4,r4,r11
 400c684:	202297fa 	slli	r17,r4,31
 400c688:	5014d07a 	srli	r10,r10,1
 400c68c:	2008d07a 	srli	r4,r4,1
 400c690:	1021883a 	mov	r16,r2
 400c694:	8aa2b03a 	or	r17,r17,r10
 400c698:	003f3e06 	br	400c394 <__subdf3+0x370>
 400c69c:	1808977a 	slli	r4,r3,29
 400c6a0:	00880034 	movhi	r2,8192
 400c6a4:	10bfffc4 	addi	r2,r2,-1
 400c6a8:	308c703a 	and	r6,r6,r2
 400c6ac:	1810d0fa 	srli	r8,r3,3
 400c6b0:	3104b03a 	or	r2,r6,r4
 400c6b4:	003f3e06 	br	400c3b0 <__subdf3+0x38c>
 400c6b8:	383f521e 	bne	r7,zero,400c404 <__subdf3+0x3e0>
 400c6bc:	10009d26 	beq	r2,zero,400c934 <__subdf3+0x910>
 400c6c0:	1808977a 	slli	r4,r3,29
 400c6c4:	00880034 	movhi	r2,8192
 400c6c8:	10bfffc4 	addi	r2,r2,-1
 400c6cc:	3084703a 	and	r2,r6,r2
 400c6d0:	1810d0fa 	srli	r8,r3,3
 400c6d4:	1104b03a 	or	r2,r2,r4
 400c6d8:	4825883a 	mov	r18,r9
 400c6dc:	003f5a06 	br	400c448 <__subdf3+0x424>
 400c6e0:	52e3c83a 	sub	r17,r10,r11
 400c6e4:	1a09c83a 	sub	r4,r3,r8
 400c6e8:	5467803a 	cmpltu	r19,r10,r17
 400c6ec:	24e7c83a 	sub	r19,r4,r19
 400c6f0:	4825883a 	mov	r18,r9
 400c6f4:	003e8506 	br	400c10c <__subdf3+0xe8>
 400c6f8:	4022977a 	slli	r17,r8,29
 400c6fc:	00880034 	movhi	r2,8192
 400c700:	10bfffc4 	addi	r2,r2,-1
 400c704:	2088703a 	and	r4,r4,r2
 400c708:	4010d0fa 	srli	r8,r8,3
 400c70c:	2444b03a 	or	r2,r4,r17
 400c710:	003f4d06 	br	400c448 <__subdf3+0x424>
 400c714:	5aa3c83a 	sub	r17,r11,r10
 400c718:	40c9c83a 	sub	r4,r8,r3
 400c71c:	5c57803a 	cmpltu	r11,r11,r17
 400c720:	22c9c83a 	sub	r4,r4,r11
 400c724:	04000044 	movi	r16,1
 400c728:	003e7306 	br	400c0f8 <__subdf3+0xd4>
 400c72c:	4004977a 	slli	r2,r8,29
 400c730:	00c80034 	movhi	r3,8192
 400c734:	18ffffc4 	addi	r3,r3,-1
 400c738:	20c8703a 	and	r4,r4,r3
 400c73c:	4010d0fa 	srli	r8,r8,3
 400c740:	1104b03a 	or	r2,r2,r4
 400c744:	003f4006 	br	400c448 <__subdf3+0x424>
 400c748:	4004977a 	slli	r2,r8,29
 400c74c:	00c80034 	movhi	r3,8192
 400c750:	18ffffc4 	addi	r3,r3,-1
 400c754:	20c8703a 	and	r4,r4,r3
 400c758:	4010d0fa 	srli	r8,r8,3
 400c75c:	1104b03a 	or	r2,r2,r4
 400c760:	003f1306 	br	400c3b0 <__subdf3+0x38c>
 400c764:	1804977a 	slli	r2,r3,29
 400c768:	01080034 	movhi	r4,8192
 400c76c:	213fffc4 	addi	r4,r4,-1
 400c770:	310c703a 	and	r6,r6,r4
 400c774:	1810d0fa 	srli	r8,r3,3
 400c778:	1184b03a 	or	r2,r2,r6
 400c77c:	003f3206 	br	400c448 <__subdf3+0x424>
 400c780:	42d0b03a 	or	r8,r8,r11
 400c784:	4022c03a 	cmpne	r17,r8,zero
 400c788:	003edf06 	br	400c308 <__subdf3+0x2e4>
 400c78c:	2c7ff804 	addi	r17,r5,-32
 400c790:	29000820 	cmpeqi	r4,r5,32
 400c794:	4444d83a 	srl	r2,r8,r17
 400c798:	2000041e 	bne	r4,zero,400c7ac <__subdf3+0x788>
 400c79c:	01001004 	movi	r4,64
 400c7a0:	214bc83a 	sub	r5,r4,r5
 400c7a4:	4150983a 	sll	r8,r8,r5
 400c7a8:	5a16b03a 	or	r11,r11,r8
 400c7ac:	5822c03a 	cmpne	r17,r11,zero
 400c7b0:	88a2b03a 	or	r17,r17,r2
 400c7b4:	003f9506 	br	400c60c <__subdf3+0x5e8>
 400c7b8:	103fea26 	beq	r2,zero,400c764 <__subdf3+0x740>
 400c7bc:	1a94b03a 	or	r10,r3,r10
 400c7c0:	400e977a 	slli	r7,r8,29
 400c7c4:	4010d0fa 	srli	r8,r8,3
 400c7c8:	503f111e 	bne	r10,zero,400c410 <__subdf3+0x3ec>
 400c7cc:	00880034 	movhi	r2,8192
 400c7d0:	10bfffc4 	addi	r2,r2,-1
 400c7d4:	2084703a 	and	r2,r4,r2
 400c7d8:	11c4b03a 	or	r2,r2,r7
 400c7dc:	003f1a06 	br	400c448 <__subdf3+0x424>
 400c7e0:	103f5b26 	beq	r2,zero,400c550 <__subdf3+0x52c>
 400c7e4:	1804977a 	slli	r2,r3,29
 400c7e8:	01080034 	movhi	r4,8192
 400c7ec:	213fffc4 	addi	r4,r4,-1
 400c7f0:	310c703a 	and	r6,r6,r4
 400c7f4:	1810d0fa 	srli	r8,r3,3
 400c7f8:	1184b03a 	or	r2,r2,r6
 400c7fc:	4825883a 	mov	r18,r9
 400c800:	003eed06 	br	400c3b8 <__subdf3+0x394>
 400c804:	1808977a 	slli	r4,r3,29
 400c808:	00880034 	movhi	r2,8192
 400c80c:	10bfffc4 	addi	r2,r2,-1
 400c810:	3084703a 	and	r2,r6,r2
 400c814:	1810d0fa 	srli	r8,r3,3
 400c818:	1104b03a 	or	r2,r2,r4
 400c81c:	003f0a06 	br	400c448 <__subdf3+0x424>
 400c820:	52e3c83a 	sub	r17,r10,r11
 400c824:	1a09c83a 	sub	r4,r3,r8
 400c828:	5455803a 	cmpltu	r10,r10,r17
 400c82c:	2289c83a 	sub	r4,r4,r10
 400c830:	04000044 	movi	r16,1
 400c834:	003e3006 	br	400c0f8 <__subdf3+0xd4>
 400c838:	4006977a 	slli	r3,r8,29
 400c83c:	00880034 	movhi	r2,8192
 400c840:	10bfffc4 	addi	r2,r2,-1
 400c844:	2084703a 	and	r2,r4,r2
 400c848:	4010d0fa 	srli	r8,r8,3
 400c84c:	10c4b03a 	or	r2,r2,r3
 400c850:	003efd06 	br	400c448 <__subdf3+0x424>
 400c854:	5aa3c83a 	sub	r17,r11,r10
 400c858:	5c45803a 	cmpltu	r2,r11,r17
 400c85c:	40c9c83a 	sub	r4,r8,r3
 400c860:	2089c83a 	sub	r4,r4,r2
 400c864:	2080202c 	andhi	r2,r4,128
 400c868:	10002f26 	beq	r2,zero,400c928 <__subdf3+0x904>
 400c86c:	52e3c83a 	sub	r17,r10,r11
 400c870:	1a09c83a 	sub	r4,r3,r8
 400c874:	5455803a 	cmpltu	r10,r10,r17
 400c878:	2289c83a 	sub	r4,r4,r10
 400c87c:	4825883a 	mov	r18,r9
 400c880:	003e3b06 	br	400c170 <__subdf3+0x14c>
 400c884:	1808977a 	slli	r4,r3,29
 400c888:	00880034 	movhi	r2,8192
 400c88c:	10bfffc4 	addi	r2,r2,-1
 400c890:	3084703a 	and	r2,r6,r2
 400c894:	1810d0fa 	srli	r8,r3,3
 400c898:	1104b03a 	or	r2,r2,r4
 400c89c:	003ec406 	br	400c3b0 <__subdf3+0x38c>
 400c8a0:	1808977a 	slli	r4,r3,29
 400c8a4:	00880034 	movhi	r2,8192
 400c8a8:	10bfffc4 	addi	r2,r2,-1
 400c8ac:	3084703a 	and	r2,r6,r2
 400c8b0:	1810d0fa 	srli	r8,r3,3
 400c8b4:	1104b03a 	or	r2,r2,r4
 400c8b8:	003ebf06 	br	400c3b8 <__subdf3+0x394>
 400c8bc:	5aa3883a 	add	r17,r11,r10
 400c8c0:	40c9883a 	add	r4,r8,r3
 400c8c4:	8ad7803a 	cmpltu	r11,r17,r11
 400c8c8:	22c9883a 	add	r4,r4,r11
 400c8cc:	2080202c 	andhi	r2,r4,128
 400c8d0:	103eb026 	beq	r2,zero,400c394 <__subdf3+0x370>
 400c8d4:	00bfe034 	movhi	r2,65408
 400c8d8:	10bfffc4 	addi	r2,r2,-1
 400c8dc:	2088703a 	and	r4,r4,r2
 400c8e0:	04000044 	movi	r16,1
 400c8e4:	003eab06 	br	400c394 <__subdf3+0x370>
 400c8e8:	28bff804 	addi	r2,r5,-32
 400c8ec:	29000820 	cmpeqi	r4,r5,32
 400c8f0:	4084d83a 	srl	r2,r8,r2
 400c8f4:	2000041e 	bne	r4,zero,400c908 <__subdf3+0x8e4>
 400c8f8:	01001004 	movi	r4,64
 400c8fc:	214bc83a 	sub	r5,r4,r5
 400c900:	4150983a 	sll	r8,r8,r5
 400c904:	5a16b03a 	or	r11,r11,r8
 400c908:	5822c03a 	cmpne	r17,r11,zero
 400c90c:	88a2b03a 	or	r17,r17,r2
 400c910:	003e7d06 	br	400c308 <__subdf3+0x2e4>
 400c914:	5aa3883a 	add	r17,r11,r10
 400c918:	40c9883a 	add	r4,r8,r3
 400c91c:	8a95803a 	cmpltu	r10,r17,r10
 400c920:	2289883a 	add	r4,r4,r10
 400c924:	003e9806 	br	400c388 <__subdf3+0x364>
 400c928:	8904b03a 	or	r2,r17,r4
 400c92c:	103f0826 	beq	r2,zero,400c550 <__subdf3+0x52c>
 400c930:	003e9806 	br	400c394 <__subdf3+0x370>
 400c934:	02000434 	movhi	r8,16
 400c938:	423fffc4 	addi	r8,r8,-1
 400c93c:	0025883a 	mov	r18,zero
 400c940:	00bfffc4 	movi	r2,-1
 400c944:	003ec206 	br	400c450 <__subdf3+0x42c>
 400c948:	0005883a 	mov	r2,zero
 400c94c:	0141ffc4 	movi	r5,2047
 400c950:	0007883a 	mov	r3,zero
 400c954:	003e1d06 	br	400c1cc <__subdf3+0x1a8>

0400c958 <__unorddf2>:
 400c958:	2806d53a 	srli	r3,r5,20
 400c95c:	3810d53a 	srli	r8,r7,20
 400c960:	02400434 	movhi	r9,16
 400c964:	18c1ffcc 	andi	r3,r3,2047
 400c968:	4a7fffc4 	addi	r9,r9,-1
 400c96c:	18c1ffd8 	cmpnei	r3,r3,2047
 400c970:	2a4a703a 	and	r5,r5,r9
 400c974:	3a4e703a 	and	r7,r7,r9
 400c978:	4201ffcc 	andi	r8,r8,2047
 400c97c:	18000426 	beq	r3,zero,400c990 <__unorddf2+0x38>
 400c980:	4201ffd8 	cmpnei	r8,r8,2047
 400c984:	40000626 	beq	r8,zero,400c9a0 <__unorddf2+0x48>
 400c988:	0005883a 	mov	r2,zero
 400c98c:	f800283a 	ret
 400c990:	214ab03a 	or	r5,r4,r5
 400c994:	283ffa26 	beq	r5,zero,400c980 <__unorddf2+0x28>
 400c998:	00800044 	movi	r2,1
 400c99c:	f800283a 	ret
 400c9a0:	398eb03a 	or	r7,r7,r6
 400c9a4:	3804c03a 	cmpne	r2,r7,zero
 400c9a8:	f800283a 	ret

0400c9ac <__fixdfsi>:
 400c9ac:	2806d53a 	srli	r3,r5,20
 400c9b0:	01800434 	movhi	r6,16
 400c9b4:	31bfffc4 	addi	r6,r6,-1
 400c9b8:	18c1ffcc 	andi	r3,r3,2047
 400c9bc:	19c0ffd0 	cmplti	r7,r3,1023
 400c9c0:	2810d7fa 	srli	r8,r5,31
 400c9c4:	298a703a 	and	r5,r5,r6
 400c9c8:	3800061e 	bne	r7,zero,400c9e4 <__fixdfsi+0x38>
 400c9cc:	18810790 	cmplti	r2,r3,1054
 400c9d0:	1000061e 	bne	r2,zero,400c9ec <__fixdfsi+0x40>
 400c9d4:	00a00034 	movhi	r2,32768
 400c9d8:	10bfffc4 	addi	r2,r2,-1
 400c9dc:	4085883a 	add	r2,r8,r2
 400c9e0:	f800283a 	ret
 400c9e4:	0005883a 	mov	r2,zero
 400c9e8:	f800283a 	ret
 400c9ec:	01810cc4 	movi	r6,1075
 400c9f0:	30cdc83a 	sub	r6,r6,r3
 400c9f4:	30800808 	cmpgei	r2,r6,32
 400c9f8:	29400434 	orhi	r5,r5,16
 400c9fc:	1000071e 	bne	r2,zero,400ca1c <__fixdfsi+0x70>
 400ca00:	18befb44 	addi	r2,r3,-1043
 400ca04:	2884983a 	sll	r2,r5,r2
 400ca08:	2188d83a 	srl	r4,r4,r6
 400ca0c:	1104b03a 	or	r2,r2,r4
 400ca10:	403ff526 	beq	r8,zero,400c9e8 <__fixdfsi+0x3c>
 400ca14:	0085c83a 	sub	r2,zero,r2
 400ca18:	f800283a 	ret
 400ca1c:	008104c4 	movi	r2,1043
 400ca20:	10c5c83a 	sub	r2,r2,r3
 400ca24:	2884d83a 	srl	r2,r5,r2
 400ca28:	003ff906 	br	400ca10 <__fixdfsi+0x64>

0400ca2c <__floatsidf>:
 400ca2c:	defffd04 	addi	sp,sp,-12
 400ca30:	dfc00215 	stw	ra,8(sp)
 400ca34:	dc400115 	stw	r17,4(sp)
 400ca38:	dc000015 	stw	r16,0(sp)
 400ca3c:	20001326 	beq	r4,zero,400ca8c <__floatsidf+0x60>
 400ca40:	2022d7fa 	srli	r17,r4,31
 400ca44:	2021883a 	mov	r16,r4
 400ca48:	20002516 	blt	r4,zero,400cae0 <__floatsidf+0xb4>
 400ca4c:	8009883a 	mov	r4,r16
 400ca50:	400cb780 	call	400cb78 <__clzsi2>
 400ca54:	01410784 	movi	r5,1054
 400ca58:	288bc83a 	sub	r5,r5,r2
 400ca5c:	10c002c8 	cmpgei	r3,r2,11
 400ca60:	2941ffcc 	andi	r5,r5,2047
 400ca64:	1800171e 	bne	r3,zero,400cac4 <__floatsidf+0x98>
 400ca68:	00c002c4 	movi	r3,11
 400ca6c:	1887c83a 	sub	r3,r3,r2
 400ca70:	80c6d83a 	srl	r3,r16,r3
 400ca74:	01000434 	movhi	r4,16
 400ca78:	10800544 	addi	r2,r2,21
 400ca7c:	213fffc4 	addi	r4,r4,-1
 400ca80:	8084983a 	sll	r2,r16,r2
 400ca84:	1906703a 	and	r3,r3,r4
 400ca88:	00000406 	br	400ca9c <__floatsidf+0x70>
 400ca8c:	0023883a 	mov	r17,zero
 400ca90:	000b883a 	mov	r5,zero
 400ca94:	0007883a 	mov	r3,zero
 400ca98:	0005883a 	mov	r2,zero
 400ca9c:	280a953a 	slli	r5,r5,20
 400caa0:	8c403fcc 	andi	r17,r17,255
 400caa4:	882297fa 	slli	r17,r17,31
 400caa8:	28c6b03a 	or	r3,r5,r3
 400caac:	1c46b03a 	or	r3,r3,r17
 400cab0:	dfc00217 	ldw	ra,8(sp)
 400cab4:	dc400117 	ldw	r17,4(sp)
 400cab8:	dc000017 	ldw	r16,0(sp)
 400cabc:	dec00304 	addi	sp,sp,12
 400cac0:	f800283a 	ret
 400cac4:	10bffd44 	addi	r2,r2,-11
 400cac8:	8086983a 	sll	r3,r16,r2
 400cacc:	00800434 	movhi	r2,16
 400cad0:	10bfffc4 	addi	r2,r2,-1
 400cad4:	1886703a 	and	r3,r3,r2
 400cad8:	0005883a 	mov	r2,zero
 400cadc:	003fef06 	br	400ca9c <__floatsidf+0x70>
 400cae0:	0121c83a 	sub	r16,zero,r4
 400cae4:	003fd906 	br	400ca4c <__floatsidf+0x20>

0400cae8 <__floatunsidf>:
 400cae8:	defffe04 	addi	sp,sp,-8
 400caec:	dc000015 	stw	r16,0(sp)
 400caf0:	dfc00115 	stw	ra,4(sp)
 400caf4:	2021883a 	mov	r16,r4
 400caf8:	20000f26 	beq	r4,zero,400cb38 <__floatunsidf+0x50>
 400cafc:	400cb780 	call	400cb78 <__clzsi2>
 400cb00:	00c10784 	movi	r3,1054
 400cb04:	1887c83a 	sub	r3,r3,r2
 400cb08:	110002c8 	cmpgei	r4,r2,11
 400cb0c:	18c1ffcc 	andi	r3,r3,2047
 400cb10:	2000121e 	bne	r4,zero,400cb5c <__floatunsidf+0x74>
 400cb14:	014002c4 	movi	r5,11
 400cb18:	288bc83a 	sub	r5,r5,r2
 400cb1c:	814ad83a 	srl	r5,r16,r5
 400cb20:	01000434 	movhi	r4,16
 400cb24:	10800544 	addi	r2,r2,21
 400cb28:	213fffc4 	addi	r4,r4,-1
 400cb2c:	80a0983a 	sll	r16,r16,r2
 400cb30:	290a703a 	and	r5,r5,r4
 400cb34:	00000206 	br	400cb40 <__floatunsidf+0x58>
 400cb38:	0007883a 	mov	r3,zero
 400cb3c:	000b883a 	mov	r5,zero
 400cb40:	1806953a 	slli	r3,r3,20
 400cb44:	8005883a 	mov	r2,r16
 400cb48:	1946b03a 	or	r3,r3,r5
 400cb4c:	dfc00117 	ldw	ra,4(sp)
 400cb50:	dc000017 	ldw	r16,0(sp)
 400cb54:	dec00204 	addi	sp,sp,8
 400cb58:	f800283a 	ret
 400cb5c:	10bffd44 	addi	r2,r2,-11
 400cb60:	808a983a 	sll	r5,r16,r2
 400cb64:	00800434 	movhi	r2,16
 400cb68:	10bfffc4 	addi	r2,r2,-1
 400cb6c:	288a703a 	and	r5,r5,r2
 400cb70:	0021883a 	mov	r16,zero
 400cb74:	003ff206 	br	400cb40 <__floatunsidf+0x58>

0400cb78 <__clzsi2>:
 400cb78:	00bfffd4 	movui	r2,65535
 400cb7c:	11000436 	bltu	r2,r4,400cb90 <__clzsi2+0x18>
 400cb80:	20804030 	cmpltui	r2,r4,256
 400cb84:	10000e26 	beq	r2,zero,400cbc0 <__clzsi2+0x48>
 400cb88:	01400804 	movi	r5,32
 400cb8c:	00000406 	br	400cba0 <__clzsi2+0x28>
 400cb90:	00804034 	movhi	r2,256
 400cb94:	20800736 	bltu	r4,r2,400cbb4 <__clzsi2+0x3c>
 400cb98:	2008d63a 	srli	r4,r4,24
 400cb9c:	01400204 	movi	r5,8
 400cba0:	00c10074 	movhi	r3,1025
 400cba4:	20c7883a 	add	r3,r4,r3
 400cba8:	18bf0603 	ldbu	r2,-1000(r3)
 400cbac:	2885c83a 	sub	r2,r5,r2
 400cbb0:	f800283a 	ret
 400cbb4:	2008d43a 	srli	r4,r4,16
 400cbb8:	01400404 	movi	r5,16
 400cbbc:	003ff806 	br	400cba0 <__clzsi2+0x28>
 400cbc0:	2008d23a 	srli	r4,r4,8
 400cbc4:	01400604 	movi	r5,24
 400cbc8:	003ff506 	br	400cba0 <__clzsi2+0x28>

0400cbcc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400cbcc:	defffe04 	addi	sp,sp,-8
 400cbd0:	dfc00115 	stw	ra,4(sp)
 400cbd4:	df000015 	stw	fp,0(sp)
 400cbd8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400cbdc:	d0a00917 	ldw	r2,-32732(gp)
 400cbe0:	10000326 	beq	r2,zero,400cbf0 <alt_get_errno+0x24>
 400cbe4:	d0a00917 	ldw	r2,-32732(gp)
 400cbe8:	103ee83a 	callr	r2
 400cbec:	00000106 	br	400cbf4 <alt_get_errno+0x28>
 400cbf0:	d0a71204 	addi	r2,gp,-25528
}
 400cbf4:	e037883a 	mov	sp,fp
 400cbf8:	dfc00117 	ldw	ra,4(sp)
 400cbfc:	df000017 	ldw	fp,0(sp)
 400cc00:	dec00204 	addi	sp,sp,8
 400cc04:	f800283a 	ret

0400cc08 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 400cc08:	defffb04 	addi	sp,sp,-20
 400cc0c:	dfc00415 	stw	ra,16(sp)
 400cc10:	df000315 	stw	fp,12(sp)
 400cc14:	df000304 	addi	fp,sp,12
 400cc18:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 400cc1c:	e0bffd17 	ldw	r2,-12(fp)
 400cc20:	10000616 	blt	r2,zero,400cc3c <close+0x34>
 400cc24:	e0bffd17 	ldw	r2,-12(fp)
 400cc28:	10c00324 	muli	r3,r2,12
 400cc2c:	00810074 	movhi	r2,1025
 400cc30:	1081c404 	addi	r2,r2,1808
 400cc34:	1885883a 	add	r2,r3,r2
 400cc38:	00000106 	br	400cc40 <close+0x38>
 400cc3c:	0005883a 	mov	r2,zero
 400cc40:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
 400cc44:	e0bfff17 	ldw	r2,-4(fp)
 400cc48:	10001926 	beq	r2,zero,400ccb0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 400cc4c:	e0bfff17 	ldw	r2,-4(fp)
 400cc50:	10800017 	ldw	r2,0(r2)
 400cc54:	10800417 	ldw	r2,16(r2)
 400cc58:	10000626 	beq	r2,zero,400cc74 <close+0x6c>
 400cc5c:	e0bfff17 	ldw	r2,-4(fp)
 400cc60:	10800017 	ldw	r2,0(r2)
 400cc64:	10800417 	ldw	r2,16(r2)
 400cc68:	e13fff17 	ldw	r4,-4(fp)
 400cc6c:	103ee83a 	callr	r2
 400cc70:	00000106 	br	400cc78 <close+0x70>
 400cc74:	0005883a 	mov	r2,zero
 400cc78:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 400cc7c:	e13ffd17 	ldw	r4,-12(fp)
 400cc80:	400d4880 	call	400d488 <alt_release_fd>
    if (rval < 0)
 400cc84:	e0bffe17 	ldw	r2,-8(fp)
 400cc88:	1000070e 	bge	r2,zero,400cca8 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 400cc8c:	400cbcc0 	call	400cbcc <alt_get_errno>
 400cc90:	1007883a 	mov	r3,r2
 400cc94:	e0bffe17 	ldw	r2,-8(fp)
 400cc98:	0085c83a 	sub	r2,zero,r2
 400cc9c:	18800015 	stw	r2,0(r3)
      return -1;
 400cca0:	00bfffc4 	movi	r2,-1
 400cca4:	00000706 	br	400ccc4 <close+0xbc>
    }
    return 0;
 400cca8:	0005883a 	mov	r2,zero
 400ccac:	00000506 	br	400ccc4 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400ccb0:	400cbcc0 	call	400cbcc <alt_get_errno>
 400ccb4:	1007883a 	mov	r3,r2
 400ccb8:	00801444 	movi	r2,81
 400ccbc:	18800015 	stw	r2,0(r3)
    return -1;
 400ccc0:	00bfffc4 	movi	r2,-1
  }
}
 400ccc4:	e037883a 	mov	sp,fp
 400ccc8:	dfc00117 	ldw	ra,4(sp)
 400cccc:	df000017 	ldw	fp,0(sp)
 400ccd0:	dec00204 	addi	sp,sp,8
 400ccd4:	f800283a 	ret

0400ccd8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 400ccd8:	defffc04 	addi	sp,sp,-16
 400ccdc:	df000315 	stw	fp,12(sp)
 400cce0:	df000304 	addi	fp,sp,12
 400cce4:	e13fff15 	stw	r4,-4(fp)
 400cce8:	e17ffe15 	stw	r5,-8(fp)
 400ccec:	e1bffd15 	stw	r6,-12(fp)
  return len;
 400ccf0:	e0bffd17 	ldw	r2,-12(fp)
}
 400ccf4:	e037883a 	mov	sp,fp
 400ccf8:	df000017 	ldw	fp,0(sp)
 400ccfc:	dec00104 	addi	sp,sp,4
 400cd00:	f800283a 	ret

0400cd04 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 400cd04:	defffd04 	addi	sp,sp,-12
 400cd08:	df000215 	stw	fp,8(sp)
 400cd0c:	df000204 	addi	fp,sp,8
 400cd10:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 400cd14:	0001883a 	nop
 400cd18:	e0bffe17 	ldw	r2,-8(fp)
 400cd1c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 400cd20:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 400cd24:	10000226 	beq	r2,zero,400cd30 <_exit+0x2c>
    ALT_SIM_FAIL();
 400cd28:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
 400cd2c:	00000106 	br	400cd34 <_exit+0x30>
    ALT_SIM_PASS();
 400cd30:	002af0b0 	cmpltui	zero,zero,43970
}
 400cd34:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 400cd38:	003fff06 	br	400cd38 <_exit+0x34>

0400cd3c <alt_get_errno>:
{
 400cd3c:	defffe04 	addi	sp,sp,-8
 400cd40:	dfc00115 	stw	ra,4(sp)
 400cd44:	df000015 	stw	fp,0(sp)
 400cd48:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400cd4c:	d0a00917 	ldw	r2,-32732(gp)
 400cd50:	10000326 	beq	r2,zero,400cd60 <alt_get_errno+0x24>
 400cd54:	d0a00917 	ldw	r2,-32732(gp)
 400cd58:	103ee83a 	callr	r2
 400cd5c:	00000106 	br	400cd64 <alt_get_errno+0x28>
 400cd60:	d0a71204 	addi	r2,gp,-25528
}
 400cd64:	e037883a 	mov	sp,fp
 400cd68:	dfc00117 	ldw	ra,4(sp)
 400cd6c:	df000017 	ldw	fp,0(sp)
 400cd70:	dec00204 	addi	sp,sp,8
 400cd74:	f800283a 	ret

0400cd78 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 400cd78:	defffb04 	addi	sp,sp,-20
 400cd7c:	dfc00415 	stw	ra,16(sp)
 400cd80:	df000315 	stw	fp,12(sp)
 400cd84:	df000304 	addi	fp,sp,12
 400cd88:	e13ffe15 	stw	r4,-8(fp)
 400cd8c:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400cd90:	e0bffe17 	ldw	r2,-8(fp)
 400cd94:	10000616 	blt	r2,zero,400cdb0 <fstat+0x38>
 400cd98:	e0bffe17 	ldw	r2,-8(fp)
 400cd9c:	10c00324 	muli	r3,r2,12
 400cda0:	00810074 	movhi	r2,1025
 400cda4:	1081c404 	addi	r2,r2,1808
 400cda8:	1885883a 	add	r2,r3,r2
 400cdac:	00000106 	br	400cdb4 <fstat+0x3c>
 400cdb0:	0005883a 	mov	r2,zero
 400cdb4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 400cdb8:	e0bfff17 	ldw	r2,-4(fp)
 400cdbc:	10001026 	beq	r2,zero,400ce00 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 400cdc0:	e0bfff17 	ldw	r2,-4(fp)
 400cdc4:	10800017 	ldw	r2,0(r2)
 400cdc8:	10800817 	ldw	r2,32(r2)
 400cdcc:	10000726 	beq	r2,zero,400cdec <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 400cdd0:	e0bfff17 	ldw	r2,-4(fp)
 400cdd4:	10800017 	ldw	r2,0(r2)
 400cdd8:	10800817 	ldw	r2,32(r2)
 400cddc:	e17ffd17 	ldw	r5,-12(fp)
 400cde0:	e13fff17 	ldw	r4,-4(fp)
 400cde4:	103ee83a 	callr	r2
 400cde8:	00000a06 	br	400ce14 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 400cdec:	e0bffd17 	ldw	r2,-12(fp)
 400cdf0:	00c80004 	movi	r3,8192
 400cdf4:	10c00115 	stw	r3,4(r2)
      return 0;
 400cdf8:	0005883a 	mov	r2,zero
 400cdfc:	00000506 	br	400ce14 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400ce00:	400cd3c0 	call	400cd3c <alt_get_errno>
 400ce04:	1007883a 	mov	r3,r2
 400ce08:	00801444 	movi	r2,81
 400ce0c:	18800015 	stw	r2,0(r3)
    return -1;
 400ce10:	00bfffc4 	movi	r2,-1
  }
}
 400ce14:	e037883a 	mov	sp,fp
 400ce18:	dfc00117 	ldw	ra,4(sp)
 400ce1c:	df000017 	ldw	fp,0(sp)
 400ce20:	dec00204 	addi	sp,sp,8
 400ce24:	f800283a 	ret

0400ce28 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 400ce28:	deffff04 	addi	sp,sp,-4
 400ce2c:	df000015 	stw	fp,0(sp)
 400ce30:	d839883a 	mov	fp,sp
  return 0;
 400ce34:	0005883a 	mov	r2,zero
}
 400ce38:	e037883a 	mov	sp,fp
 400ce3c:	df000017 	ldw	fp,0(sp)
 400ce40:	dec00104 	addi	sp,sp,4
 400ce44:	f800283a 	ret

0400ce48 <alt_get_errno>:
{
 400ce48:	defffe04 	addi	sp,sp,-8
 400ce4c:	dfc00115 	stw	ra,4(sp)
 400ce50:	df000015 	stw	fp,0(sp)
 400ce54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400ce58:	d0a00917 	ldw	r2,-32732(gp)
 400ce5c:	10000326 	beq	r2,zero,400ce6c <alt_get_errno+0x24>
 400ce60:	d0a00917 	ldw	r2,-32732(gp)
 400ce64:	103ee83a 	callr	r2
 400ce68:	00000106 	br	400ce70 <alt_get_errno+0x28>
 400ce6c:	d0a71204 	addi	r2,gp,-25528
}
 400ce70:	e037883a 	mov	sp,fp
 400ce74:	dfc00117 	ldw	ra,4(sp)
 400ce78:	df000017 	ldw	fp,0(sp)
 400ce7c:	dec00204 	addi	sp,sp,8
 400ce80:	f800283a 	ret

0400ce84 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 400ce84:	deffea04 	addi	sp,sp,-88
 400ce88:	dfc01515 	stw	ra,84(sp)
 400ce8c:	df001415 	stw	fp,80(sp)
 400ce90:	df001404 	addi	fp,sp,80
 400ce94:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400ce98:	e0bfec17 	ldw	r2,-80(fp)
 400ce9c:	10000616 	blt	r2,zero,400ceb8 <isatty+0x34>
 400cea0:	e0bfec17 	ldw	r2,-80(fp)
 400cea4:	10c00324 	muli	r3,r2,12
 400cea8:	00810074 	movhi	r2,1025
 400ceac:	1081c404 	addi	r2,r2,1808
 400ceb0:	1885883a 	add	r2,r3,r2
 400ceb4:	00000106 	br	400cebc <isatty+0x38>
 400ceb8:	0005883a 	mov	r2,zero
 400cebc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 400cec0:	e0bfff17 	ldw	r2,-4(fp)
 400cec4:	10000e26 	beq	r2,zero,400cf00 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 400cec8:	e0bfff17 	ldw	r2,-4(fp)
 400cecc:	10800017 	ldw	r2,0(r2)
 400ced0:	10800817 	ldw	r2,32(r2)
 400ced4:	1000021e 	bne	r2,zero,400cee0 <isatty+0x5c>
    {
      return 1;
 400ced8:	00800044 	movi	r2,1
 400cedc:	00000d06 	br	400cf14 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 400cee0:	e0bfed04 	addi	r2,fp,-76
 400cee4:	100b883a 	mov	r5,r2
 400cee8:	e13fec17 	ldw	r4,-80(fp)
 400ceec:	400cd780 	call	400cd78 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 400cef0:	e0bfee17 	ldw	r2,-72(fp)
 400cef4:	10880020 	cmpeqi	r2,r2,8192
 400cef8:	10803fcc 	andi	r2,r2,255
 400cefc:	00000506 	br	400cf14 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400cf00:	400ce480 	call	400ce48 <alt_get_errno>
 400cf04:	1007883a 	mov	r3,r2
 400cf08:	00801444 	movi	r2,81
 400cf0c:	18800015 	stw	r2,0(r3)
    return 0;
 400cf10:	0005883a 	mov	r2,zero
  }
}
 400cf14:	e037883a 	mov	sp,fp
 400cf18:	dfc00117 	ldw	ra,4(sp)
 400cf1c:	df000017 	ldw	fp,0(sp)
 400cf20:	dec00204 	addi	sp,sp,8
 400cf24:	f800283a 	ret

0400cf28 <alt_get_errno>:
{
 400cf28:	defffe04 	addi	sp,sp,-8
 400cf2c:	dfc00115 	stw	ra,4(sp)
 400cf30:	df000015 	stw	fp,0(sp)
 400cf34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400cf38:	d0a00917 	ldw	r2,-32732(gp)
 400cf3c:	10000326 	beq	r2,zero,400cf4c <alt_get_errno+0x24>
 400cf40:	d0a00917 	ldw	r2,-32732(gp)
 400cf44:	103ee83a 	callr	r2
 400cf48:	00000106 	br	400cf50 <alt_get_errno+0x28>
 400cf4c:	d0a71204 	addi	r2,gp,-25528
}
 400cf50:	e037883a 	mov	sp,fp
 400cf54:	dfc00117 	ldw	ra,4(sp)
 400cf58:	df000017 	ldw	fp,0(sp)
 400cf5c:	dec00204 	addi	sp,sp,8
 400cf60:	f800283a 	ret

0400cf64 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 400cf64:	defffb04 	addi	sp,sp,-20
 400cf68:	dfc00415 	stw	ra,16(sp)
 400cf6c:	df000315 	stw	fp,12(sp)
 400cf70:	df000304 	addi	fp,sp,12
 400cf74:	e13ffe15 	stw	r4,-8(fp)
 400cf78:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
 400cf7c:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
 400cf80:	e0bffe17 	ldw	r2,-8(fp)
 400cf84:	00802e16 	blt	zero,r2,400d040 <kill+0xdc>
 400cf88:	e0bffd17 	ldw	r2,-12(fp)
 400cf8c:	10800828 	cmpgeui	r2,r2,32
 400cf90:	1000281e 	bne	r2,zero,400d034 <kill+0xd0>
 400cf94:	e0bffd17 	ldw	r2,-12(fp)
 400cf98:	100690ba 	slli	r3,r2,2
 400cf9c:	00810074 	movhi	r2,1025
 400cfa0:	1885883a 	add	r2,r3,r2
 400cfa4:	10b3eb17 	ldw	r2,-12372(r2)
 400cfa8:	1000683a 	jmp	r2
 400cfac:	0400d054 	movui	r16,833
 400cfb0:	0400d034 	movhi	r16,832
 400cfb4:	0400d034 	movhi	r16,832
 400cfb8:	0400d02c 	andhi	r16,zero,832
 400cfbc:	0400d02c 	andhi	r16,zero,832
 400cfc0:	0400d02c 	andhi	r16,zero,832
 400cfc4:	0400d02c 	andhi	r16,zero,832
 400cfc8:	0400d034 	movhi	r16,832
 400cfcc:	0400d02c 	andhi	r16,zero,832
 400cfd0:	0400d02c 	andhi	r16,zero,832
 400cfd4:	0400d02c 	andhi	r16,zero,832
 400cfd8:	0400d02c 	andhi	r16,zero,832
 400cfdc:	0400d02c 	andhi	r16,zero,832
 400cfe0:	0400d02c 	andhi	r16,zero,832
 400cfe4:	0400d02c 	andhi	r16,zero,832
 400cfe8:	0400d02c 	andhi	r16,zero,832
 400cfec:	0400d054 	movui	r16,833
 400cff0:	0400d034 	movhi	r16,832
 400cff4:	0400d034 	movhi	r16,832
 400cff8:	0400d034 	movhi	r16,832
 400cffc:	0400d054 	movui	r16,833
 400d000:	0400d034 	movhi	r16,832
 400d004:	0400d034 	movhi	r16,832
 400d008:	0400d02c 	andhi	r16,zero,832
 400d00c:	0400d02c 	andhi	r16,zero,832
 400d010:	0400d02c 	andhi	r16,zero,832
 400d014:	0400d02c 	andhi	r16,zero,832
 400d018:	0400d02c 	andhi	r16,zero,832
 400d01c:	0400d034 	movhi	r16,832
 400d020:	0400d034 	movhi	r16,832
 400d024:	0400d02c 	andhi	r16,zero,832
 400d028:	0400d02c 	andhi	r16,zero,832
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 400d02c:	0009883a 	mov	r4,zero
 400d030:	400cd040 	call	400cd04 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 400d034:	00800584 	movi	r2,22
 400d038:	e0bfff15 	stw	r2,-4(fp)
 400d03c:	00000606 	br	400d058 <kill+0xf4>
    }
  }

  else if (pid > 0)
 400d040:	e0bffe17 	ldw	r2,-8(fp)
 400d044:	0080040e 	bge	zero,r2,400d058 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 400d048:	008000c4 	movi	r2,3
 400d04c:	e0bfff15 	stw	r2,-4(fp)
 400d050:	00000106 	br	400d058 <kill+0xf4>
      break;
 400d054:	0001883a 	nop
  }

  if (status)
 400d058:	e0bfff17 	ldw	r2,-4(fp)
 400d05c:	10000626 	beq	r2,zero,400d078 <kill+0x114>
  {
    ALT_ERRNO = status;
 400d060:	400cf280 	call	400cf28 <alt_get_errno>
 400d064:	1007883a 	mov	r3,r2
 400d068:	e0bfff17 	ldw	r2,-4(fp)
 400d06c:	18800015 	stw	r2,0(r3)
    return -1;
 400d070:	00bfffc4 	movi	r2,-1
 400d074:	00000106 	br	400d07c <kill+0x118>
  }

  return 0;
 400d078:	0005883a 	mov	r2,zero
}
 400d07c:	e037883a 	mov	sp,fp
 400d080:	dfc00117 	ldw	ra,4(sp)
 400d084:	df000017 	ldw	fp,0(sp)
 400d088:	dec00204 	addi	sp,sp,8
 400d08c:	f800283a 	ret

0400d090 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 400d090:	defffc04 	addi	sp,sp,-16
 400d094:	df000315 	stw	fp,12(sp)
 400d098:	df000304 	addi	fp,sp,12
 400d09c:	e13fff15 	stw	r4,-4(fp)
 400d0a0:	e17ffe15 	stw	r5,-8(fp)
 400d0a4:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
 400d0a8:	e0fffe17 	ldw	r3,-8(fp)
 400d0ac:	e0bfff17 	ldw	r2,-4(fp)
 400d0b0:	18800c26 	beq	r3,r2,400d0e4 <alt_load_section+0x54>
  {
    while( to != end )
 400d0b4:	00000806 	br	400d0d8 <alt_load_section+0x48>
    {
      *to++ = *from++;
 400d0b8:	e0ffff17 	ldw	r3,-4(fp)
 400d0bc:	18800104 	addi	r2,r3,4
 400d0c0:	e0bfff15 	stw	r2,-4(fp)
 400d0c4:	e0bffe17 	ldw	r2,-8(fp)
 400d0c8:	11000104 	addi	r4,r2,4
 400d0cc:	e13ffe15 	stw	r4,-8(fp)
 400d0d0:	18c00017 	ldw	r3,0(r3)
 400d0d4:	10c00015 	stw	r3,0(r2)
    while( to != end )
 400d0d8:	e0fffe17 	ldw	r3,-8(fp)
 400d0dc:	e0bffd17 	ldw	r2,-12(fp)
 400d0e0:	18bff51e 	bne	r3,r2,400d0b8 <alt_load_section+0x28>
    }
  }
}
 400d0e4:	0001883a 	nop
 400d0e8:	e037883a 	mov	sp,fp
 400d0ec:	df000017 	ldw	fp,0(sp)
 400d0f0:	dec00104 	addi	sp,sp,4
 400d0f4:	f800283a 	ret

0400d0f8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 400d0f8:	defffe04 	addi	sp,sp,-8
 400d0fc:	dfc00115 	stw	ra,4(sp)
 400d100:	df000015 	stw	fp,0(sp)
 400d104:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 400d108:	01810074 	movhi	r6,1025
 400d10c:	31865504 	addi	r6,r6,6484
 400d110:	01410074 	movhi	r5,1025
 400d114:	297f5404 	addi	r5,r5,-688
 400d118:	01010074 	movhi	r4,1025
 400d11c:	21065504 	addi	r4,r4,6484
 400d120:	400d0900 	call	400d090 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 400d124:	01810034 	movhi	r6,1024
 400d128:	31808f04 	addi	r6,r6,572
 400d12c:	01410034 	movhi	r5,1024
 400d130:	29400804 	addi	r5,r5,32
 400d134:	01010034 	movhi	r4,1024
 400d138:	21000804 	addi	r4,r4,32
 400d13c:	400d0900 	call	400d090 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 400d140:	01810074 	movhi	r6,1025
 400d144:	31bf5404 	addi	r6,r6,-688
 400d148:	01410074 	movhi	r5,1025
 400d14c:	297db504 	addi	r5,r5,-2348
 400d150:	01010074 	movhi	r4,1025
 400d154:	213db504 	addi	r4,r4,-2348
 400d158:	400d0900 	call	400d090 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 400d15c:	400e8140 	call	400e814 <alt_dcache_flush_all>
  alt_icache_flush_all();
 400d160:	400ea9c0 	call	400ea9c <alt_icache_flush_all>
}
 400d164:	0001883a 	nop
 400d168:	e037883a 	mov	sp,fp
 400d16c:	dfc00117 	ldw	ra,4(sp)
 400d170:	df000017 	ldw	fp,0(sp)
 400d174:	dec00204 	addi	sp,sp,8
 400d178:	f800283a 	ret

0400d17c <alt_get_errno>:
{
 400d17c:	defffe04 	addi	sp,sp,-8
 400d180:	dfc00115 	stw	ra,4(sp)
 400d184:	df000015 	stw	fp,0(sp)
 400d188:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d18c:	d0a00917 	ldw	r2,-32732(gp)
 400d190:	10000326 	beq	r2,zero,400d1a0 <alt_get_errno+0x24>
 400d194:	d0a00917 	ldw	r2,-32732(gp)
 400d198:	103ee83a 	callr	r2
 400d19c:	00000106 	br	400d1a4 <alt_get_errno+0x28>
 400d1a0:	d0a71204 	addi	r2,gp,-25528
}
 400d1a4:	e037883a 	mov	sp,fp
 400d1a8:	dfc00117 	ldw	ra,4(sp)
 400d1ac:	df000017 	ldw	fp,0(sp)
 400d1b0:	dec00204 	addi	sp,sp,8
 400d1b4:	f800283a 	ret

0400d1b8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 400d1b8:	defff904 	addi	sp,sp,-28
 400d1bc:	dfc00615 	stw	ra,24(sp)
 400d1c0:	df000515 	stw	fp,20(sp)
 400d1c4:	df000504 	addi	fp,sp,20
 400d1c8:	e13ffd15 	stw	r4,-12(fp)
 400d1cc:	e17ffc15 	stw	r5,-16(fp)
 400d1d0:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 400d1d4:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d1d8:	e0bffd17 	ldw	r2,-12(fp)
 400d1dc:	10000616 	blt	r2,zero,400d1f8 <lseek+0x40>
 400d1e0:	e0bffd17 	ldw	r2,-12(fp)
 400d1e4:	10c00324 	muli	r3,r2,12
 400d1e8:	00810074 	movhi	r2,1025
 400d1ec:	1081c404 	addi	r2,r2,1808
 400d1f0:	1885883a 	add	r2,r3,r2
 400d1f4:	00000106 	br	400d1fc <lseek+0x44>
 400d1f8:	0005883a 	mov	r2,zero
 400d1fc:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
 400d200:	e0bffe17 	ldw	r2,-8(fp)
 400d204:	10001026 	beq	r2,zero,400d248 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 400d208:	e0bffe17 	ldw	r2,-8(fp)
 400d20c:	10800017 	ldw	r2,0(r2)
 400d210:	10800717 	ldw	r2,28(r2)
 400d214:	10000926 	beq	r2,zero,400d23c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 400d218:	e0bffe17 	ldw	r2,-8(fp)
 400d21c:	10800017 	ldw	r2,0(r2)
 400d220:	10800717 	ldw	r2,28(r2)
 400d224:	e1bffb17 	ldw	r6,-20(fp)
 400d228:	e17ffc17 	ldw	r5,-16(fp)
 400d22c:	e13ffe17 	ldw	r4,-8(fp)
 400d230:	103ee83a 	callr	r2
 400d234:	e0bfff15 	stw	r2,-4(fp)
 400d238:	00000506 	br	400d250 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 400d23c:	00bfde84 	movi	r2,-134
 400d240:	e0bfff15 	stw	r2,-4(fp)
 400d244:	00000206 	br	400d250 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 400d248:	00bfebc4 	movi	r2,-81
 400d24c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
 400d250:	e0bfff17 	ldw	r2,-4(fp)
 400d254:	1000070e 	bge	r2,zero,400d274 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 400d258:	400d17c0 	call	400d17c <alt_get_errno>
 400d25c:	1007883a 	mov	r3,r2
 400d260:	e0bfff17 	ldw	r2,-4(fp)
 400d264:	0085c83a 	sub	r2,zero,r2
 400d268:	18800015 	stw	r2,0(r3)
    rc = -1;
 400d26c:	00bfffc4 	movi	r2,-1
 400d270:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
 400d274:	e0bfff17 	ldw	r2,-4(fp)
}
 400d278:	e037883a 	mov	sp,fp
 400d27c:	dfc00117 	ldw	ra,4(sp)
 400d280:	df000017 	ldw	fp,0(sp)
 400d284:	dec00204 	addi	sp,sp,8
 400d288:	f800283a 	ret

0400d28c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 400d28c:	defffd04 	addi	sp,sp,-12
 400d290:	dfc00215 	stw	ra,8(sp)
 400d294:	df000115 	stw	fp,4(sp)
 400d298:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 400d29c:	0009883a 	mov	r4,zero
 400d2a0:	400d7000 	call	400d700 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 400d2a4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 400d2a8:	400d73c0 	call	400d73c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 400d2ac:	01810074 	movhi	r6,1025
 400d2b0:	31bf4904 	addi	r6,r6,-732
 400d2b4:	01410074 	movhi	r5,1025
 400d2b8:	297f4904 	addi	r5,r5,-732
 400d2bc:	01010074 	movhi	r4,1025
 400d2c0:	213f4904 	addi	r4,r4,-732
 400d2c4:	400eb800 	call	400eb80 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 400d2c8:	400e9440 	call	400e944 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 400d2cc:	01010074 	movhi	r4,1025
 400d2d0:	213a6a04 	addi	r4,r4,-5720
 400d2d4:	400f4640 	call	400f464 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 400d2d8:	d0a71417 	ldw	r2,-25520(gp)
 400d2dc:	d0e71517 	ldw	r3,-25516(gp)
 400d2e0:	d1271617 	ldw	r4,-25512(gp)
 400d2e4:	200d883a 	mov	r6,r4
 400d2e8:	180b883a 	mov	r5,r3
 400d2ec:	1009883a 	mov	r4,r2
 400d2f0:	40002880 	call	4000288 <main>
 400d2f4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 400d2f8:	01000044 	movi	r4,1
 400d2fc:	400cc080 	call	400cc08 <close>
  exit (result);
 400d300:	e13fff17 	ldw	r4,-4(fp)
 400d304:	400f4780 	call	400f478 <exit>

0400d308 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 400d308:	defffe04 	addi	sp,sp,-8
 400d30c:	df000115 	stw	fp,4(sp)
 400d310:	df000104 	addi	fp,sp,4
 400d314:	e13fff15 	stw	r4,-4(fp)
}
 400d318:	0001883a 	nop
 400d31c:	e037883a 	mov	sp,fp
 400d320:	df000017 	ldw	fp,0(sp)
 400d324:	dec00104 	addi	sp,sp,4
 400d328:	f800283a 	ret

0400d32c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 400d32c:	defffe04 	addi	sp,sp,-8
 400d330:	df000115 	stw	fp,4(sp)
 400d334:	df000104 	addi	fp,sp,4
 400d338:	e13fff15 	stw	r4,-4(fp)
}
 400d33c:	0001883a 	nop
 400d340:	e037883a 	mov	sp,fp
 400d344:	df000017 	ldw	fp,0(sp)
 400d348:	dec00104 	addi	sp,sp,4
 400d34c:	f800283a 	ret

0400d350 <alt_get_errno>:
{
 400d350:	defffe04 	addi	sp,sp,-8
 400d354:	dfc00115 	stw	ra,4(sp)
 400d358:	df000015 	stw	fp,0(sp)
 400d35c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d360:	d0a00917 	ldw	r2,-32732(gp)
 400d364:	10000326 	beq	r2,zero,400d374 <alt_get_errno+0x24>
 400d368:	d0a00917 	ldw	r2,-32732(gp)
 400d36c:	103ee83a 	callr	r2
 400d370:	00000106 	br	400d378 <alt_get_errno+0x28>
 400d374:	d0a71204 	addi	r2,gp,-25528
}
 400d378:	e037883a 	mov	sp,fp
 400d37c:	dfc00117 	ldw	ra,4(sp)
 400d380:	df000017 	ldw	fp,0(sp)
 400d384:	dec00204 	addi	sp,sp,8
 400d388:	f800283a 	ret

0400d38c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 400d38c:	defff904 	addi	sp,sp,-28
 400d390:	dfc00615 	stw	ra,24(sp)
 400d394:	df000515 	stw	fp,20(sp)
 400d398:	df000504 	addi	fp,sp,20
 400d39c:	e13ffd15 	stw	r4,-12(fp)
 400d3a0:	e17ffc15 	stw	r5,-16(fp)
 400d3a4:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d3a8:	e0bffd17 	ldw	r2,-12(fp)
 400d3ac:	10000616 	blt	r2,zero,400d3c8 <read+0x3c>
 400d3b0:	e0bffd17 	ldw	r2,-12(fp)
 400d3b4:	10c00324 	muli	r3,r2,12
 400d3b8:	00810074 	movhi	r2,1025
 400d3bc:	1081c404 	addi	r2,r2,1808
 400d3c0:	1885883a 	add	r2,r3,r2
 400d3c4:	00000106 	br	400d3cc <read+0x40>
 400d3c8:	0005883a 	mov	r2,zero
 400d3cc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 400d3d0:	e0bfff17 	ldw	r2,-4(fp)
 400d3d4:	10002226 	beq	r2,zero,400d460 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400d3d8:	e0bfff17 	ldw	r2,-4(fp)
 400d3dc:	10800217 	ldw	r2,8(r2)
 400d3e0:	108000cc 	andi	r2,r2,3
 400d3e4:	10800060 	cmpeqi	r2,r2,1
 400d3e8:	1000181e 	bne	r2,zero,400d44c <read+0xc0>
        (fd->dev->read))
 400d3ec:	e0bfff17 	ldw	r2,-4(fp)
 400d3f0:	10800017 	ldw	r2,0(r2)
 400d3f4:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400d3f8:	10001426 	beq	r2,zero,400d44c <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 400d3fc:	e0bfff17 	ldw	r2,-4(fp)
 400d400:	10800017 	ldw	r2,0(r2)
 400d404:	10800517 	ldw	r2,20(r2)
 400d408:	e0fffb17 	ldw	r3,-20(fp)
 400d40c:	180d883a 	mov	r6,r3
 400d410:	e17ffc17 	ldw	r5,-16(fp)
 400d414:	e13fff17 	ldw	r4,-4(fp)
 400d418:	103ee83a 	callr	r2
 400d41c:	e0bffe15 	stw	r2,-8(fp)
 400d420:	e0bffe17 	ldw	r2,-8(fp)
 400d424:	1000070e 	bge	r2,zero,400d444 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 400d428:	400d3500 	call	400d350 <alt_get_errno>
 400d42c:	1007883a 	mov	r3,r2
 400d430:	e0bffe17 	ldw	r2,-8(fp)
 400d434:	0085c83a 	sub	r2,zero,r2
 400d438:	18800015 	stw	r2,0(r3)
          return -1;
 400d43c:	00bfffc4 	movi	r2,-1
 400d440:	00000c06 	br	400d474 <read+0xe8>
        }
        return rval;
 400d444:	e0bffe17 	ldw	r2,-8(fp)
 400d448:	00000a06 	br	400d474 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 400d44c:	400d3500 	call	400d350 <alt_get_errno>
 400d450:	1007883a 	mov	r3,r2
 400d454:	00800344 	movi	r2,13
 400d458:	18800015 	stw	r2,0(r3)
 400d45c:	00000406 	br	400d470 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 400d460:	400d3500 	call	400d350 <alt_get_errno>
 400d464:	1007883a 	mov	r3,r2
 400d468:	00801444 	movi	r2,81
 400d46c:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400d470:	00bfffc4 	movi	r2,-1
}
 400d474:	e037883a 	mov	sp,fp
 400d478:	dfc00117 	ldw	ra,4(sp)
 400d47c:	df000017 	ldw	fp,0(sp)
 400d480:	dec00204 	addi	sp,sp,8
 400d484:	f800283a 	ret

0400d488 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 400d488:	defffe04 	addi	sp,sp,-8
 400d48c:	df000115 	stw	fp,4(sp)
 400d490:	df000104 	addi	fp,sp,4
 400d494:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 400d498:	e0bfff17 	ldw	r2,-4(fp)
 400d49c:	108000d0 	cmplti	r2,r2,3
 400d4a0:	10000a1e 	bne	r2,zero,400d4cc <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
 400d4a4:	e0bfff17 	ldw	r2,-4(fp)
 400d4a8:	10c00324 	muli	r3,r2,12
 400d4ac:	00810074 	movhi	r2,1025
 400d4b0:	1885883a 	add	r2,r3,r2
 400d4b4:	1001c615 	stw	zero,1816(r2)
    alt_fd_list[fd].dev      = 0;
 400d4b8:	e0bfff17 	ldw	r2,-4(fp)
 400d4bc:	10c00324 	muli	r3,r2,12
 400d4c0:	00810074 	movhi	r2,1025
 400d4c4:	1885883a 	add	r2,r3,r2
 400d4c8:	1001c415 	stw	zero,1808(r2)
  }
}
 400d4cc:	0001883a 	nop
 400d4d0:	e037883a 	mov	sp,fp
 400d4d4:	df000017 	ldw	fp,0(sp)
 400d4d8:	dec00104 	addi	sp,sp,4
 400d4dc:	f800283a 	ret

0400d4e0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 400d4e0:	defff904 	addi	sp,sp,-28
 400d4e4:	df000615 	stw	fp,24(sp)
 400d4e8:	df000604 	addi	fp,sp,24
 400d4ec:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
 400d4f0:	0005303a 	rdctl	r2,status
 400d4f4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400d4f8:	e0fffd17 	ldw	r3,-12(fp)
 400d4fc:	00bfff84 	movi	r2,-2
 400d500:	1884703a 	and	r2,r3,r2
 400d504:	1001703a 	wrctl	status,r2
  return context;
 400d508:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 400d50c:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 400d510:	d0a00a17 	ldw	r2,-32728(gp)
 400d514:	10c000c4 	addi	r3,r2,3
 400d518:	00bfff04 	movi	r2,-4
 400d51c:	1884703a 	and	r2,r3,r2
 400d520:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 400d524:	d0e00a17 	ldw	r3,-32728(gp)
 400d528:	e0bffa17 	ldw	r2,-24(fp)
 400d52c:	1887883a 	add	r3,r3,r2
 400d530:	00820034 	movhi	r2,2048
 400d534:	10800004 	addi	r2,r2,0
 400d538:	10c0072e 	bgeu	r2,r3,400d558 <sbrk+0x78>
 400d53c:	e0bfff17 	ldw	r2,-4(fp)
 400d540:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 400d544:	e0bffc17 	ldw	r2,-16(fp)
 400d548:	1001703a 	wrctl	status,r2
}
 400d54c:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 400d550:	00bfffc4 	movi	r2,-1
 400d554:	00000c06 	br	400d588 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 400d558:	d0a00a17 	ldw	r2,-32728(gp)
 400d55c:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
 400d560:	d0e00a17 	ldw	r3,-32728(gp)
 400d564:	e0bffa17 	ldw	r2,-24(fp)
 400d568:	1885883a 	add	r2,r3,r2
 400d56c:	d0a00a15 	stw	r2,-32728(gp)
 400d570:	e0bfff17 	ldw	r2,-4(fp)
 400d574:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
 400d578:	e0bffb17 	ldw	r2,-20(fp)
 400d57c:	1001703a 	wrctl	status,r2
}
 400d580:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 400d584:	e0bffe17 	ldw	r2,-8(fp)
} 
 400d588:	e037883a 	mov	sp,fp
 400d58c:	df000017 	ldw	fp,0(sp)
 400d590:	dec00104 	addi	sp,sp,4
 400d594:	f800283a 	ret

0400d598 <alt_get_errno>:
{
 400d598:	defffe04 	addi	sp,sp,-8
 400d59c:	dfc00115 	stw	ra,4(sp)
 400d5a0:	df000015 	stw	fp,0(sp)
 400d5a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d5a8:	d0a00917 	ldw	r2,-32732(gp)
 400d5ac:	10000326 	beq	r2,zero,400d5bc <alt_get_errno+0x24>
 400d5b0:	d0a00917 	ldw	r2,-32732(gp)
 400d5b4:	103ee83a 	callr	r2
 400d5b8:	00000106 	br	400d5c0 <alt_get_errno+0x28>
 400d5bc:	d0a71204 	addi	r2,gp,-25528
}
 400d5c0:	e037883a 	mov	sp,fp
 400d5c4:	dfc00117 	ldw	ra,4(sp)
 400d5c8:	df000017 	ldw	fp,0(sp)
 400d5cc:	dec00204 	addi	sp,sp,8
 400d5d0:	f800283a 	ret

0400d5d4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 400d5d4:	defff904 	addi	sp,sp,-28
 400d5d8:	dfc00615 	stw	ra,24(sp)
 400d5dc:	df000515 	stw	fp,20(sp)
 400d5e0:	df000504 	addi	fp,sp,20
 400d5e4:	e13ffd15 	stw	r4,-12(fp)
 400d5e8:	e17ffc15 	stw	r5,-16(fp)
 400d5ec:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d5f0:	e0bffd17 	ldw	r2,-12(fp)
 400d5f4:	10000616 	blt	r2,zero,400d610 <write+0x3c>
 400d5f8:	e0bffd17 	ldw	r2,-12(fp)
 400d5fc:	10c00324 	muli	r3,r2,12
 400d600:	00810074 	movhi	r2,1025
 400d604:	1081c404 	addi	r2,r2,1808
 400d608:	1885883a 	add	r2,r3,r2
 400d60c:	00000106 	br	400d614 <write+0x40>
 400d610:	0005883a 	mov	r2,zero
 400d614:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
 400d618:	e0bfff17 	ldw	r2,-4(fp)
 400d61c:	10002126 	beq	r2,zero,400d6a4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 400d620:	e0bfff17 	ldw	r2,-4(fp)
 400d624:	10800217 	ldw	r2,8(r2)
 400d628:	108000cc 	andi	r2,r2,3
 400d62c:	10001826 	beq	r2,zero,400d690 <write+0xbc>
 400d630:	e0bfff17 	ldw	r2,-4(fp)
 400d634:	10800017 	ldw	r2,0(r2)
 400d638:	10800617 	ldw	r2,24(r2)
 400d63c:	10001426 	beq	r2,zero,400d690 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 400d640:	e0bfff17 	ldw	r2,-4(fp)
 400d644:	10800017 	ldw	r2,0(r2)
 400d648:	10800617 	ldw	r2,24(r2)
 400d64c:	e0fffb17 	ldw	r3,-20(fp)
 400d650:	180d883a 	mov	r6,r3
 400d654:	e17ffc17 	ldw	r5,-16(fp)
 400d658:	e13fff17 	ldw	r4,-4(fp)
 400d65c:	103ee83a 	callr	r2
 400d660:	e0bffe15 	stw	r2,-8(fp)
 400d664:	e0bffe17 	ldw	r2,-8(fp)
 400d668:	1000070e 	bge	r2,zero,400d688 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 400d66c:	400d5980 	call	400d598 <alt_get_errno>
 400d670:	1007883a 	mov	r3,r2
 400d674:	e0bffe17 	ldw	r2,-8(fp)
 400d678:	0085c83a 	sub	r2,zero,r2
 400d67c:	18800015 	stw	r2,0(r3)
        return -1;
 400d680:	00bfffc4 	movi	r2,-1
 400d684:	00000c06 	br	400d6b8 <write+0xe4>
      }
      return rval;
 400d688:	e0bffe17 	ldw	r2,-8(fp)
 400d68c:	00000a06 	br	400d6b8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 400d690:	400d5980 	call	400d598 <alt_get_errno>
 400d694:	1007883a 	mov	r3,r2
 400d698:	00800344 	movi	r2,13
 400d69c:	18800015 	stw	r2,0(r3)
 400d6a0:	00000406 	br	400d6b4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 400d6a4:	400d5980 	call	400d598 <alt_get_errno>
 400d6a8:	1007883a 	mov	r3,r2
 400d6ac:	00801444 	movi	r2,81
 400d6b0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400d6b4:	00bfffc4 	movi	r2,-1
}
 400d6b8:	e037883a 	mov	sp,fp
 400d6bc:	dfc00117 	ldw	ra,4(sp)
 400d6c0:	df000017 	ldw	fp,0(sp)
 400d6c4:	dec00204 	addi	sp,sp,8
 400d6c8:	f800283a 	ret

0400d6cc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 400d6cc:	defffd04 	addi	sp,sp,-12
 400d6d0:	dfc00215 	stw	ra,8(sp)
 400d6d4:	df000115 	stw	fp,4(sp)
 400d6d8:	df000104 	addi	fp,sp,4
 400d6dc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 400d6e0:	d1600604 	addi	r5,gp,-32744
 400d6e4:	e13fff17 	ldw	r4,-4(fp)
 400d6e8:	400e89c0 	call	400e89c <alt_dev_llist_insert>
}
 400d6ec:	e037883a 	mov	sp,fp
 400d6f0:	dfc00117 	ldw	ra,4(sp)
 400d6f4:	df000017 	ldw	fp,0(sp)
 400d6f8:	dec00204 	addi	sp,sp,8
 400d6fc:	f800283a 	ret

0400d700 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 400d700:	defffd04 	addi	sp,sp,-12
 400d704:	dfc00215 	stw	ra,8(sp)
 400d708:	df000115 	stw	fp,4(sp)
 400d70c:	df000104 	addi	fp,sp,4
 400d710:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_CPU, nios2_cpu);
 400d714:	400f1700 	call	400f170 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 400d718:	00800044 	movi	r2,1
 400d71c:	1001703a 	wrctl	status,r2
}
 400d720:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
 400d724:	0001883a 	nop
 400d728:	e037883a 	mov	sp,fp
 400d72c:	dfc00117 	ldw	ra,4(sp)
 400d730:	df000017 	ldw	fp,0(sp)
 400d734:	dec00204 	addi	sp,sp,8
 400d738:	f800283a 	ret

0400d73c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 400d73c:	defffe04 	addi	sp,sp,-8
 400d740:	dfc00115 	stw	ra,4(sp)
 400d744:	df000015 	stw	fp,0(sp)
 400d748:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 400d74c:	01c0fa04 	movi	r7,1000
 400d750:	01800084 	movi	r6,2
 400d754:	000b883a 	mov	r5,zero
 400d758:	01020034 	movhi	r4,2048
 400d75c:	21041804 	addi	r4,r4,4192
 400d760:	400e2980 	call	400e298 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_1, timer_1);
    ALTERA_AVALON_TIMER_INIT ( TIMER_2, timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG, jtag);
 400d764:	000d883a 	mov	r6,zero
 400d768:	000b883a 	mov	r5,zero
 400d76c:	01010074 	movhi	r4,1025
 400d770:	21022e04 	addi	r4,r4,2232
 400d774:	400d9100 	call	400d910 <altera_avalon_jtag_uart_init>
 400d778:	01010074 	movhi	r4,1025
 400d77c:	21022404 	addi	r4,r4,2192
 400d780:	400d6cc0 	call	400d6cc <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( ESP32_SPI, esp32_spi);
 400d784:	0001883a 	nop
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER, accelerometer);
 400d788:	01010074 	movhi	r4,1025
 400d78c:	21063c04 	addi	r4,r4,6384
 400d790:	400d6cc0 	call	400d6cc <alt_dev_reg>
}
 400d794:	0001883a 	nop
 400d798:	e037883a 	mov	sp,fp
 400d79c:	dfc00117 	ldw	ra,4(sp)
 400d7a0:	df000017 	ldw	fp,0(sp)
 400d7a4:	dec00204 	addi	sp,sp,8
 400d7a8:	f800283a 	ret

0400d7ac <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 400d7ac:	defffa04 	addi	sp,sp,-24
 400d7b0:	dfc00515 	stw	ra,20(sp)
 400d7b4:	df000415 	stw	fp,16(sp)
 400d7b8:	df000404 	addi	fp,sp,16
 400d7bc:	e13ffe15 	stw	r4,-8(fp)
 400d7c0:	e17ffd15 	stw	r5,-12(fp)
 400d7c4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400d7c8:	e0bffe17 	ldw	r2,-8(fp)
 400d7cc:	10800017 	ldw	r2,0(r2)
 400d7d0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 400d7d4:	e0bfff17 	ldw	r2,-4(fp)
 400d7d8:	10c00a04 	addi	r3,r2,40
 400d7dc:	e0bffe17 	ldw	r2,-8(fp)
 400d7e0:	10800217 	ldw	r2,8(r2)
 400d7e4:	100f883a 	mov	r7,r2
 400d7e8:	e1bffc17 	ldw	r6,-16(fp)
 400d7ec:	e17ffd17 	ldw	r5,-12(fp)
 400d7f0:	1809883a 	mov	r4,r3
 400d7f4:	400ddd00 	call	400ddd0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 400d7f8:	e037883a 	mov	sp,fp
 400d7fc:	dfc00117 	ldw	ra,4(sp)
 400d800:	df000017 	ldw	fp,0(sp)
 400d804:	dec00204 	addi	sp,sp,8
 400d808:	f800283a 	ret

0400d80c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 400d80c:	defffa04 	addi	sp,sp,-24
 400d810:	dfc00515 	stw	ra,20(sp)
 400d814:	df000415 	stw	fp,16(sp)
 400d818:	df000404 	addi	fp,sp,16
 400d81c:	e13ffe15 	stw	r4,-8(fp)
 400d820:	e17ffd15 	stw	r5,-12(fp)
 400d824:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400d828:	e0bffe17 	ldw	r2,-8(fp)
 400d82c:	10800017 	ldw	r2,0(r2)
 400d830:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 400d834:	e0bfff17 	ldw	r2,-4(fp)
 400d838:	10c00a04 	addi	r3,r2,40
 400d83c:	e0bffe17 	ldw	r2,-8(fp)
 400d840:	10800217 	ldw	r2,8(r2)
 400d844:	100f883a 	mov	r7,r2
 400d848:	e1bffc17 	ldw	r6,-16(fp)
 400d84c:	e17ffd17 	ldw	r5,-12(fp)
 400d850:	1809883a 	mov	r4,r3
 400d854:	400dff00 	call	400dff0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 400d858:	e037883a 	mov	sp,fp
 400d85c:	dfc00117 	ldw	ra,4(sp)
 400d860:	df000017 	ldw	fp,0(sp)
 400d864:	dec00204 	addi	sp,sp,8
 400d868:	f800283a 	ret

0400d86c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 400d86c:	defffc04 	addi	sp,sp,-16
 400d870:	dfc00315 	stw	ra,12(sp)
 400d874:	df000215 	stw	fp,8(sp)
 400d878:	df000204 	addi	fp,sp,8
 400d87c:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400d880:	e0bffe17 	ldw	r2,-8(fp)
 400d884:	10800017 	ldw	r2,0(r2)
 400d888:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 400d88c:	e0bfff17 	ldw	r2,-4(fp)
 400d890:	10c00a04 	addi	r3,r2,40
 400d894:	e0bffe17 	ldw	r2,-8(fp)
 400d898:	10800217 	ldw	r2,8(r2)
 400d89c:	100b883a 	mov	r5,r2
 400d8a0:	1809883a 	mov	r4,r3
 400d8a4:	400dc740 	call	400dc74 <altera_avalon_jtag_uart_close>
}
 400d8a8:	e037883a 	mov	sp,fp
 400d8ac:	dfc00117 	ldw	ra,4(sp)
 400d8b0:	df000017 	ldw	fp,0(sp)
 400d8b4:	dec00204 	addi	sp,sp,8
 400d8b8:	f800283a 	ret

0400d8bc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 400d8bc:	defffa04 	addi	sp,sp,-24
 400d8c0:	dfc00515 	stw	ra,20(sp)
 400d8c4:	df000415 	stw	fp,16(sp)
 400d8c8:	df000404 	addi	fp,sp,16
 400d8cc:	e13ffe15 	stw	r4,-8(fp)
 400d8d0:	e17ffd15 	stw	r5,-12(fp)
 400d8d4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 400d8d8:	e0bffe17 	ldw	r2,-8(fp)
 400d8dc:	10800017 	ldw	r2,0(r2)
 400d8e0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 400d8e4:	e0bfff17 	ldw	r2,-4(fp)
 400d8e8:	10800a04 	addi	r2,r2,40
 400d8ec:	e1bffc17 	ldw	r6,-16(fp)
 400d8f0:	e17ffd17 	ldw	r5,-12(fp)
 400d8f4:	1009883a 	mov	r4,r2
 400d8f8:	400dcdc0 	call	400dcdc <altera_avalon_jtag_uart_ioctl>
}
 400d8fc:	e037883a 	mov	sp,fp
 400d900:	dfc00117 	ldw	ra,4(sp)
 400d904:	df000017 	ldw	fp,0(sp)
 400d908:	dec00204 	addi	sp,sp,8
 400d90c:	f800283a 	ret

0400d910 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 400d910:	defffb04 	addi	sp,sp,-20
 400d914:	dfc00415 	stw	ra,16(sp)
 400d918:	df000315 	stw	fp,12(sp)
 400d91c:	df000304 	addi	fp,sp,12
 400d920:	e13fff15 	stw	r4,-4(fp)
 400d924:	e17ffe15 	stw	r5,-8(fp)
 400d928:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400d92c:	e0bfff17 	ldw	r2,-4(fp)
 400d930:	00c00044 	movi	r3,1
 400d934:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 400d938:	e0bfff17 	ldw	r2,-4(fp)
 400d93c:	10800017 	ldw	r2,0(r2)
 400d940:	10800104 	addi	r2,r2,4
 400d944:	1007883a 	mov	r3,r2
 400d948:	e0bfff17 	ldw	r2,-4(fp)
 400d94c:	10800817 	ldw	r2,32(r2)
 400d950:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 400d954:	e0bffd17 	ldw	r2,-12(fp)
 400d958:	01810074 	movhi	r6,1025
 400d95c:	31b67104 	addi	r6,r6,-9788
 400d960:	e17fff17 	ldw	r5,-4(fp)
 400d964:	1009883a 	mov	r4,r2
 400d968:	400ebfc0 	call	400ebfc <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 400d96c:	e0bfff17 	ldw	r2,-4(fp)
 400d970:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 400d974:	e0bfff17 	ldw	r2,-4(fp)
 400d978:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 400d97c:	d0e71817 	ldw	r3,-25504(gp)
 400d980:	e1ffff17 	ldw	r7,-4(fp)
 400d984:	01810074 	movhi	r6,1025
 400d988:	31b6f504 	addi	r6,r6,-9260
 400d98c:	180b883a 	mov	r5,r3
 400d990:	1009883a 	mov	r4,r2
 400d994:	400e6e00 	call	400e6e0 <alt_alarm_start>
 400d998:	1000040e 	bge	r2,zero,400d9ac <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 400d99c:	e0ffff17 	ldw	r3,-4(fp)
 400d9a0:	00a00034 	movhi	r2,32768
 400d9a4:	10bfffc4 	addi	r2,r2,-1
 400d9a8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 400d9ac:	0001883a 	nop
 400d9b0:	e037883a 	mov	sp,fp
 400d9b4:	dfc00117 	ldw	ra,4(sp)
 400d9b8:	df000017 	ldw	fp,0(sp)
 400d9bc:	dec00204 	addi	sp,sp,8
 400d9c0:	f800283a 	ret

0400d9c4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 400d9c4:	defff704 	addi	sp,sp,-36
 400d9c8:	df000815 	stw	fp,32(sp)
 400d9cc:	df000804 	addi	fp,sp,32
 400d9d0:	e13ff915 	stw	r4,-28(fp)
 400d9d4:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 400d9d8:	e0bff917 	ldw	r2,-28(fp)
 400d9dc:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
 400d9e0:	e0bffd17 	ldw	r2,-12(fp)
 400d9e4:	10800017 	ldw	r2,0(r2)
 400d9e8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400d9ec:	e0bffc17 	ldw	r2,-16(fp)
 400d9f0:	10800104 	addi	r2,r2,4
 400d9f4:	10800037 	ldwio	r2,0(r2)
 400d9f8:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 400d9fc:	e0bffb17 	ldw	r2,-20(fp)
 400da00:	1080c00c 	andi	r2,r2,768
 400da04:	10006d26 	beq	r2,zero,400dbbc <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 400da08:	e0bffb17 	ldw	r2,-20(fp)
 400da0c:	1080400c 	andi	r2,r2,256
 400da10:	10003526 	beq	r2,zero,400dae8 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 400da14:	00800074 	movhi	r2,1
 400da18:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400da1c:	e0bffd17 	ldw	r2,-12(fp)
 400da20:	10800a17 	ldw	r2,40(r2)
 400da24:	10800044 	addi	r2,r2,1
 400da28:	1081ffcc 	andi	r2,r2,2047
 400da2c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
 400da30:	e0bffd17 	ldw	r2,-12(fp)
 400da34:	10800b17 	ldw	r2,44(r2)
 400da38:	e0fffa17 	ldw	r3,-24(fp)
 400da3c:	18801526 	beq	r3,r2,400da94 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 400da40:	e0bffc17 	ldw	r2,-16(fp)
 400da44:	10800037 	ldwio	r2,0(r2)
 400da48:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 400da4c:	e0bfff17 	ldw	r2,-4(fp)
 400da50:	10a0000c 	andi	r2,r2,32768
 400da54:	10001126 	beq	r2,zero,400da9c <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 400da58:	e0bffd17 	ldw	r2,-12(fp)
 400da5c:	10800a17 	ldw	r2,40(r2)
 400da60:	e0ffff17 	ldw	r3,-4(fp)
 400da64:	1809883a 	mov	r4,r3
 400da68:	e0fffd17 	ldw	r3,-12(fp)
 400da6c:	1885883a 	add	r2,r3,r2
 400da70:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400da74:	e0bffd17 	ldw	r2,-12(fp)
 400da78:	10800a17 	ldw	r2,40(r2)
 400da7c:	10800044 	addi	r2,r2,1
 400da80:	10c1ffcc 	andi	r3,r2,2047
 400da84:	e0bffd17 	ldw	r2,-12(fp)
 400da88:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
 400da8c:	0001883a 	nop
      {
 400da90:	003fe206 	br	400da1c <altera_avalon_jtag_uart_irq+0x58>
          break;
 400da94:	0001883a 	nop
 400da98:	00000106 	br	400daa0 <altera_avalon_jtag_uart_irq+0xdc>
          break;
 400da9c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 400daa0:	e0bfff17 	ldw	r2,-4(fp)
 400daa4:	10bfffec 	andhi	r2,r2,65535
 400daa8:	10000f26 	beq	r2,zero,400dae8 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400daac:	e0bffd17 	ldw	r2,-12(fp)
 400dab0:	10c00817 	ldw	r3,32(r2)
 400dab4:	00bfff84 	movi	r2,-2
 400dab8:	1886703a 	and	r3,r3,r2
 400dabc:	e0bffd17 	ldw	r2,-12(fp)
 400dac0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 400dac4:	e0bffc17 	ldw	r2,-16(fp)
 400dac8:	10800104 	addi	r2,r2,4
 400dacc:	1007883a 	mov	r3,r2
 400dad0:	e0bffd17 	ldw	r2,-12(fp)
 400dad4:	10800817 	ldw	r2,32(r2)
 400dad8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400dadc:	e0bffc17 	ldw	r2,-16(fp)
 400dae0:	10800104 	addi	r2,r2,4
 400dae4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 400dae8:	e0bffb17 	ldw	r2,-20(fp)
 400daec:	1080800c 	andi	r2,r2,512
 400daf0:	103fbe26 	beq	r2,zero,400d9ec <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 400daf4:	e0bffb17 	ldw	r2,-20(fp)
 400daf8:	1004d43a 	srli	r2,r2,16
 400dafc:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 400db00:	00001406 	br	400db54 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 400db04:	e0bffc17 	ldw	r2,-16(fp)
 400db08:	e0fffd17 	ldw	r3,-12(fp)
 400db0c:	18c00d17 	ldw	r3,52(r3)
 400db10:	e13ffd17 	ldw	r4,-12(fp)
 400db14:	20c7883a 	add	r3,r4,r3
 400db18:	18c20e03 	ldbu	r3,2104(r3)
 400db1c:	18c03fcc 	andi	r3,r3,255
 400db20:	18c0201c 	xori	r3,r3,128
 400db24:	18ffe004 	addi	r3,r3,-128
 400db28:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400db2c:	e0bffd17 	ldw	r2,-12(fp)
 400db30:	10800d17 	ldw	r2,52(r2)
 400db34:	10800044 	addi	r2,r2,1
 400db38:	10c1ffcc 	andi	r3,r2,2047
 400db3c:	e0bffd17 	ldw	r2,-12(fp)
 400db40:	10c00d15 	stw	r3,52(r2)
 400db44:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 400db48:	e0bffe17 	ldw	r2,-8(fp)
 400db4c:	10bfffc4 	addi	r2,r2,-1
 400db50:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
 400db54:	e0bffe17 	ldw	r2,-8(fp)
 400db58:	10000526 	beq	r2,zero,400db70 <altera_avalon_jtag_uart_irq+0x1ac>
 400db5c:	e0bffd17 	ldw	r2,-12(fp)
 400db60:	10c00d17 	ldw	r3,52(r2)
 400db64:	e0bffd17 	ldw	r2,-12(fp)
 400db68:	10800c17 	ldw	r2,48(r2)
 400db6c:	18bfe51e 	bne	r3,r2,400db04 <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
 400db70:	e0bffe17 	ldw	r2,-8(fp)
 400db74:	103f9d26 	beq	r2,zero,400d9ec <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400db78:	e0bffd17 	ldw	r2,-12(fp)
 400db7c:	10c00817 	ldw	r3,32(r2)
 400db80:	00bfff44 	movi	r2,-3
 400db84:	1886703a 	and	r3,r3,r2
 400db88:	e0bffd17 	ldw	r2,-12(fp)
 400db8c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400db90:	e0bffd17 	ldw	r2,-12(fp)
 400db94:	10800017 	ldw	r2,0(r2)
 400db98:	10800104 	addi	r2,r2,4
 400db9c:	1007883a 	mov	r3,r2
 400dba0:	e0bffd17 	ldw	r2,-12(fp)
 400dba4:	10800817 	ldw	r2,32(r2)
 400dba8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400dbac:	e0bffc17 	ldw	r2,-16(fp)
 400dbb0:	10800104 	addi	r2,r2,4
 400dbb4:	10800037 	ldwio	r2,0(r2)
  {
 400dbb8:	003f8c06 	br	400d9ec <altera_avalon_jtag_uart_irq+0x28>
      break;
 400dbbc:	0001883a 	nop
      }
    }
  }
}
 400dbc0:	0001883a 	nop
 400dbc4:	e037883a 	mov	sp,fp
 400dbc8:	df000017 	ldw	fp,0(sp)
 400dbcc:	dec00104 	addi	sp,sp,4
 400dbd0:	f800283a 	ret

0400dbd4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 400dbd4:	defffc04 	addi	sp,sp,-16
 400dbd8:	df000315 	stw	fp,12(sp)
 400dbdc:	df000304 	addi	fp,sp,12
 400dbe0:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 400dbe4:	e0bffd17 	ldw	r2,-12(fp)
 400dbe8:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 400dbec:	e0bfff17 	ldw	r2,-4(fp)
 400dbf0:	10800017 	ldw	r2,0(r2)
 400dbf4:	10800104 	addi	r2,r2,4
 400dbf8:	10800037 	ldwio	r2,0(r2)
 400dbfc:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 400dc00:	e0bffe17 	ldw	r2,-8(fp)
 400dc04:	1081000c 	andi	r2,r2,1024
 400dc08:	10000b26 	beq	r2,zero,400dc38 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 400dc0c:	e0bfff17 	ldw	r2,-4(fp)
 400dc10:	10800017 	ldw	r2,0(r2)
 400dc14:	10800104 	addi	r2,r2,4
 400dc18:	1007883a 	mov	r3,r2
 400dc1c:	e0bfff17 	ldw	r2,-4(fp)
 400dc20:	10800817 	ldw	r2,32(r2)
 400dc24:	10810014 	ori	r2,r2,1024
 400dc28:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 400dc2c:	e0bfff17 	ldw	r2,-4(fp)
 400dc30:	10000915 	stw	zero,36(r2)
 400dc34:	00000a06 	br	400dc60 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 400dc38:	e0bfff17 	ldw	r2,-4(fp)
 400dc3c:	10c00917 	ldw	r3,36(r2)
 400dc40:	00a00034 	movhi	r2,32768
 400dc44:	10bfff04 	addi	r2,r2,-4
 400dc48:	10c00536 	bltu	r2,r3,400dc60 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 400dc4c:	e0bfff17 	ldw	r2,-4(fp)
 400dc50:	10800917 	ldw	r2,36(r2)
 400dc54:	10c00044 	addi	r3,r2,1
 400dc58:	e0bfff17 	ldw	r2,-4(fp)
 400dc5c:	10c00915 	stw	r3,36(r2)
 400dc60:	d0a71817 	ldw	r2,-25504(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 400dc64:	e037883a 	mov	sp,fp
 400dc68:	df000017 	ldw	fp,0(sp)
 400dc6c:	dec00104 	addi	sp,sp,4
 400dc70:	f800283a 	ret

0400dc74 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 400dc74:	defffd04 	addi	sp,sp,-12
 400dc78:	df000215 	stw	fp,8(sp)
 400dc7c:	df000204 	addi	fp,sp,8
 400dc80:	e13fff15 	stw	r4,-4(fp)
 400dc84:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400dc88:	00000506 	br	400dca0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 400dc8c:	e0bffe17 	ldw	r2,-8(fp)
 400dc90:	1090000c 	andi	r2,r2,16384
 400dc94:	10000226 	beq	r2,zero,400dca0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 400dc98:	00bffd44 	movi	r2,-11
 400dc9c:	00000b06 	br	400dccc <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400dca0:	e0bfff17 	ldw	r2,-4(fp)
 400dca4:	10c00d17 	ldw	r3,52(r2)
 400dca8:	e0bfff17 	ldw	r2,-4(fp)
 400dcac:	10800c17 	ldw	r2,48(r2)
 400dcb0:	18800526 	beq	r3,r2,400dcc8 <altera_avalon_jtag_uart_close+0x54>
 400dcb4:	e0bfff17 	ldw	r2,-4(fp)
 400dcb8:	10c00917 	ldw	r3,36(r2)
 400dcbc:	e0bfff17 	ldw	r2,-4(fp)
 400dcc0:	10800117 	ldw	r2,4(r2)
 400dcc4:	18bff136 	bltu	r3,r2,400dc8c <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
 400dcc8:	0005883a 	mov	r2,zero
}
 400dccc:	e037883a 	mov	sp,fp
 400dcd0:	df000017 	ldw	fp,0(sp)
 400dcd4:	dec00104 	addi	sp,sp,4
 400dcd8:	f800283a 	ret

0400dcdc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 400dcdc:	defffa04 	addi	sp,sp,-24
 400dce0:	df000515 	stw	fp,20(sp)
 400dce4:	df000504 	addi	fp,sp,20
 400dce8:	e13ffd15 	stw	r4,-12(fp)
 400dcec:	e17ffc15 	stw	r5,-16(fp)
 400dcf0:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
 400dcf4:	00bff9c4 	movi	r2,-25
 400dcf8:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
 400dcfc:	e0bffc17 	ldw	r2,-16(fp)
 400dd00:	109a8060 	cmpeqi	r2,r2,27137
 400dd04:	1000041e 	bne	r2,zero,400dd18 <altera_avalon_jtag_uart_ioctl+0x3c>
 400dd08:	e0bffc17 	ldw	r2,-16(fp)
 400dd0c:	109a80a0 	cmpeqi	r2,r2,27138
 400dd10:	1000181e 	bne	r2,zero,400dd74 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 400dd14:	00002906 	br	400ddbc <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
 400dd18:	e0bffd17 	ldw	r2,-12(fp)
 400dd1c:	10c00117 	ldw	r3,4(r2)
 400dd20:	00a00034 	movhi	r2,32768
 400dd24:	10bfffc4 	addi	r2,r2,-1
 400dd28:	18802126 	beq	r3,r2,400ddb0 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
 400dd2c:	e0bffb17 	ldw	r2,-20(fp)
 400dd30:	10800017 	ldw	r2,0(r2)
 400dd34:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 400dd38:	e0bffe17 	ldw	r2,-8(fp)
 400dd3c:	10800090 	cmplti	r2,r2,2
 400dd40:	1000061e 	bne	r2,zero,400dd5c <altera_avalon_jtag_uart_ioctl+0x80>
 400dd44:	e0fffe17 	ldw	r3,-8(fp)
 400dd48:	00a00034 	movhi	r2,32768
 400dd4c:	10bfffc4 	addi	r2,r2,-1
 400dd50:	18800226 	beq	r3,r2,400dd5c <altera_avalon_jtag_uart_ioctl+0x80>
 400dd54:	e0bffe17 	ldw	r2,-8(fp)
 400dd58:	00000206 	br	400dd64 <altera_avalon_jtag_uart_ioctl+0x88>
 400dd5c:	00a00034 	movhi	r2,32768
 400dd60:	10bfff84 	addi	r2,r2,-2
 400dd64:	e0fffd17 	ldw	r3,-12(fp)
 400dd68:	18800115 	stw	r2,4(r3)
      rc = 0;
 400dd6c:	e03fff15 	stw	zero,-4(fp)
    break;
 400dd70:	00000f06 	br	400ddb0 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
 400dd74:	e0bffd17 	ldw	r2,-12(fp)
 400dd78:	10c00117 	ldw	r3,4(r2)
 400dd7c:	00a00034 	movhi	r2,32768
 400dd80:	10bfffc4 	addi	r2,r2,-1
 400dd84:	18800c26 	beq	r3,r2,400ddb8 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 400dd88:	e0bffd17 	ldw	r2,-12(fp)
 400dd8c:	10c00917 	ldw	r3,36(r2)
 400dd90:	e0bffd17 	ldw	r2,-12(fp)
 400dd94:	10800117 	ldw	r2,4(r2)
 400dd98:	1885803a 	cmpltu	r2,r3,r2
 400dd9c:	10c03fcc 	andi	r3,r2,255
 400dda0:	e0bffb17 	ldw	r2,-20(fp)
 400dda4:	10c00015 	stw	r3,0(r2)
      rc = 0;
 400dda8:	e03fff15 	stw	zero,-4(fp)
    break;
 400ddac:	00000206 	br	400ddb8 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
 400ddb0:	0001883a 	nop
 400ddb4:	00000106 	br	400ddbc <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
 400ddb8:	0001883a 	nop
  }

  return rc;
 400ddbc:	e0bfff17 	ldw	r2,-4(fp)
}
 400ddc0:	e037883a 	mov	sp,fp
 400ddc4:	df000017 	ldw	fp,0(sp)
 400ddc8:	dec00104 	addi	sp,sp,4
 400ddcc:	f800283a 	ret

0400ddd0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 400ddd0:	defff304 	addi	sp,sp,-52
 400ddd4:	dfc00c15 	stw	ra,48(sp)
 400ddd8:	df000b15 	stw	fp,44(sp)
 400dddc:	df000b04 	addi	fp,sp,44
 400dde0:	e13ff815 	stw	r4,-32(fp)
 400dde4:	e17ff715 	stw	r5,-36(fp)
 400dde8:	e1bff615 	stw	r6,-40(fp)
 400ddec:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
 400ddf0:	e0bff717 	ldw	r2,-36(fp)
 400ddf4:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400ddf8:	00004706 	br	400df18 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 400ddfc:	e0bff817 	ldw	r2,-32(fp)
 400de00:	10800a17 	ldw	r2,40(r2)
 400de04:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
 400de08:	e0bff817 	ldw	r2,-32(fp)
 400de0c:	10800b17 	ldw	r2,44(r2)
 400de10:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
 400de14:	e0fffd17 	ldw	r3,-12(fp)
 400de18:	e0bffc17 	ldw	r2,-16(fp)
 400de1c:	18800536 	bltu	r3,r2,400de34 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 400de20:	e0fffd17 	ldw	r3,-12(fp)
 400de24:	e0bffc17 	ldw	r2,-16(fp)
 400de28:	1885c83a 	sub	r2,r3,r2
 400de2c:	e0bffe15 	stw	r2,-8(fp)
 400de30:	00000406 	br	400de44 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 400de34:	00c20004 	movi	r3,2048
 400de38:	e0bffc17 	ldw	r2,-16(fp)
 400de3c:	1885c83a 	sub	r2,r3,r2
 400de40:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
 400de44:	e0bffe17 	ldw	r2,-8(fp)
 400de48:	10001e26 	beq	r2,zero,400dec4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 400de4c:	e0fff617 	ldw	r3,-40(fp)
 400de50:	e0bffe17 	ldw	r2,-8(fp)
 400de54:	1880022e 	bgeu	r3,r2,400de60 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 400de58:	e0bff617 	ldw	r2,-40(fp)
 400de5c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 400de60:	e0bff817 	ldw	r2,-32(fp)
 400de64:	10c00e04 	addi	r3,r2,56
 400de68:	e0bffc17 	ldw	r2,-16(fp)
 400de6c:	1885883a 	add	r2,r3,r2
 400de70:	e1bffe17 	ldw	r6,-8(fp)
 400de74:	100b883a 	mov	r5,r2
 400de78:	e13fff17 	ldw	r4,-4(fp)
 400de7c:	40055e40 	call	40055e4 <memcpy>
      ptr   += n;
 400de80:	e0ffff17 	ldw	r3,-4(fp)
 400de84:	e0bffe17 	ldw	r2,-8(fp)
 400de88:	1885883a 	add	r2,r3,r2
 400de8c:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
 400de90:	e0fff617 	ldw	r3,-40(fp)
 400de94:	e0bffe17 	ldw	r2,-8(fp)
 400de98:	1885c83a 	sub	r2,r3,r2
 400de9c:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400dea0:	e0fffc17 	ldw	r3,-16(fp)
 400dea4:	e0bffe17 	ldw	r2,-8(fp)
 400dea8:	1885883a 	add	r2,r3,r2
 400deac:	10c1ffcc 	andi	r3,r2,2047
 400deb0:	e0bff817 	ldw	r2,-32(fp)
 400deb4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 400deb8:	e0bff617 	ldw	r2,-40(fp)
 400debc:	00bfcf16 	blt	zero,r2,400ddfc <altera_avalon_jtag_uart_read+0x2c>
 400dec0:	00000106 	br	400dec8 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
 400dec4:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
 400dec8:	e0ffff17 	ldw	r3,-4(fp)
 400decc:	e0bff717 	ldw	r2,-36(fp)
 400ded0:	1880141e 	bne	r3,r2,400df24 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 400ded4:	e0bff517 	ldw	r2,-44(fp)
 400ded8:	1090000c 	andi	r2,r2,16384
 400dedc:	1000131e 	bne	r2,zero,400df2c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 400dee0:	0001883a 	nop
 400dee4:	e0bff817 	ldw	r2,-32(fp)
 400dee8:	10800a17 	ldw	r2,40(r2)
 400deec:	e0fffd17 	ldw	r3,-12(fp)
 400def0:	1880051e 	bne	r3,r2,400df08 <altera_avalon_jtag_uart_read+0x138>
 400def4:	e0bff817 	ldw	r2,-32(fp)
 400def8:	10c00917 	ldw	r3,36(r2)
 400defc:	e0bff817 	ldw	r2,-32(fp)
 400df00:	10800117 	ldw	r2,4(r2)
 400df04:	18bff736 	bltu	r3,r2,400dee4 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 400df08:	e0bff817 	ldw	r2,-32(fp)
 400df0c:	10800a17 	ldw	r2,40(r2)
 400df10:	e0fffd17 	ldw	r3,-12(fp)
 400df14:	18800726 	beq	r3,r2,400df34 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
 400df18:	e0bff617 	ldw	r2,-40(fp)
 400df1c:	00bfb716 	blt	zero,r2,400ddfc <altera_avalon_jtag_uart_read+0x2c>
 400df20:	00000506 	br	400df38 <altera_avalon_jtag_uart_read+0x168>
      break;
 400df24:	0001883a 	nop
 400df28:	00000306 	br	400df38 <altera_avalon_jtag_uart_read+0x168>
      break;
 400df2c:	0001883a 	nop
 400df30:	00000106 	br	400df38 <altera_avalon_jtag_uart_read+0x168>
      break;
 400df34:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 400df38:	e0ffff17 	ldw	r3,-4(fp)
 400df3c:	e0bff717 	ldw	r2,-36(fp)
 400df40:	18801926 	beq	r3,r2,400dfa8 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
 400df44:	0005303a 	rdctl	r2,status
 400df48:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400df4c:	e0fff917 	ldw	r3,-28(fp)
 400df50:	00bfff84 	movi	r2,-2
 400df54:	1884703a 	and	r2,r3,r2
 400df58:	1001703a 	wrctl	status,r2
  return context;
 400df5c:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 400df60:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400df64:	e0bff817 	ldw	r2,-32(fp)
 400df68:	10800817 	ldw	r2,32(r2)
 400df6c:	10c00054 	ori	r3,r2,1
 400df70:	e0bff817 	ldw	r2,-32(fp)
 400df74:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400df78:	e0bff817 	ldw	r2,-32(fp)
 400df7c:	10800017 	ldw	r2,0(r2)
 400df80:	10800104 	addi	r2,r2,4
 400df84:	1007883a 	mov	r3,r2
 400df88:	e0bff817 	ldw	r2,-32(fp)
 400df8c:	10800817 	ldw	r2,32(r2)
 400df90:	18800035 	stwio	r2,0(r3)
 400df94:	e0bffb17 	ldw	r2,-20(fp)
 400df98:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 400df9c:	e0bffa17 	ldw	r2,-24(fp)
 400dfa0:	1001703a 	wrctl	status,r2
}
 400dfa4:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 400dfa8:	e0ffff17 	ldw	r3,-4(fp)
 400dfac:	e0bff717 	ldw	r2,-36(fp)
 400dfb0:	18800426 	beq	r3,r2,400dfc4 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
 400dfb4:	e0ffff17 	ldw	r3,-4(fp)
 400dfb8:	e0bff717 	ldw	r2,-36(fp)
 400dfbc:	1885c83a 	sub	r2,r3,r2
 400dfc0:	00000606 	br	400dfdc <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
 400dfc4:	e0bff517 	ldw	r2,-44(fp)
 400dfc8:	1090000c 	andi	r2,r2,16384
 400dfcc:	10000226 	beq	r2,zero,400dfd8 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
 400dfd0:	00bffd44 	movi	r2,-11
 400dfd4:	00000106 	br	400dfdc <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
 400dfd8:	00bffec4 	movi	r2,-5
}
 400dfdc:	e037883a 	mov	sp,fp
 400dfe0:	dfc00117 	ldw	ra,4(sp)
 400dfe4:	df000017 	ldw	fp,0(sp)
 400dfe8:	dec00204 	addi	sp,sp,8
 400dfec:	f800283a 	ret

0400dff0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 400dff0:	defff304 	addi	sp,sp,-52
 400dff4:	dfc00c15 	stw	ra,48(sp)
 400dff8:	df000b15 	stw	fp,44(sp)
 400dffc:	df000b04 	addi	fp,sp,44
 400e000:	e13ff815 	stw	r4,-32(fp)
 400e004:	e17ff715 	stw	r5,-36(fp)
 400e008:	e1bff615 	stw	r6,-40(fp)
 400e00c:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 400e010:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 400e014:	e0bff717 	ldw	r2,-36(fp)
 400e018:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400e01c:	00003706 	br	400e0fc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 400e020:	e0bff817 	ldw	r2,-32(fp)
 400e024:	10800c17 	ldw	r2,48(r2)
 400e028:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
 400e02c:	e0bff817 	ldw	r2,-32(fp)
 400e030:	10800d17 	ldw	r2,52(r2)
 400e034:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
 400e038:	e0fffc17 	ldw	r3,-16(fp)
 400e03c:	e0bfff17 	ldw	r2,-4(fp)
 400e040:	1880062e 	bgeu	r3,r2,400e05c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 400e044:	e0ffff17 	ldw	r3,-4(fp)
 400e048:	e0bffc17 	ldw	r2,-16(fp)
 400e04c:	1885c83a 	sub	r2,r3,r2
 400e050:	10bfffc4 	addi	r2,r2,-1
 400e054:	e0bffe15 	stw	r2,-8(fp)
 400e058:	00000b06 	br	400e088 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 400e05c:	e0bfff17 	ldw	r2,-4(fp)
 400e060:	10000526 	beq	r2,zero,400e078 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 400e064:	00c20004 	movi	r3,2048
 400e068:	e0bffc17 	ldw	r2,-16(fp)
 400e06c:	1885c83a 	sub	r2,r3,r2
 400e070:	e0bffe15 	stw	r2,-8(fp)
 400e074:	00000406 	br	400e088 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 400e078:	00c1ffc4 	movi	r3,2047
 400e07c:	e0bffc17 	ldw	r2,-16(fp)
 400e080:	1885c83a 	sub	r2,r3,r2
 400e084:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
 400e088:	e0bffe17 	ldw	r2,-8(fp)
 400e08c:	10001e26 	beq	r2,zero,400e108 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 400e090:	e0fff617 	ldw	r3,-40(fp)
 400e094:	e0bffe17 	ldw	r2,-8(fp)
 400e098:	1880022e 	bgeu	r3,r2,400e0a4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 400e09c:	e0bff617 	ldw	r2,-40(fp)
 400e0a0:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 400e0a4:	e0bff817 	ldw	r2,-32(fp)
 400e0a8:	10c20e04 	addi	r3,r2,2104
 400e0ac:	e0bffc17 	ldw	r2,-16(fp)
 400e0b0:	1885883a 	add	r2,r3,r2
 400e0b4:	e1bffe17 	ldw	r6,-8(fp)
 400e0b8:	e17ff717 	ldw	r5,-36(fp)
 400e0bc:	1009883a 	mov	r4,r2
 400e0c0:	40055e40 	call	40055e4 <memcpy>
      ptr   += n;
 400e0c4:	e0fff717 	ldw	r3,-36(fp)
 400e0c8:	e0bffe17 	ldw	r2,-8(fp)
 400e0cc:	1885883a 	add	r2,r3,r2
 400e0d0:	e0bff715 	stw	r2,-36(fp)
      count -= n;
 400e0d4:	e0fff617 	ldw	r3,-40(fp)
 400e0d8:	e0bffe17 	ldw	r2,-8(fp)
 400e0dc:	1885c83a 	sub	r2,r3,r2
 400e0e0:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400e0e4:	e0fffc17 	ldw	r3,-16(fp)
 400e0e8:	e0bffe17 	ldw	r2,-8(fp)
 400e0ec:	1885883a 	add	r2,r3,r2
 400e0f0:	10c1ffcc 	andi	r3,r2,2047
 400e0f4:	e0bff817 	ldw	r2,-32(fp)
 400e0f8:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
 400e0fc:	e0bff617 	ldw	r2,-40(fp)
 400e100:	00bfc716 	blt	zero,r2,400e020 <altera_avalon_jtag_uart_write+0x30>
 400e104:	00000106 	br	400e10c <altera_avalon_jtag_uart_write+0x11c>
        break;
 400e108:	0001883a 	nop
  NIOS2_READ_STATUS (context);
 400e10c:	0005303a 	rdctl	r2,status
 400e110:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e114:	e0fff917 	ldw	r3,-28(fp)
 400e118:	00bfff84 	movi	r2,-2
 400e11c:	1884703a 	and	r2,r3,r2
 400e120:	1001703a 	wrctl	status,r2
  return context;
 400e124:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 400e128:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400e12c:	e0bff817 	ldw	r2,-32(fp)
 400e130:	10800817 	ldw	r2,32(r2)
 400e134:	10c00094 	ori	r3,r2,2
 400e138:	e0bff817 	ldw	r2,-32(fp)
 400e13c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400e140:	e0bff817 	ldw	r2,-32(fp)
 400e144:	10800017 	ldw	r2,0(r2)
 400e148:	10800104 	addi	r2,r2,4
 400e14c:	1007883a 	mov	r3,r2
 400e150:	e0bff817 	ldw	r2,-32(fp)
 400e154:	10800817 	ldw	r2,32(r2)
 400e158:	18800035 	stwio	r2,0(r3)
 400e15c:	e0bffb17 	ldw	r2,-20(fp)
 400e160:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
 400e164:	e0bffa17 	ldw	r2,-24(fp)
 400e168:	1001703a 	wrctl	status,r2
}
 400e16c:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 400e170:	e0bff617 	ldw	r2,-40(fp)
 400e174:	0080100e 	bge	zero,r2,400e1b8 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 400e178:	e0bff517 	ldw	r2,-44(fp)
 400e17c:	1090000c 	andi	r2,r2,16384
 400e180:	1000101e 	bne	r2,zero,400e1c4 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 400e184:	0001883a 	nop
 400e188:	e0bff817 	ldw	r2,-32(fp)
 400e18c:	10800d17 	ldw	r2,52(r2)
 400e190:	e0ffff17 	ldw	r3,-4(fp)
 400e194:	1880051e 	bne	r3,r2,400e1ac <altera_avalon_jtag_uart_write+0x1bc>
 400e198:	e0bff817 	ldw	r2,-32(fp)
 400e19c:	10c00917 	ldw	r3,36(r2)
 400e1a0:	e0bff817 	ldw	r2,-32(fp)
 400e1a4:	10800117 	ldw	r2,4(r2)
 400e1a8:	18bff736 	bltu	r3,r2,400e188 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 400e1ac:	e0bff817 	ldw	r2,-32(fp)
 400e1b0:	10800917 	ldw	r2,36(r2)
 400e1b4:	1000051e 	bne	r2,zero,400e1cc <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
 400e1b8:	e0bff617 	ldw	r2,-40(fp)
 400e1bc:	00bfcf16 	blt	zero,r2,400e0fc <altera_avalon_jtag_uart_write+0x10c>
 400e1c0:	00000306 	br	400e1d0 <altera_avalon_jtag_uart_write+0x1e0>
        break;
 400e1c4:	0001883a 	nop
 400e1c8:	00000106 	br	400e1d0 <altera_avalon_jtag_uart_write+0x1e0>
         break;
 400e1cc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 400e1d0:	e0fff717 	ldw	r3,-36(fp)
 400e1d4:	e0bffd17 	ldw	r2,-12(fp)
 400e1d8:	18800426 	beq	r3,r2,400e1ec <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
 400e1dc:	e0fff717 	ldw	r3,-36(fp)
 400e1e0:	e0bffd17 	ldw	r2,-12(fp)
 400e1e4:	1885c83a 	sub	r2,r3,r2
 400e1e8:	00000606 	br	400e204 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
 400e1ec:	e0bff517 	ldw	r2,-44(fp)
 400e1f0:	1090000c 	andi	r2,r2,16384
 400e1f4:	10000226 	beq	r2,zero,400e200 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
 400e1f8:	00bffd44 	movi	r2,-11
 400e1fc:	00000106 	br	400e204 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 400e200:	00bffec4 	movi	r2,-5
}
 400e204:	e037883a 	mov	sp,fp
 400e208:	dfc00117 	ldw	ra,4(sp)
 400e20c:	df000017 	ldw	fp,0(sp)
 400e210:	dec00204 	addi	sp,sp,8
 400e214:	f800283a 	ret

0400e218 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 400e218:	defff904 	addi	sp,sp,-28
 400e21c:	dfc00615 	stw	ra,24(sp)
 400e220:	df000515 	stw	fp,20(sp)
 400e224:	df000504 	addi	fp,sp,20
 400e228:	e13ffc15 	stw	r4,-16(fp)
 400e22c:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 400e230:	0007883a 	mov	r3,zero
 400e234:	e0bffc17 	ldw	r2,-16(fp)
 400e238:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 400e23c:	e0bffc17 	ldw	r2,-16(fp)
 400e240:	10800104 	addi	r2,r2,4
 400e244:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
 400e248:	0005303a 	rdctl	r2,status
 400e24c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e250:	e0fffd17 	ldw	r3,-12(fp)
 400e254:	00bfff84 	movi	r2,-2
 400e258:	1884703a 	and	r2,r3,r2
 400e25c:	1001703a 	wrctl	status,r2
  return context;
 400e260:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 400e264:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
 400e268:	400f0680 	call	400f068 <alt_tick>
 400e26c:	e0bfff17 	ldw	r2,-4(fp)
 400e270:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
 400e274:	e0bffe17 	ldw	r2,-8(fp)
 400e278:	1001703a 	wrctl	status,r2
}
 400e27c:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
 400e280:	0001883a 	nop
 400e284:	e037883a 	mov	sp,fp
 400e288:	dfc00117 	ldw	ra,4(sp)
 400e28c:	df000017 	ldw	fp,0(sp)
 400e290:	dec00204 	addi	sp,sp,8
 400e294:	f800283a 	ret

0400e298 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 400e298:	defff904 	addi	sp,sp,-28
 400e29c:	dfc00615 	stw	ra,24(sp)
 400e2a0:	df000515 	stw	fp,20(sp)
 400e2a4:	df000504 	addi	fp,sp,20
 400e2a8:	e13ffe15 	stw	r4,-8(fp)
 400e2ac:	e17ffd15 	stw	r5,-12(fp)
 400e2b0:	e1bffc15 	stw	r6,-16(fp)
 400e2b4:	e1fffb15 	stw	r7,-20(fp)
 400e2b8:	e0bffb17 	ldw	r2,-20(fp)
 400e2bc:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 400e2c0:	d0a71817 	ldw	r2,-25504(gp)
 400e2c4:	1000031e 	bne	r2,zero,400e2d4 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
 400e2c8:	e0bfff17 	ldw	r2,-4(fp)
 400e2cc:	d0a71815 	stw	r2,-25504(gp)
    return 0;
 400e2d0:	00000106 	br	400e2d8 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
 400e2d4:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 400e2d8:	e0bffe17 	ldw	r2,-8(fp)
 400e2dc:	10800104 	addi	r2,r2,4
 400e2e0:	00c001c4 	movi	r3,7
 400e2e4:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
 400e2e8:	01810074 	movhi	r6,1025
 400e2ec:	31b88604 	addi	r6,r6,-7656
 400e2f0:	e17ffe17 	ldw	r5,-8(fp)
 400e2f4:	e13ffc17 	ldw	r4,-16(fp)
 400e2f8:	400ebfc0 	call	400ebfc <alt_irq_register>
#endif  
}
 400e2fc:	0001883a 	nop
 400e300:	e037883a 	mov	sp,fp
 400e304:	dfc00117 	ldw	ra,4(sp)
 400e308:	df000017 	ldw	fp,0(sp)
 400e30c:	dec00204 	addi	sp,sp,8
 400e310:	f800283a 	ret

0400e314 <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
 400e314:	defffc04 	addi	sp,sp,-16
 400e318:	dfc00315 	stw	ra,12(sp)
 400e31c:	df000215 	stw	fp,8(sp)
 400e320:	df000204 	addi	fp,sp,8
 400e324:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
 400e328:	d1600604 	addi	r5,gp,-32744
 400e32c:	e13ffe17 	ldw	r4,-8(fp)
 400e330:	400ea0c0 	call	400ea0c <alt_find_dev>
 400e334:	e0bfff15 	stw	r2,-4(fp)

  return dev;
 400e338:	e0bfff17 	ldw	r2,-4(fp)
}
 400e33c:	e037883a 	mov	sp,fp
 400e340:	dfc00117 	ldw	ra,4(sp)
 400e344:	df000017 	ldw	fp,0(sp)
 400e348:	dec00204 	addi	sp,sp,8
 400e34c:	f800283a 	ret

0400e350 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
 400e350:	defffd04 	addi	sp,sp,-12
 400e354:	df000215 	stw	fp,8(sp)
 400e358:	df000204 	addi	fp,sp,8
 400e35c:	e13fff15 	stw	r4,-4(fp)
 400e360:	e17ffe15 	stw	r5,-8(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
 400e364:	e0bfff17 	ldw	r2,-4(fp)
 400e368:	10800a17 	ldw	r2,40(r2)
 400e36c:	10800023 	ldbuio	r2,0(r2)
 400e370:	10803fcc 	andi	r2,r2,255
 400e374:	1007883a 	mov	r3,r2
 400e378:	e0bffe17 	ldw	r2,-8(fp)
 400e37c:	10c00005 	stb	r3,0(r2)

	return 0;
 400e380:	0005883a 	mov	r2,zero
}
 400e384:	e037883a 	mov	sp,fp
 400e388:	df000017 	ldw	fp,0(sp)
 400e38c:	dec00104 	addi	sp,sp,4
 400e390:	f800283a 	ret

0400e394 <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
 400e394:	defffc04 	addi	sp,sp,-16
 400e398:	df000315 	stw	fp,12(sp)
 400e39c:	df000304 	addi	fp,sp,12
 400e3a0:	e13fff15 	stw	r4,-4(fp)
 400e3a4:	2805883a 	mov	r2,r5
 400e3a8:	e1bffd15 	stw	r6,-12(fp)
 400e3ac:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 400e3b0:	e0bfff17 	ldw	r2,-4(fp)
 400e3b4:	10800a17 	ldw	r2,40(r2)
 400e3b8:	1007883a 	mov	r3,r2
 400e3bc:	e0bffe03 	ldbu	r2,-8(fp)
 400e3c0:	10800fcc 	andi	r2,r2,63
 400e3c4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
 400e3c8:	e0bfff17 	ldw	r2,-4(fp)
 400e3cc:	10800a17 	ldw	r2,40(r2)
 400e3d0:	10800044 	addi	r2,r2,1
 400e3d4:	10800023 	ldbuio	r2,0(r2)
 400e3d8:	10803fcc 	andi	r2,r2,255
 400e3dc:	1007883a 	mov	r3,r2
 400e3e0:	e0bffd17 	ldw	r2,-12(fp)
 400e3e4:	10c00005 	stb	r3,0(r2)

	return 0;
 400e3e8:	0005883a 	mov	r2,zero
}
 400e3ec:	e037883a 	mov	sp,fp
 400e3f0:	df000017 	ldw	fp,0(sp)
 400e3f4:	dec00104 	addi	sp,sp,4
 400e3f8:	f800283a 	ret

0400e3fc <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
 400e3fc:	defffc04 	addi	sp,sp,-16
 400e400:	df000315 	stw	fp,12(sp)
 400e404:	df000304 	addi	fp,sp,12
 400e408:	e13fff15 	stw	r4,-4(fp)
 400e40c:	2805883a 	mov	r2,r5
 400e410:	3007883a 	mov	r3,r6
 400e414:	e0bffe05 	stb	r2,-8(fp)
 400e418:	1805883a 	mov	r2,r3
 400e41c:	e0bffd05 	stb	r2,-12(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 400e420:	e0bfff17 	ldw	r2,-4(fp)
 400e424:	10800a17 	ldw	r2,40(r2)
 400e428:	1007883a 	mov	r3,r2
 400e42c:	e0bffe03 	ldbu	r2,-8(fp)
 400e430:	10800fcc 	andi	r2,r2,63
 400e434:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
 400e438:	e0bfff17 	ldw	r2,-4(fp)
 400e43c:	10800a17 	ldw	r2,40(r2)
 400e440:	10800044 	addi	r2,r2,1
 400e444:	1007883a 	mov	r3,r2
 400e448:	e0bffd03 	ldbu	r2,-12(fp)
 400e44c:	18800025 	stbio	r2,0(r3)

	return 0;
 400e450:	0005883a 	mov	r2,zero
}
 400e454:	e037883a 	mov	sp,fp
 400e458:	df000017 	ldw	fp,0(sp)
 400e45c:	dec00104 	addi	sp,sp,4
 400e460:	f800283a 	ret

0400e464 <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
 400e464:	defffd04 	addi	sp,sp,-12
 400e468:	df000215 	stw	fp,8(sp)
 400e46c:	df000204 	addi	fp,sp,8
 400e470:	e13fff15 	stw	r4,-4(fp)
 400e474:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 400e478:	e0bfff17 	ldw	r2,-4(fp)
 400e47c:	10800a17 	ldw	r2,40(r2)
 400e480:	1007883a 	mov	r3,r2
 400e484:	00800c84 	movi	r2,50
 400e488:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
 400e48c:	e0bfff17 	ldw	r2,-4(fp)
 400e490:	10800a17 	ldw	r2,40(r2)
 400e494:	10800044 	addi	r2,r2,1
 400e498:	10800023 	ldbuio	r2,0(r2)
 400e49c:	10803fcc 	andi	r2,r2,255
 400e4a0:	10ffffcc 	andi	r3,r2,65535
 400e4a4:	e0bffe17 	ldw	r2,-8(fp)
 400e4a8:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 400e4ac:	e0bfff17 	ldw	r2,-4(fp)
 400e4b0:	10800a17 	ldw	r2,40(r2)
 400e4b4:	1007883a 	mov	r3,r2
 400e4b8:	00800cc4 	movi	r2,51
 400e4bc:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
 400e4c0:	e0bfff17 	ldw	r2,-4(fp)
 400e4c4:	10800a17 	ldw	r2,40(r2)
 400e4c8:	10800044 	addi	r2,r2,1
 400e4cc:	10800023 	ldbuio	r2,0(r2)
 400e4d0:	10803fcc 	andi	r2,r2,255
 400e4d4:	1006923a 	slli	r3,r2,8
 400e4d8:	00804034 	movhi	r2,256
 400e4dc:	10bfc004 	addi	r2,r2,-256
 400e4e0:	1884703a 	and	r2,r3,r2
 400e4e4:	e0fffe17 	ldw	r3,-8(fp)
 400e4e8:	18c00017 	ldw	r3,0(r3)
 400e4ec:	10c5883a 	add	r2,r2,r3
 400e4f0:	1007883a 	mov	r3,r2
 400e4f4:	e0bffe17 	ldw	r2,-8(fp)
 400e4f8:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
 400e4fc:	e0bffe17 	ldw	r2,-8(fp)
 400e500:	10800017 	ldw	r2,0(r2)
 400e504:	10a0000c 	andi	r2,r2,32768
 400e508:	10000626 	beq	r2,zero,400e524 <alt_up_accelerometer_spi_read_x_axis+0xc0>
	{
		*(x_axis) |= 0xFFFF0000;
 400e50c:	e0bffe17 	ldw	r2,-8(fp)
 400e510:	10800017 	ldw	r2,0(r2)
 400e514:	10bffff4 	orhi	r2,r2,65535
 400e518:	1007883a 	mov	r3,r2
 400e51c:	e0bffe17 	ldw	r2,-8(fp)
 400e520:	10c00015 	stw	r3,0(r2)
	}

	return 0;
 400e524:	0005883a 	mov	r2,zero
}
 400e528:	e037883a 	mov	sp,fp
 400e52c:	df000017 	ldw	fp,0(sp)
 400e530:	dec00104 	addi	sp,sp,4
 400e534:	f800283a 	ret

0400e538 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
 400e538:	defffd04 	addi	sp,sp,-12
 400e53c:	df000215 	stw	fp,8(sp)
 400e540:	df000204 	addi	fp,sp,8
 400e544:	e13fff15 	stw	r4,-4(fp)
 400e548:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 400e54c:	e0bfff17 	ldw	r2,-4(fp)
 400e550:	10800a17 	ldw	r2,40(r2)
 400e554:	1007883a 	mov	r3,r2
 400e558:	00800d04 	movi	r2,52
 400e55c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
 400e560:	e0bfff17 	ldw	r2,-4(fp)
 400e564:	10800a17 	ldw	r2,40(r2)
 400e568:	10800044 	addi	r2,r2,1
 400e56c:	10800023 	ldbuio	r2,0(r2)
 400e570:	10803fcc 	andi	r2,r2,255
 400e574:	10ffffcc 	andi	r3,r2,65535
 400e578:	e0bffe17 	ldw	r2,-8(fp)
 400e57c:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 400e580:	e0bfff17 	ldw	r2,-4(fp)
 400e584:	10800a17 	ldw	r2,40(r2)
 400e588:	1007883a 	mov	r3,r2
 400e58c:	00800d44 	movi	r2,53
 400e590:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
 400e594:	e0bfff17 	ldw	r2,-4(fp)
 400e598:	10800a17 	ldw	r2,40(r2)
 400e59c:	10800044 	addi	r2,r2,1
 400e5a0:	10800023 	ldbuio	r2,0(r2)
 400e5a4:	10803fcc 	andi	r2,r2,255
 400e5a8:	1006923a 	slli	r3,r2,8
 400e5ac:	00804034 	movhi	r2,256
 400e5b0:	10bfc004 	addi	r2,r2,-256
 400e5b4:	1884703a 	and	r2,r3,r2
 400e5b8:	e0fffe17 	ldw	r3,-8(fp)
 400e5bc:	18c00017 	ldw	r3,0(r3)
 400e5c0:	10c5883a 	add	r2,r2,r3
 400e5c4:	1007883a 	mov	r3,r2
 400e5c8:	e0bffe17 	ldw	r2,-8(fp)
 400e5cc:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
 400e5d0:	e0bffe17 	ldw	r2,-8(fp)
 400e5d4:	10800017 	ldw	r2,0(r2)
 400e5d8:	10a0000c 	andi	r2,r2,32768
 400e5dc:	10000626 	beq	r2,zero,400e5f8 <alt_up_accelerometer_spi_read_y_axis+0xc0>
	{
		*(y_axis) |= 0xFFFF0000;
 400e5e0:	e0bffe17 	ldw	r2,-8(fp)
 400e5e4:	10800017 	ldw	r2,0(r2)
 400e5e8:	10bffff4 	orhi	r2,r2,65535
 400e5ec:	1007883a 	mov	r3,r2
 400e5f0:	e0bffe17 	ldw	r2,-8(fp)
 400e5f4:	10c00015 	stw	r3,0(r2)
	}

	return 0;
 400e5f8:	0005883a 	mov	r2,zero
}
 400e5fc:	e037883a 	mov	sp,fp
 400e600:	df000017 	ldw	fp,0(sp)
 400e604:	dec00104 	addi	sp,sp,4
 400e608:	f800283a 	ret

0400e60c <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
 400e60c:	defffd04 	addi	sp,sp,-12
 400e610:	df000215 	stw	fp,8(sp)
 400e614:	df000204 	addi	fp,sp,8
 400e618:	e13fff15 	stw	r4,-4(fp)
 400e61c:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 400e620:	e0bfff17 	ldw	r2,-4(fp)
 400e624:	10800a17 	ldw	r2,40(r2)
 400e628:	1007883a 	mov	r3,r2
 400e62c:	00800d84 	movi	r2,54
 400e630:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
 400e634:	e0bfff17 	ldw	r2,-4(fp)
 400e638:	10800a17 	ldw	r2,40(r2)
 400e63c:	10800044 	addi	r2,r2,1
 400e640:	10800023 	ldbuio	r2,0(r2)
 400e644:	10803fcc 	andi	r2,r2,255
 400e648:	10ffffcc 	andi	r3,r2,65535
 400e64c:	e0bffe17 	ldw	r2,-8(fp)
 400e650:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
 400e654:	e0bfff17 	ldw	r2,-4(fp)
 400e658:	10800a17 	ldw	r2,40(r2)
 400e65c:	1007883a 	mov	r3,r2
 400e660:	00800dc4 	movi	r2,55
 400e664:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
 400e668:	e0bfff17 	ldw	r2,-4(fp)
 400e66c:	10800a17 	ldw	r2,40(r2)
 400e670:	10800044 	addi	r2,r2,1
 400e674:	10800023 	ldbuio	r2,0(r2)
 400e678:	10803fcc 	andi	r2,r2,255
 400e67c:	1006923a 	slli	r3,r2,8
 400e680:	00804034 	movhi	r2,256
 400e684:	10bfc004 	addi	r2,r2,-256
 400e688:	1884703a 	and	r2,r3,r2
 400e68c:	e0fffe17 	ldw	r3,-8(fp)
 400e690:	18c00017 	ldw	r3,0(r3)
 400e694:	10c5883a 	add	r2,r2,r3
 400e698:	1007883a 	mov	r3,r2
 400e69c:	e0bffe17 	ldw	r2,-8(fp)
 400e6a0:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
 400e6a4:	e0bffe17 	ldw	r2,-8(fp)
 400e6a8:	10800017 	ldw	r2,0(r2)
 400e6ac:	10a0000c 	andi	r2,r2,32768
 400e6b0:	10000626 	beq	r2,zero,400e6cc <alt_up_accelerometer_spi_read_z_axis+0xc0>
	{
		*(z_axis) |= 0xFFFF0000;
 400e6b4:	e0bffe17 	ldw	r2,-8(fp)
 400e6b8:	10800017 	ldw	r2,0(r2)
 400e6bc:	10bffff4 	orhi	r2,r2,65535
 400e6c0:	1007883a 	mov	r3,r2
 400e6c4:	e0bffe17 	ldw	r2,-8(fp)
 400e6c8:	10c00015 	stw	r3,0(r2)
	}

	return 0;
 400e6cc:	0005883a 	mov	r2,zero
}
 400e6d0:	e037883a 	mov	sp,fp
 400e6d4:	df000017 	ldw	fp,0(sp)
 400e6d8:	dec00104 	addi	sp,sp,4
 400e6dc:	f800283a 	ret

0400e6e0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 400e6e0:	defff504 	addi	sp,sp,-44
 400e6e4:	df000a15 	stw	fp,40(sp)
 400e6e8:	df000a04 	addi	fp,sp,40
 400e6ec:	e13ff915 	stw	r4,-28(fp)
 400e6f0:	e17ff815 	stw	r5,-32(fp)
 400e6f4:	e1bff715 	stw	r6,-36(fp)
 400e6f8:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 400e6fc:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
 400e700:	d0a71817 	ldw	r2,-25504(gp)
  
  if (alt_ticks_per_second ())
 400e704:	10003e26 	beq	r2,zero,400e800 <alt_alarm_start+0x120>
  {
    if (alarm)
 400e708:	e0bff917 	ldw	r2,-28(fp)
 400e70c:	10003a26 	beq	r2,zero,400e7f8 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
 400e710:	e0bff917 	ldw	r2,-28(fp)
 400e714:	e0fff717 	ldw	r3,-36(fp)
 400e718:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 400e71c:	e0bff917 	ldw	r2,-28(fp)
 400e720:	e0fff617 	ldw	r3,-40(fp)
 400e724:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
 400e728:	0005303a 	rdctl	r2,status
 400e72c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e730:	e0fffd17 	ldw	r3,-12(fp)
 400e734:	00bfff84 	movi	r2,-2
 400e738:	1884703a 	and	r2,r3,r2
 400e73c:	1001703a 	wrctl	status,r2
  return context;
 400e740:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
 400e744:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 400e748:	d0a71917 	ldw	r2,-25500(gp)
      
      current_nticks = alt_nticks();
 400e74c:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 400e750:	e0fff817 	ldw	r3,-32(fp)
 400e754:	e0bfff17 	ldw	r2,-4(fp)
 400e758:	1885883a 	add	r2,r3,r2
 400e75c:	10c00044 	addi	r3,r2,1
 400e760:	e0bff917 	ldw	r2,-28(fp)
 400e764:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 400e768:	e0bff917 	ldw	r2,-28(fp)
 400e76c:	10c00217 	ldw	r3,8(r2)
 400e770:	e0bfff17 	ldw	r2,-4(fp)
 400e774:	1880042e 	bgeu	r3,r2,400e788 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 400e778:	e0bff917 	ldw	r2,-28(fp)
 400e77c:	00c00044 	movi	r3,1
 400e780:	10c00405 	stb	r3,16(r2)
 400e784:	00000206 	br	400e790 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 400e788:	e0bff917 	ldw	r2,-28(fp)
 400e78c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 400e790:	e0bff917 	ldw	r2,-28(fp)
 400e794:	d0e00c04 	addi	r3,gp,-32720
 400e798:	e0fffb15 	stw	r3,-20(fp)
 400e79c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400e7a0:	e0bffa17 	ldw	r2,-24(fp)
 400e7a4:	e0fffb17 	ldw	r3,-20(fp)
 400e7a8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400e7ac:	e0bffb17 	ldw	r2,-20(fp)
 400e7b0:	10c00017 	ldw	r3,0(r2)
 400e7b4:	e0bffa17 	ldw	r2,-24(fp)
 400e7b8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400e7bc:	e0bffb17 	ldw	r2,-20(fp)
 400e7c0:	10800017 	ldw	r2,0(r2)
 400e7c4:	e0fffa17 	ldw	r3,-24(fp)
 400e7c8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400e7cc:	e0bffb17 	ldw	r2,-20(fp)
 400e7d0:	e0fffa17 	ldw	r3,-24(fp)
 400e7d4:	10c00015 	stw	r3,0(r2)
}
 400e7d8:	0001883a 	nop
 400e7dc:	e0bffe17 	ldw	r2,-8(fp)
 400e7e0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
 400e7e4:	e0bffc17 	ldw	r2,-16(fp)
 400e7e8:	1001703a 	wrctl	status,r2
}
 400e7ec:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
 400e7f0:	0005883a 	mov	r2,zero
 400e7f4:	00000306 	br	400e804 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
 400e7f8:	00bffa84 	movi	r2,-22
 400e7fc:	00000106 	br	400e804 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
 400e800:	00bfde84 	movi	r2,-134
  }
}
 400e804:	e037883a 	mov	sp,fp
 400e808:	df000017 	ldw	fp,0(sp)
 400e80c:	dec00104 	addi	sp,sp,4
 400e810:	f800283a 	ret

0400e814 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 400e814:	defffe04 	addi	sp,sp,-8
 400e818:	df000115 	stw	fp,4(sp)
 400e81c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 400e820:	e03fff15 	stw	zero,-4(fp)
 400e824:	00000506 	br	400e83c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 400e828:	e0bfff17 	ldw	r2,-4(fp)
 400e82c:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 400e830:	e0bfff17 	ldw	r2,-4(fp)
 400e834:	10800804 	addi	r2,r2,32
 400e838:	e0bfff15 	stw	r2,-4(fp)
 400e83c:	e0bfff17 	ldw	r2,-4(fp)
 400e840:	10820030 	cmpltui	r2,r2,2048
 400e844:	103ff81e 	bne	r2,zero,400e828 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 400e848:	0001883a 	nop
 400e84c:	0001883a 	nop
 400e850:	e037883a 	mov	sp,fp
 400e854:	df000017 	ldw	fp,0(sp)
 400e858:	dec00104 	addi	sp,sp,4
 400e85c:	f800283a 	ret

0400e860 <alt_get_errno>:
{
 400e860:	defffe04 	addi	sp,sp,-8
 400e864:	dfc00115 	stw	ra,4(sp)
 400e868:	df000015 	stw	fp,0(sp)
 400e86c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e870:	d0a00917 	ldw	r2,-32732(gp)
 400e874:	10000326 	beq	r2,zero,400e884 <alt_get_errno+0x24>
 400e878:	d0a00917 	ldw	r2,-32732(gp)
 400e87c:	103ee83a 	callr	r2
 400e880:	00000106 	br	400e888 <alt_get_errno+0x28>
 400e884:	d0a71204 	addi	r2,gp,-25528
}
 400e888:	e037883a 	mov	sp,fp
 400e88c:	dfc00117 	ldw	ra,4(sp)
 400e890:	df000017 	ldw	fp,0(sp)
 400e894:	dec00204 	addi	sp,sp,8
 400e898:	f800283a 	ret

0400e89c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 400e89c:	defffa04 	addi	sp,sp,-24
 400e8a0:	dfc00515 	stw	ra,20(sp)
 400e8a4:	df000415 	stw	fp,16(sp)
 400e8a8:	df000404 	addi	fp,sp,16
 400e8ac:	e13ffd15 	stw	r4,-12(fp)
 400e8b0:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 400e8b4:	e0bffd17 	ldw	r2,-12(fp)
 400e8b8:	10000326 	beq	r2,zero,400e8c8 <alt_dev_llist_insert+0x2c>
 400e8bc:	e0bffd17 	ldw	r2,-12(fp)
 400e8c0:	10800217 	ldw	r2,8(r2)
 400e8c4:	1000061e 	bne	r2,zero,400e8e0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 400e8c8:	400e8600 	call	400e860 <alt_get_errno>
 400e8cc:	1007883a 	mov	r3,r2
 400e8d0:	00800584 	movi	r2,22
 400e8d4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 400e8d8:	00bffa84 	movi	r2,-22
 400e8dc:	00001406 	br	400e930 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 400e8e0:	e0bffd17 	ldw	r2,-12(fp)
 400e8e4:	e0fffc17 	ldw	r3,-16(fp)
 400e8e8:	e0ffff15 	stw	r3,-4(fp)
 400e8ec:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
 400e8f0:	e0bffe17 	ldw	r2,-8(fp)
 400e8f4:	e0ffff17 	ldw	r3,-4(fp)
 400e8f8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400e8fc:	e0bfff17 	ldw	r2,-4(fp)
 400e900:	10c00017 	ldw	r3,0(r2)
 400e904:	e0bffe17 	ldw	r2,-8(fp)
 400e908:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
 400e90c:	e0bfff17 	ldw	r2,-4(fp)
 400e910:	10800017 	ldw	r2,0(r2)
 400e914:	e0fffe17 	ldw	r3,-8(fp)
 400e918:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400e91c:	e0bfff17 	ldw	r2,-4(fp)
 400e920:	e0fffe17 	ldw	r3,-8(fp)
 400e924:	10c00015 	stw	r3,0(r2)
}
 400e928:	0001883a 	nop

  return 0;  
 400e92c:	0005883a 	mov	r2,zero
}
 400e930:	e037883a 	mov	sp,fp
 400e934:	dfc00117 	ldw	ra,4(sp)
 400e938:	df000017 	ldw	fp,0(sp)
 400e93c:	dec00204 	addi	sp,sp,8
 400e940:	f800283a 	ret

0400e944 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 400e944:	defffd04 	addi	sp,sp,-12
 400e948:	dfc00215 	stw	ra,8(sp)
 400e94c:	df000115 	stw	fp,4(sp)
 400e950:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400e954:	00810074 	movhi	r2,1025
 400e958:	10bdb404 	addi	r2,r2,-2352
 400e95c:	e0bfff15 	stw	r2,-4(fp)
 400e960:	00000606 	br	400e97c <_do_ctors+0x38>
        (*ctor) (); 
 400e964:	e0bfff17 	ldw	r2,-4(fp)
 400e968:	10800017 	ldw	r2,0(r2)
 400e96c:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400e970:	e0bfff17 	ldw	r2,-4(fp)
 400e974:	10bfff04 	addi	r2,r2,-4
 400e978:	e0bfff15 	stw	r2,-4(fp)
 400e97c:	e0ffff17 	ldw	r3,-4(fp)
 400e980:	00810074 	movhi	r2,1025
 400e984:	10bdb504 	addi	r2,r2,-2348
 400e988:	18bff62e 	bgeu	r3,r2,400e964 <_do_ctors+0x20>
}
 400e98c:	0001883a 	nop
 400e990:	0001883a 	nop
 400e994:	e037883a 	mov	sp,fp
 400e998:	dfc00117 	ldw	ra,4(sp)
 400e99c:	df000017 	ldw	fp,0(sp)
 400e9a0:	dec00204 	addi	sp,sp,8
 400e9a4:	f800283a 	ret

0400e9a8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 400e9a8:	defffd04 	addi	sp,sp,-12
 400e9ac:	dfc00215 	stw	ra,8(sp)
 400e9b0:	df000115 	stw	fp,4(sp)
 400e9b4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400e9b8:	00810074 	movhi	r2,1025
 400e9bc:	10bdb404 	addi	r2,r2,-2352
 400e9c0:	e0bfff15 	stw	r2,-4(fp)
 400e9c4:	00000606 	br	400e9e0 <_do_dtors+0x38>
        (*dtor) (); 
 400e9c8:	e0bfff17 	ldw	r2,-4(fp)
 400e9cc:	10800017 	ldw	r2,0(r2)
 400e9d0:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400e9d4:	e0bfff17 	ldw	r2,-4(fp)
 400e9d8:	10bfff04 	addi	r2,r2,-4
 400e9dc:	e0bfff15 	stw	r2,-4(fp)
 400e9e0:	e0ffff17 	ldw	r3,-4(fp)
 400e9e4:	00810074 	movhi	r2,1025
 400e9e8:	10bdb504 	addi	r2,r2,-2348
 400e9ec:	18bff62e 	bgeu	r3,r2,400e9c8 <_do_dtors+0x20>
}
 400e9f0:	0001883a 	nop
 400e9f4:	0001883a 	nop
 400e9f8:	e037883a 	mov	sp,fp
 400e9fc:	dfc00117 	ldw	ra,4(sp)
 400ea00:	df000017 	ldw	fp,0(sp)
 400ea04:	dec00204 	addi	sp,sp,8
 400ea08:	f800283a 	ret

0400ea0c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 400ea0c:	defffa04 	addi	sp,sp,-24
 400ea10:	dfc00515 	stw	ra,20(sp)
 400ea14:	df000415 	stw	fp,16(sp)
 400ea18:	df000404 	addi	fp,sp,16
 400ea1c:	e13ffd15 	stw	r4,-12(fp)
 400ea20:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
 400ea24:	e0bffc17 	ldw	r2,-16(fp)
 400ea28:	10800017 	ldw	r2,0(r2)
 400ea2c:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 400ea30:	e13ffd17 	ldw	r4,-12(fp)
 400ea34:	4006a080 	call	4006a08 <strlen>
 400ea38:	10800044 	addi	r2,r2,1
 400ea3c:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 400ea40:	00000d06 	br	400ea78 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 400ea44:	e0bfff17 	ldw	r2,-4(fp)
 400ea48:	10800217 	ldw	r2,8(r2)
 400ea4c:	e0fffe17 	ldw	r3,-8(fp)
 400ea50:	180d883a 	mov	r6,r3
 400ea54:	e17ffd17 	ldw	r5,-12(fp)
 400ea58:	1009883a 	mov	r4,r2
 400ea5c:	400f4ac0 	call	400f4ac <memcmp>
 400ea60:	1000021e 	bne	r2,zero,400ea6c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 400ea64:	e0bfff17 	ldw	r2,-4(fp)
 400ea68:	00000706 	br	400ea88 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 400ea6c:	e0bfff17 	ldw	r2,-4(fp)
 400ea70:	10800017 	ldw	r2,0(r2)
 400ea74:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
 400ea78:	e0ffff17 	ldw	r3,-4(fp)
 400ea7c:	e0bffc17 	ldw	r2,-16(fp)
 400ea80:	18bff01e 	bne	r3,r2,400ea44 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
 400ea84:	0005883a 	mov	r2,zero
}
 400ea88:	e037883a 	mov	sp,fp
 400ea8c:	dfc00117 	ldw	ra,4(sp)
 400ea90:	df000017 	ldw	fp,0(sp)
 400ea94:	dec00204 	addi	sp,sp,8
 400ea98:	f800283a 	ret

0400ea9c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 400ea9c:	defffe04 	addi	sp,sp,-8
 400eaa0:	dfc00115 	stw	ra,4(sp)
 400eaa4:	df000015 	stw	fp,0(sp)
 400eaa8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 400eaac:	01420004 	movi	r5,2048
 400eab0:	0009883a 	mov	r4,zero
 400eab4:	400f33c0 	call	400f33c <alt_icache_flush>
#endif
}
 400eab8:	0001883a 	nop
 400eabc:	e037883a 	mov	sp,fp
 400eac0:	dfc00117 	ldw	ra,4(sp)
 400eac4:	df000017 	ldw	fp,0(sp)
 400eac8:	dec00204 	addi	sp,sp,8
 400eacc:	f800283a 	ret

0400ead0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 400ead0:	defff904 	addi	sp,sp,-28
 400ead4:	dfc00615 	stw	ra,24(sp)
 400ead8:	df000515 	stw	fp,20(sp)
 400eadc:	df000504 	addi	fp,sp,20
 400eae0:	e13ffe15 	stw	r4,-8(fp)
 400eae4:	e17ffd15 	stw	r5,-12(fp)
 400eae8:	e1bffc15 	stw	r6,-16(fp)
 400eaec:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
 400eaf0:	e1bffb17 	ldw	r6,-20(fp)
 400eaf4:	e17ffc17 	ldw	r5,-16(fp)
 400eaf8:	e13ffd17 	ldw	r4,-12(fp)
 400eafc:	400ee700 	call	400ee70 <open>
 400eb00:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
 400eb04:	e0bfff17 	ldw	r2,-4(fp)
 400eb08:	10001716 	blt	r2,zero,400eb68 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
 400eb0c:	e0bfff17 	ldw	r2,-4(fp)
 400eb10:	10c00324 	muli	r3,r2,12
 400eb14:	00810074 	movhi	r2,1025
 400eb18:	1885883a 	add	r2,r3,r2
 400eb1c:	10c1c417 	ldw	r3,1808(r2)
 400eb20:	e0bffe17 	ldw	r2,-8(fp)
 400eb24:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 400eb28:	e0bfff17 	ldw	r2,-4(fp)
 400eb2c:	10c00324 	muli	r3,r2,12
 400eb30:	00810074 	movhi	r2,1025
 400eb34:	1885883a 	add	r2,r3,r2
 400eb38:	10c1c517 	ldw	r3,1812(r2)
 400eb3c:	e0bffe17 	ldw	r2,-8(fp)
 400eb40:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 400eb44:	e0bfff17 	ldw	r2,-4(fp)
 400eb48:	10c00324 	muli	r3,r2,12
 400eb4c:	00810074 	movhi	r2,1025
 400eb50:	1885883a 	add	r2,r3,r2
 400eb54:	10c1c617 	ldw	r3,1816(r2)
 400eb58:	e0bffe17 	ldw	r2,-8(fp)
 400eb5c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 400eb60:	e13fff17 	ldw	r4,-4(fp)
 400eb64:	400d4880 	call	400d488 <alt_release_fd>
  }
} 
 400eb68:	0001883a 	nop
 400eb6c:	e037883a 	mov	sp,fp
 400eb70:	dfc00117 	ldw	ra,4(sp)
 400eb74:	df000017 	ldw	fp,0(sp)
 400eb78:	dec00204 	addi	sp,sp,8
 400eb7c:	f800283a 	ret

0400eb80 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 400eb80:	defffb04 	addi	sp,sp,-20
 400eb84:	dfc00415 	stw	ra,16(sp)
 400eb88:	df000315 	stw	fp,12(sp)
 400eb8c:	df000304 	addi	fp,sp,12
 400eb90:	e13fff15 	stw	r4,-4(fp)
 400eb94:	e17ffe15 	stw	r5,-8(fp)
 400eb98:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 400eb9c:	01c07fc4 	movi	r7,511
 400eba0:	01800044 	movi	r6,1
 400eba4:	e17fff17 	ldw	r5,-4(fp)
 400eba8:	01010074 	movhi	r4,1025
 400ebac:	2101c704 	addi	r4,r4,1820
 400ebb0:	400ead00 	call	400ead0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 400ebb4:	01c07fc4 	movi	r7,511
 400ebb8:	000d883a 	mov	r6,zero
 400ebbc:	e17ffe17 	ldw	r5,-8(fp)
 400ebc0:	01010074 	movhi	r4,1025
 400ebc4:	2101c404 	addi	r4,r4,1808
 400ebc8:	400ead00 	call	400ead0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 400ebcc:	01c07fc4 	movi	r7,511
 400ebd0:	01800044 	movi	r6,1
 400ebd4:	e17ffd17 	ldw	r5,-12(fp)
 400ebd8:	01010074 	movhi	r4,1025
 400ebdc:	2101ca04 	addi	r4,r4,1832
 400ebe0:	400ead00 	call	400ead0 <alt_open_fd>
}  
 400ebe4:	0001883a 	nop
 400ebe8:	e037883a 	mov	sp,fp
 400ebec:	dfc00117 	ldw	ra,4(sp)
 400ebf0:	df000017 	ldw	fp,0(sp)
 400ebf4:	dec00204 	addi	sp,sp,8
 400ebf8:	f800283a 	ret

0400ebfc <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 400ebfc:	defff004 	addi	sp,sp,-64
 400ec00:	df000f15 	stw	fp,60(sp)
 400ec04:	df000f04 	addi	fp,sp,60
 400ec08:	e13ff315 	stw	r4,-52(fp)
 400ec0c:	e17ff215 	stw	r5,-56(fp)
 400ec10:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
 400ec14:	00bffa84 	movi	r2,-22
 400ec18:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 400ec1c:	e0bff317 	ldw	r2,-52(fp)
 400ec20:	10800828 	cmpgeui	r2,r2,32
 400ec24:	1000501e 	bne	r2,zero,400ed68 <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
 400ec28:	0005303a 	rdctl	r2,status
 400ec2c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ec30:	e0fffd17 	ldw	r3,-12(fp)
 400ec34:	00bfff84 	movi	r2,-2
 400ec38:	1884703a 	and	r2,r3,r2
 400ec3c:	1001703a 	wrctl	status,r2
  return context;
 400ec40:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 400ec44:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
 400ec48:	e0bff317 	ldw	r2,-52(fp)
 400ec4c:	100890fa 	slli	r4,r2,3
 400ec50:	e0fff117 	ldw	r3,-60(fp)
 400ec54:	00810074 	movhi	r2,1025
 400ec58:	2085883a 	add	r2,r4,r2
 400ec5c:	10cd6c15 	stw	r3,13744(r2)
    alt_irq[id].context = context;
 400ec60:	e0bff317 	ldw	r2,-52(fp)
 400ec64:	100890fa 	slli	r4,r2,3
 400ec68:	e0fff217 	ldw	r3,-56(fp)
 400ec6c:	00810074 	movhi	r2,1025
 400ec70:	2085883a 	add	r2,r4,r2
 400ec74:	10cd6d15 	stw	r3,13748(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 400ec78:	e0bff117 	ldw	r2,-60(fp)
 400ec7c:	10001a26 	beq	r2,zero,400ece8 <alt_irq_register+0xec>
 400ec80:	e0bff317 	ldw	r2,-52(fp)
 400ec84:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
 400ec88:	0005303a 	rdctl	r2,status
 400ec8c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ec90:	e0fffb17 	ldw	r3,-20(fp)
 400ec94:	00bfff84 	movi	r2,-2
 400ec98:	1884703a 	and	r2,r3,r2
 400ec9c:	1001703a 	wrctl	status,r2
  return context;
 400eca0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400eca4:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
 400eca8:	00c00044 	movi	r3,1
 400ecac:	e0bffc17 	ldw	r2,-16(fp)
 400ecb0:	1884983a 	sll	r2,r3,r2
 400ecb4:	1007883a 	mov	r3,r2
 400ecb8:	d0a71717 	ldw	r2,-25508(gp)
 400ecbc:	1884b03a 	or	r2,r3,r2
 400ecc0:	d0a71715 	stw	r2,-25508(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400ecc4:	d0a71717 	ldw	r2,-25508(gp)
 400ecc8:	100170fa 	wrctl	ienable,r2
 400eccc:	e0bffa17 	ldw	r2,-24(fp)
 400ecd0:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
 400ecd4:	e0bff917 	ldw	r2,-28(fp)
 400ecd8:	1001703a 	wrctl	status,r2
}
 400ecdc:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
 400ece0:	0005883a 	mov	r2,zero
 400ece4:	00001a06 	br	400ed50 <alt_irq_register+0x154>
 400ece8:	e0bff317 	ldw	r2,-52(fp)
 400ecec:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
 400ecf0:	0005303a 	rdctl	r2,status
 400ecf4:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ecf8:	e0fff717 	ldw	r3,-36(fp)
 400ecfc:	00bfff84 	movi	r2,-2
 400ed00:	1884703a 	and	r2,r3,r2
 400ed04:	1001703a 	wrctl	status,r2
  return context;
 400ed08:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
 400ed0c:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
 400ed10:	00c00044 	movi	r3,1
 400ed14:	e0bff817 	ldw	r2,-32(fp)
 400ed18:	1884983a 	sll	r2,r3,r2
 400ed1c:	0084303a 	nor	r2,zero,r2
 400ed20:	1007883a 	mov	r3,r2
 400ed24:	d0a71717 	ldw	r2,-25508(gp)
 400ed28:	1884703a 	and	r2,r3,r2
 400ed2c:	d0a71715 	stw	r2,-25508(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400ed30:	d0a71717 	ldw	r2,-25508(gp)
 400ed34:	100170fa 	wrctl	ienable,r2
 400ed38:	e0bff617 	ldw	r2,-40(fp)
 400ed3c:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
 400ed40:	e0bff517 	ldw	r2,-44(fp)
 400ed44:	1001703a 	wrctl	status,r2
}
 400ed48:	0001883a 	nop
  return 0;
 400ed4c:	0005883a 	mov	r2,zero
 400ed50:	e0bfff15 	stw	r2,-4(fp)
 400ed54:	e0bffe17 	ldw	r2,-8(fp)
 400ed58:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
 400ed5c:	e0bff417 	ldw	r2,-48(fp)
 400ed60:	1001703a 	wrctl	status,r2
}
 400ed64:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
 400ed68:	e0bfff17 	ldw	r2,-4(fp)
}
 400ed6c:	e037883a 	mov	sp,fp
 400ed70:	df000017 	ldw	fp,0(sp)
 400ed74:	dec00104 	addi	sp,sp,4
 400ed78:	f800283a 	ret

0400ed7c <alt_get_errno>:
{
 400ed7c:	defffe04 	addi	sp,sp,-8
 400ed80:	dfc00115 	stw	ra,4(sp)
 400ed84:	df000015 	stw	fp,0(sp)
 400ed88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400ed8c:	d0a00917 	ldw	r2,-32732(gp)
 400ed90:	10000326 	beq	r2,zero,400eda0 <alt_get_errno+0x24>
 400ed94:	d0a00917 	ldw	r2,-32732(gp)
 400ed98:	103ee83a 	callr	r2
 400ed9c:	00000106 	br	400eda4 <alt_get_errno+0x28>
 400eda0:	d0a71204 	addi	r2,gp,-25528
}
 400eda4:	e037883a 	mov	sp,fp
 400eda8:	dfc00117 	ldw	ra,4(sp)
 400edac:	df000017 	ldw	fp,0(sp)
 400edb0:	dec00204 	addi	sp,sp,8
 400edb4:	f800283a 	ret

0400edb8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 400edb8:	defffd04 	addi	sp,sp,-12
 400edbc:	df000215 	stw	fp,8(sp)
 400edc0:	df000204 	addi	fp,sp,8
 400edc4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 400edc8:	e0bffe17 	ldw	r2,-8(fp)
 400edcc:	10800217 	ldw	r2,8(r2)
 400edd0:	10d00034 	orhi	r3,r2,16384
 400edd4:	e0bffe17 	ldw	r2,-8(fp)
 400edd8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400eddc:	e03fff15 	stw	zero,-4(fp)
 400ede0:	00001a06 	br	400ee4c <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400ede4:	e0bfff17 	ldw	r2,-4(fp)
 400ede8:	10c00324 	muli	r3,r2,12
 400edec:	00810074 	movhi	r2,1025
 400edf0:	1885883a 	add	r2,r3,r2
 400edf4:	10c1c417 	ldw	r3,1808(r2)
 400edf8:	e0bffe17 	ldw	r2,-8(fp)
 400edfc:	10800017 	ldw	r2,0(r2)
 400ee00:	18800f1e 	bne	r3,r2,400ee40 <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400ee04:	e0bfff17 	ldw	r2,-4(fp)
 400ee08:	10c00324 	muli	r3,r2,12
 400ee0c:	00810074 	movhi	r2,1025
 400ee10:	1885883a 	add	r2,r3,r2
 400ee14:	1081c617 	ldw	r2,1816(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
 400ee18:	1000090e 	bge	r2,zero,400ee40 <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
 400ee1c:	e0bfff17 	ldw	r2,-4(fp)
 400ee20:	10c00324 	muli	r3,r2,12
 400ee24:	00810074 	movhi	r2,1025
 400ee28:	1081c404 	addi	r2,r2,1808
 400ee2c:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400ee30:	e0fffe17 	ldw	r3,-8(fp)
 400ee34:	18800226 	beq	r3,r2,400ee40 <alt_file_locked+0x88>
    {
      return -EACCES;
 400ee38:	00bffcc4 	movi	r2,-13
 400ee3c:	00000806 	br	400ee60 <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
 400ee40:	e0bfff17 	ldw	r2,-4(fp)
 400ee44:	10800044 	addi	r2,r2,1
 400ee48:	e0bfff15 	stw	r2,-4(fp)
 400ee4c:	d0a00817 	ldw	r2,-32736(gp)
 400ee50:	1007883a 	mov	r3,r2
 400ee54:	e0bfff17 	ldw	r2,-4(fp)
 400ee58:	18bfe22e 	bgeu	r3,r2,400ede4 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 400ee5c:	0005883a 	mov	r2,zero
}
 400ee60:	e037883a 	mov	sp,fp
 400ee64:	df000017 	ldw	fp,0(sp)
 400ee68:	dec00104 	addi	sp,sp,4
 400ee6c:	f800283a 	ret

0400ee70 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 400ee70:	defff604 	addi	sp,sp,-40
 400ee74:	dfc00915 	stw	ra,36(sp)
 400ee78:	df000815 	stw	fp,32(sp)
 400ee7c:	df000804 	addi	fp,sp,32
 400ee80:	e13ffa15 	stw	r4,-24(fp)
 400ee84:	e17ff915 	stw	r5,-28(fp)
 400ee88:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 400ee8c:	00bfffc4 	movi	r2,-1
 400ee90:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
 400ee94:	00bffb44 	movi	r2,-19
 400ee98:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
 400ee9c:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 400eea0:	d1600604 	addi	r5,gp,-32744
 400eea4:	e13ffa17 	ldw	r4,-24(fp)
 400eea8:	400ea0c0 	call	400ea0c <alt_find_dev>
 400eeac:	e0bfff15 	stw	r2,-4(fp)
 400eeb0:	e0bfff17 	ldw	r2,-4(fp)
 400eeb4:	1000051e 	bne	r2,zero,400eecc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 400eeb8:	e13ffa17 	ldw	r4,-24(fp)
 400eebc:	400f1940 	call	400f194 <alt_find_file>
 400eec0:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
 400eec4:	00800044 	movi	r2,1
 400eec8:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 400eecc:	e0bfff17 	ldw	r2,-4(fp)
 400eed0:	10002926 	beq	r2,zero,400ef78 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 400eed4:	e13fff17 	ldw	r4,-4(fp)
 400eed8:	400f29c0 	call	400f29c <alt_get_fd>
 400eedc:	e0bffe15 	stw	r2,-8(fp)
 400eee0:	e0bffe17 	ldw	r2,-8(fp)
 400eee4:	1000030e 	bge	r2,zero,400eef4 <open+0x84>
    {
      status = index;
 400eee8:	e0bffe17 	ldw	r2,-8(fp)
 400eeec:	e0bffd15 	stw	r2,-12(fp)
 400eef0:	00002306 	br	400ef80 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 400eef4:	e0bffe17 	ldw	r2,-8(fp)
 400eef8:	10c00324 	muli	r3,r2,12
 400eefc:	00810074 	movhi	r2,1025
 400ef00:	1081c404 	addi	r2,r2,1808
 400ef04:	1885883a 	add	r2,r3,r2
 400ef08:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 400ef0c:	e0fff917 	ldw	r3,-28(fp)
 400ef10:	00900034 	movhi	r2,16384
 400ef14:	10bfffc4 	addi	r2,r2,-1
 400ef18:	1886703a 	and	r3,r3,r2
 400ef1c:	e0bffb17 	ldw	r2,-20(fp)
 400ef20:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 400ef24:	e0bffc17 	ldw	r2,-16(fp)
 400ef28:	1000051e 	bne	r2,zero,400ef40 <open+0xd0>
 400ef2c:	e13ffb17 	ldw	r4,-20(fp)
 400ef30:	400edb80 	call	400edb8 <alt_file_locked>
 400ef34:	e0bffd15 	stw	r2,-12(fp)
 400ef38:	e0bffd17 	ldw	r2,-12(fp)
 400ef3c:	10001016 	blt	r2,zero,400ef80 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 400ef40:	e0bfff17 	ldw	r2,-4(fp)
 400ef44:	10800317 	ldw	r2,12(r2)
 400ef48:	10000826 	beq	r2,zero,400ef6c <open+0xfc>
 400ef4c:	e0bfff17 	ldw	r2,-4(fp)
 400ef50:	10800317 	ldw	r2,12(r2)
 400ef54:	e1fff817 	ldw	r7,-32(fp)
 400ef58:	e1bff917 	ldw	r6,-28(fp)
 400ef5c:	e17ffa17 	ldw	r5,-24(fp)
 400ef60:	e13ffb17 	ldw	r4,-20(fp)
 400ef64:	103ee83a 	callr	r2
 400ef68:	00000106 	br	400ef70 <open+0x100>
 400ef6c:	0005883a 	mov	r2,zero
 400ef70:	e0bffd15 	stw	r2,-12(fp)
 400ef74:	00000206 	br	400ef80 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 400ef78:	00bffb44 	movi	r2,-19
 400ef7c:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 400ef80:	e0bffd17 	ldw	r2,-12(fp)
 400ef84:	1000090e 	bge	r2,zero,400efac <open+0x13c>
  {
    alt_release_fd (index);  
 400ef88:	e13ffe17 	ldw	r4,-8(fp)
 400ef8c:	400d4880 	call	400d488 <alt_release_fd>
    ALT_ERRNO = -status;
 400ef90:	400ed7c0 	call	400ed7c <alt_get_errno>
 400ef94:	1007883a 	mov	r3,r2
 400ef98:	e0bffd17 	ldw	r2,-12(fp)
 400ef9c:	0085c83a 	sub	r2,zero,r2
 400efa0:	18800015 	stw	r2,0(r3)
    return -1;
 400efa4:	00bfffc4 	movi	r2,-1
 400efa8:	00000106 	br	400efb0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 400efac:	e0bffe17 	ldw	r2,-8(fp)
}
 400efb0:	e037883a 	mov	sp,fp
 400efb4:	dfc00117 	ldw	ra,4(sp)
 400efb8:	df000017 	ldw	fp,0(sp)
 400efbc:	dec00204 	addi	sp,sp,8
 400efc0:	f800283a 	ret

0400efc4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 400efc4:	defffa04 	addi	sp,sp,-24
 400efc8:	df000515 	stw	fp,20(sp)
 400efcc:	df000504 	addi	fp,sp,20
 400efd0:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
 400efd4:	0005303a 	rdctl	r2,status
 400efd8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400efdc:	e0fffc17 	ldw	r3,-16(fp)
 400efe0:	00bfff84 	movi	r2,-2
 400efe4:	1884703a 	and	r2,r3,r2
 400efe8:	1001703a 	wrctl	status,r2
  return context;
 400efec:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 400eff0:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
 400eff4:	e0bffb17 	ldw	r2,-20(fp)
 400eff8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 400effc:	e0bffd17 	ldw	r2,-12(fp)
 400f000:	10800017 	ldw	r2,0(r2)
 400f004:	e0fffd17 	ldw	r3,-12(fp)
 400f008:	18c00117 	ldw	r3,4(r3)
 400f00c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 400f010:	e0bffd17 	ldw	r2,-12(fp)
 400f014:	10800117 	ldw	r2,4(r2)
 400f018:	e0fffd17 	ldw	r3,-12(fp)
 400f01c:	18c00017 	ldw	r3,0(r3)
 400f020:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 400f024:	e0bffd17 	ldw	r2,-12(fp)
 400f028:	e0fffd17 	ldw	r3,-12(fp)
 400f02c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 400f030:	e0bffd17 	ldw	r2,-12(fp)
 400f034:	e0fffd17 	ldw	r3,-12(fp)
 400f038:	10c00015 	stw	r3,0(r2)
} 
 400f03c:	0001883a 	nop
 400f040:	e0bfff17 	ldw	r2,-4(fp)
 400f044:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
 400f048:	e0bffe17 	ldw	r2,-8(fp)
 400f04c:	1001703a 	wrctl	status,r2
}
 400f050:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
 400f054:	0001883a 	nop
 400f058:	e037883a 	mov	sp,fp
 400f05c:	df000017 	ldw	fp,0(sp)
 400f060:	dec00104 	addi	sp,sp,4
 400f064:	f800283a 	ret

0400f068 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 400f068:	defffb04 	addi	sp,sp,-20
 400f06c:	dfc00415 	stw	ra,16(sp)
 400f070:	df000315 	stw	fp,12(sp)
 400f074:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 400f078:	d0a00c17 	ldw	r2,-32720(gp)
 400f07c:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 400f080:	d0a71917 	ldw	r2,-25500(gp)
 400f084:	10800044 	addi	r2,r2,1
 400f088:	d0a71915 	stw	r2,-25500(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400f08c:	00002e06 	br	400f148 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 400f090:	e0bfff17 	ldw	r2,-4(fp)
 400f094:	10800017 	ldw	r2,0(r2)
 400f098:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 400f09c:	e0bfff17 	ldw	r2,-4(fp)
 400f0a0:	10800403 	ldbu	r2,16(r2)
 400f0a4:	10803fcc 	andi	r2,r2,255
 400f0a8:	10000426 	beq	r2,zero,400f0bc <alt_tick+0x54>
 400f0ac:	d0a71917 	ldw	r2,-25500(gp)
 400f0b0:	1000021e 	bne	r2,zero,400f0bc <alt_tick+0x54>
    {
      alarm->rollover = 0;
 400f0b4:	e0bfff17 	ldw	r2,-4(fp)
 400f0b8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 400f0bc:	e0bfff17 	ldw	r2,-4(fp)
 400f0c0:	10800217 	ldw	r2,8(r2)
 400f0c4:	d0e71917 	ldw	r3,-25500(gp)
 400f0c8:	18801d36 	bltu	r3,r2,400f140 <alt_tick+0xd8>
 400f0cc:	e0bfff17 	ldw	r2,-4(fp)
 400f0d0:	10800403 	ldbu	r2,16(r2)
 400f0d4:	10803fcc 	andi	r2,r2,255
 400f0d8:	1000191e 	bne	r2,zero,400f140 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 400f0dc:	e0bfff17 	ldw	r2,-4(fp)
 400f0e0:	10800317 	ldw	r2,12(r2)
 400f0e4:	e0ffff17 	ldw	r3,-4(fp)
 400f0e8:	18c00517 	ldw	r3,20(r3)
 400f0ec:	1809883a 	mov	r4,r3
 400f0f0:	103ee83a 	callr	r2
 400f0f4:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 400f0f8:	e0bffd17 	ldw	r2,-12(fp)
 400f0fc:	1000031e 	bne	r2,zero,400f10c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 400f100:	e13fff17 	ldw	r4,-4(fp)
 400f104:	400efc40 	call	400efc4 <alt_alarm_stop>
 400f108:	00000d06 	br	400f140 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 400f10c:	e0bfff17 	ldw	r2,-4(fp)
 400f110:	10c00217 	ldw	r3,8(r2)
 400f114:	e0bffd17 	ldw	r2,-12(fp)
 400f118:	1887883a 	add	r3,r3,r2
 400f11c:	e0bfff17 	ldw	r2,-4(fp)
 400f120:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 400f124:	e0bfff17 	ldw	r2,-4(fp)
 400f128:	10c00217 	ldw	r3,8(r2)
 400f12c:	d0a71917 	ldw	r2,-25500(gp)
 400f130:	1880032e 	bgeu	r3,r2,400f140 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 400f134:	e0bfff17 	ldw	r2,-4(fp)
 400f138:	00c00044 	movi	r3,1
 400f13c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 400f140:	e0bffe17 	ldw	r2,-8(fp)
 400f144:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
 400f148:	e0ffff17 	ldw	r3,-4(fp)
 400f14c:	d0a00c04 	addi	r2,gp,-32720
 400f150:	18bfcf1e 	bne	r3,r2,400f090 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 400f154:	0001883a 	nop
}
 400f158:	0001883a 	nop
 400f15c:	e037883a 	mov	sp,fp
 400f160:	dfc00117 	ldw	ra,4(sp)
 400f164:	df000017 	ldw	fp,0(sp)
 400f168:	dec00204 	addi	sp,sp,8
 400f16c:	f800283a 	ret

0400f170 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 400f170:	deffff04 	addi	sp,sp,-4
 400f174:	df000015 	stw	fp,0(sp)
 400f178:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 400f17c:	000170fa 	wrctl	ienable,zero
}
 400f180:	0001883a 	nop
 400f184:	e037883a 	mov	sp,fp
 400f188:	df000017 	ldw	fp,0(sp)
 400f18c:	dec00104 	addi	sp,sp,4
 400f190:	f800283a 	ret

0400f194 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 400f194:	defffb04 	addi	sp,sp,-20
 400f198:	dfc00415 	stw	ra,16(sp)
 400f19c:	df000315 	stw	fp,12(sp)
 400f1a0:	df000304 	addi	fp,sp,12
 400f1a4:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 400f1a8:	d0a00417 	ldw	r2,-32752(gp)
 400f1ac:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 400f1b0:	00003106 	br	400f278 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 400f1b4:	e0bfff17 	ldw	r2,-4(fp)
 400f1b8:	10800217 	ldw	r2,8(r2)
 400f1bc:	1009883a 	mov	r4,r2
 400f1c0:	4006a080 	call	4006a08 <strlen>
 400f1c4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 400f1c8:	e0bfff17 	ldw	r2,-4(fp)
 400f1cc:	10c00217 	ldw	r3,8(r2)
 400f1d0:	e0bffe17 	ldw	r2,-8(fp)
 400f1d4:	10bfffc4 	addi	r2,r2,-1
 400f1d8:	1885883a 	add	r2,r3,r2
 400f1dc:	10800003 	ldbu	r2,0(r2)
 400f1e0:	10803fcc 	andi	r2,r2,255
 400f1e4:	1080201c 	xori	r2,r2,128
 400f1e8:	10bfe004 	addi	r2,r2,-128
 400f1ec:	10800bd8 	cmpnei	r2,r2,47
 400f1f0:	1000031e 	bne	r2,zero,400f200 <alt_find_file+0x6c>
    {
      len -= 1;
 400f1f4:	e0bffe17 	ldw	r2,-8(fp)
 400f1f8:	10bfffc4 	addi	r2,r2,-1
 400f1fc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 400f200:	e0bffe17 	ldw	r2,-8(fp)
 400f204:	e0fffd17 	ldw	r3,-12(fp)
 400f208:	1885883a 	add	r2,r3,r2
 400f20c:	10800003 	ldbu	r2,0(r2)
 400f210:	10803fcc 	andi	r2,r2,255
 400f214:	1080201c 	xori	r2,r2,128
 400f218:	10bfe004 	addi	r2,r2,-128
 400f21c:	10800be0 	cmpeqi	r2,r2,47
 400f220:	1000081e 	bne	r2,zero,400f244 <alt_find_file+0xb0>
 400f224:	e0bffe17 	ldw	r2,-8(fp)
 400f228:	e0fffd17 	ldw	r3,-12(fp)
 400f22c:	1885883a 	add	r2,r3,r2
 400f230:	10800003 	ldbu	r2,0(r2)
 400f234:	10803fcc 	andi	r2,r2,255
 400f238:	1080201c 	xori	r2,r2,128
 400f23c:	10bfe004 	addi	r2,r2,-128
 400f240:	10000a1e 	bne	r2,zero,400f26c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 400f244:	e0bfff17 	ldw	r2,-4(fp)
 400f248:	10800217 	ldw	r2,8(r2)
 400f24c:	e0fffe17 	ldw	r3,-8(fp)
 400f250:	180d883a 	mov	r6,r3
 400f254:	e17ffd17 	ldw	r5,-12(fp)
 400f258:	1009883a 	mov	r4,r2
 400f25c:	400f4ac0 	call	400f4ac <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
 400f260:	1000021e 	bne	r2,zero,400f26c <alt_find_file+0xd8>
    {
      /* match found */

      return next;
 400f264:	e0bfff17 	ldw	r2,-4(fp)
 400f268:	00000706 	br	400f288 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 400f26c:	e0bfff17 	ldw	r2,-4(fp)
 400f270:	10800017 	ldw	r2,0(r2)
 400f274:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
 400f278:	e0ffff17 	ldw	r3,-4(fp)
 400f27c:	d0a00404 	addi	r2,gp,-32752
 400f280:	18bfcc1e 	bne	r3,r2,400f1b4 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
 400f284:	0005883a 	mov	r2,zero
}
 400f288:	e037883a 	mov	sp,fp
 400f28c:	dfc00117 	ldw	ra,4(sp)
 400f290:	df000017 	ldw	fp,0(sp)
 400f294:	dec00204 	addi	sp,sp,8
 400f298:	f800283a 	ret

0400f29c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 400f29c:	defffc04 	addi	sp,sp,-16
 400f2a0:	df000315 	stw	fp,12(sp)
 400f2a4:	df000304 	addi	fp,sp,12
 400f2a8:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
 400f2ac:	00bffa04 	movi	r2,-24
 400f2b0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 400f2b4:	e03fff15 	stw	zero,-4(fp)
 400f2b8:	00001706 	br	400f318 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
 400f2bc:	e0bfff17 	ldw	r2,-4(fp)
 400f2c0:	10c00324 	muli	r3,r2,12
 400f2c4:	00810074 	movhi	r2,1025
 400f2c8:	1885883a 	add	r2,r3,r2
 400f2cc:	1081c417 	ldw	r2,1808(r2)
 400f2d0:	10000e1e 	bne	r2,zero,400f30c <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
 400f2d4:	e0bfff17 	ldw	r2,-4(fp)
 400f2d8:	11000324 	muli	r4,r2,12
 400f2dc:	e0fffd17 	ldw	r3,-12(fp)
 400f2e0:	00810074 	movhi	r2,1025
 400f2e4:	2085883a 	add	r2,r4,r2
 400f2e8:	10c1c415 	stw	r3,1808(r2)
      if (i > alt_max_fd)
 400f2ec:	d0e00817 	ldw	r3,-32736(gp)
 400f2f0:	e0bfff17 	ldw	r2,-4(fp)
 400f2f4:	1880020e 	bge	r3,r2,400f300 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
 400f2f8:	e0bfff17 	ldw	r2,-4(fp)
 400f2fc:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
 400f300:	e0bfff17 	ldw	r2,-4(fp)
 400f304:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 400f308:	00000706 	br	400f328 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
 400f30c:	e0bfff17 	ldw	r2,-4(fp)
 400f310:	10800044 	addi	r2,r2,1
 400f314:	e0bfff15 	stw	r2,-4(fp)
 400f318:	e0bfff17 	ldw	r2,-4(fp)
 400f31c:	10800810 	cmplti	r2,r2,32
 400f320:	103fe61e 	bne	r2,zero,400f2bc <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
 400f324:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 400f328:	e0bffe17 	ldw	r2,-8(fp)
}
 400f32c:	e037883a 	mov	sp,fp
 400f330:	df000017 	ldw	fp,0(sp)
 400f334:	dec00104 	addi	sp,sp,4
 400f338:	f800283a 	ret

0400f33c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 400f33c:	defffb04 	addi	sp,sp,-20
 400f340:	df000415 	stw	fp,16(sp)
 400f344:	df000404 	addi	fp,sp,16
 400f348:	e13ffd15 	stw	r4,-12(fp)
 400f34c:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 400f350:	e0bffc17 	ldw	r2,-16(fp)
 400f354:	10820070 	cmpltui	r2,r2,2049
 400f358:	1000021e 	bne	r2,zero,400f364 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 400f35c:	00820004 	movi	r2,2048
 400f360:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
 400f364:	e0fffd17 	ldw	r3,-12(fp)
 400f368:	e0bffc17 	ldw	r2,-16(fp)
 400f36c:	1885883a 	add	r2,r3,r2
 400f370:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 400f374:	e0bffd17 	ldw	r2,-12(fp)
 400f378:	e0bfff15 	stw	r2,-4(fp)
 400f37c:	00000506 	br	400f394 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 400f380:	e0bfff17 	ldw	r2,-4(fp)
 400f384:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 400f388:	e0bfff17 	ldw	r2,-4(fp)
 400f38c:	10800804 	addi	r2,r2,32
 400f390:	e0bfff15 	stw	r2,-4(fp)
 400f394:	e0ffff17 	ldw	r3,-4(fp)
 400f398:	e0bffe17 	ldw	r2,-8(fp)
 400f39c:	18bff836 	bltu	r3,r2,400f380 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 400f3a0:	e0bffd17 	ldw	r2,-12(fp)
 400f3a4:	108007cc 	andi	r2,r2,31
 400f3a8:	10000226 	beq	r2,zero,400f3b4 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 400f3ac:	e0bfff17 	ldw	r2,-4(fp)
 400f3b0:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 400f3b4:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 400f3b8:	0001883a 	nop
 400f3bc:	e037883a 	mov	sp,fp
 400f3c0:	df000017 	ldw	fp,0(sp)
 400f3c4:	dec00104 	addi	sp,sp,4
 400f3c8:	f800283a 	ret

0400f3cc <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 400f3cc:	defffe04 	addi	sp,sp,-8
 400f3d0:	df000115 	stw	fp,4(sp)
 400f3d4:	df000104 	addi	fp,sp,4
 400f3d8:	e13fff15 	stw	r4,-4(fp)
 400f3dc:	e0bfff17 	ldw	r2,-4(fp)
 400f3e0:	10bffe84 	addi	r2,r2,-6
 400f3e4:	10c00428 	cmpgeui	r3,r2,16
 400f3e8:	1800191e 	bne	r3,zero,400f450 <alt_exception_cause_generated_bad_addr+0x84>
 400f3ec:	100690ba 	slli	r3,r2,2
 400f3f0:	00810074 	movhi	r2,1025
 400f3f4:	1885883a 	add	r2,r3,r2
 400f3f8:	10bd0017 	ldw	r2,-3072(r2)
 400f3fc:	1000683a 	jmp	r2
 400f400:	0400f440 	call	400f44 <__alt_mem_dram_controller-0x3bff0bc>
 400f404:	0400f440 	call	400f44 <__alt_mem_dram_controller-0x3bff0bc>
 400f408:	0400f450 	cmplti	r16,zero,977
 400f40c:	0400f450 	cmplti	r16,zero,977
 400f410:	0400f450 	cmplti	r16,zero,977
 400f414:	0400f440 	call	400f44 <__alt_mem_dram_controller-0x3bff0bc>
 400f418:	0400f448 	cmpgei	r16,zero,977
 400f41c:	0400f450 	cmplti	r16,zero,977
 400f420:	0400f440 	call	400f44 <__alt_mem_dram_controller-0x3bff0bc>
 400f424:	0400f440 	call	400f44 <__alt_mem_dram_controller-0x3bff0bc>
 400f428:	0400f450 	cmplti	r16,zero,977
 400f42c:	0400f440 	call	400f44 <__alt_mem_dram_controller-0x3bff0bc>
 400f430:	0400f448 	cmpgei	r16,zero,977
 400f434:	0400f450 	cmplti	r16,zero,977
 400f438:	0400f450 	cmplti	r16,zero,977
 400f43c:	0400f440 	call	400f44 <__alt_mem_dram_controller-0x3bff0bc>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 400f440:	00800044 	movi	r2,1
 400f444:	00000306 	br	400f454 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 400f448:	0005883a 	mov	r2,zero
 400f44c:	00000106 	br	400f454 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
 400f450:	0005883a 	mov	r2,zero
  }
}
 400f454:	e037883a 	mov	sp,fp
 400f458:	df000017 	ldw	fp,0(sp)
 400f45c:	dec00104 	addi	sp,sp,4
 400f460:	f800283a 	ret

0400f464 <atexit>:
 400f464:	200b883a 	mov	r5,r4
 400f468:	000f883a 	mov	r7,zero
 400f46c:	000d883a 	mov	r6,zero
 400f470:	0009883a 	mov	r4,zero
 400f474:	400f5241 	jmpi	400f524 <__register_exitproc>

0400f478 <exit>:
 400f478:	defffe04 	addi	sp,sp,-8
 400f47c:	000b883a 	mov	r5,zero
 400f480:	dc000015 	stw	r16,0(sp)
 400f484:	dfc00115 	stw	ra,4(sp)
 400f488:	2021883a 	mov	r16,r4
 400f48c:	400f5b40 	call	400f5b4 <__call_exitprocs>
 400f490:	00810074 	movhi	r2,1025
 400f494:	11064717 	ldw	r4,6428(r2)
 400f498:	20800f17 	ldw	r2,60(r4)
 400f49c:	10000126 	beq	r2,zero,400f4a4 <exit+0x2c>
 400f4a0:	103ee83a 	callr	r2
 400f4a4:	8009883a 	mov	r4,r16
 400f4a8:	400cd040 	call	400cd04 <_exit>

0400f4ac <memcmp>:
 400f4ac:	30800130 	cmpltui	r2,r6,4
 400f4b0:	10000b1e 	bne	r2,zero,400f4e0 <memcmp+0x34>
 400f4b4:	2144b03a 	or	r2,r4,r5
 400f4b8:	108000cc 	andi	r2,r2,3
 400f4bc:	1000171e 	bne	r2,zero,400f51c <memcmp+0x70>
 400f4c0:	20c00017 	ldw	r3,0(r4)
 400f4c4:	28800017 	ldw	r2,0(r5)
 400f4c8:	1880141e 	bne	r3,r2,400f51c <memcmp+0x70>
 400f4cc:	31bfff04 	addi	r6,r6,-4
 400f4d0:	30800128 	cmpgeui	r2,r6,4
 400f4d4:	21000104 	addi	r4,r4,4
 400f4d8:	29400104 	addi	r5,r5,4
 400f4dc:	103ff81e 	bne	r2,zero,400f4c0 <memcmp+0x14>
 400f4e0:	30bfffc4 	addi	r2,r6,-1
 400f4e4:	30000b26 	beq	r6,zero,400f514 <memcmp+0x68>
 400f4e8:	11800044 	addi	r6,r2,1
 400f4ec:	298d883a 	add	r6,r5,r6
 400f4f0:	00000106 	br	400f4f8 <memcmp+0x4c>
 400f4f4:	29800726 	beq	r5,r6,400f514 <memcmp+0x68>
 400f4f8:	20800003 	ldbu	r2,0(r4)
 400f4fc:	28c00003 	ldbu	r3,0(r5)
 400f500:	21000044 	addi	r4,r4,1
 400f504:	29400044 	addi	r5,r5,1
 400f508:	10fffa26 	beq	r2,r3,400f4f4 <memcmp+0x48>
 400f50c:	10c5c83a 	sub	r2,r2,r3
 400f510:	f800283a 	ret
 400f514:	0005883a 	mov	r2,zero
 400f518:	f800283a 	ret
 400f51c:	30bfffc4 	addi	r2,r6,-1
 400f520:	003ff106 	br	400f4e8 <memcmp+0x3c>

0400f524 <__register_exitproc>:
 400f524:	00810074 	movhi	r2,1025
 400f528:	10c64717 	ldw	r3,6428(r2)
 400f52c:	18805217 	ldw	r2,328(r3)
 400f530:	10001726 	beq	r2,zero,400f590 <__register_exitproc+0x6c>
 400f534:	10c00117 	ldw	r3,4(r2)
 400f538:	1a000808 	cmpgei	r8,r3,32
 400f53c:	40001b1e 	bne	r8,zero,400f5ac <__register_exitproc+0x88>
 400f540:	20000b26 	beq	r4,zero,400f570 <__register_exitproc+0x4c>
 400f544:	181090ba 	slli	r8,r3,2
 400f548:	02400044 	movi	r9,1
 400f54c:	48d2983a 	sll	r9,r9,r3
 400f550:	1211883a 	add	r8,r2,r8
 400f554:	41802215 	stw	r6,136(r8)
 400f558:	11806217 	ldw	r6,392(r2)
 400f55c:	21000098 	cmpnei	r4,r4,2
 400f560:	324cb03a 	or	r6,r6,r9
 400f564:	11806215 	stw	r6,392(r2)
 400f568:	41c04215 	stw	r7,264(r8)
 400f56c:	20000b26 	beq	r4,zero,400f59c <__register_exitproc+0x78>
 400f570:	19000084 	addi	r4,r3,2
 400f574:	200890ba 	slli	r4,r4,2
 400f578:	18c00044 	addi	r3,r3,1
 400f57c:	10c00115 	stw	r3,4(r2)
 400f580:	1105883a 	add	r2,r2,r4
 400f584:	11400015 	stw	r5,0(r2)
 400f588:	0005883a 	mov	r2,zero
 400f58c:	f800283a 	ret
 400f590:	18805304 	addi	r2,r3,332
 400f594:	18805215 	stw	r2,328(r3)
 400f598:	003fe606 	br	400f534 <__register_exitproc+0x10>
 400f59c:	11006317 	ldw	r4,396(r2)
 400f5a0:	2252b03a 	or	r9,r4,r9
 400f5a4:	12406315 	stw	r9,396(r2)
 400f5a8:	003ff106 	br	400f570 <__register_exitproc+0x4c>
 400f5ac:	00bfffc4 	movi	r2,-1
 400f5b0:	f800283a 	ret

0400f5b4 <__call_exitprocs>:
 400f5b4:	defff704 	addi	sp,sp,-36
 400f5b8:	00810074 	movhi	r2,1025
 400f5bc:	dcc00315 	stw	r19,12(sp)
 400f5c0:	14c64717 	ldw	r19,6428(r2)
 400f5c4:	dc800215 	stw	r18,8(sp)
 400f5c8:	dfc00815 	stw	ra,32(sp)
 400f5cc:	9c805217 	ldw	r18,328(r19)
 400f5d0:	ddc00715 	stw	r23,28(sp)
 400f5d4:	dd800615 	stw	r22,24(sp)
 400f5d8:	dd400515 	stw	r21,20(sp)
 400f5dc:	dd000415 	stw	r20,16(sp)
 400f5e0:	dc400115 	stw	r17,4(sp)
 400f5e4:	dc000015 	stw	r16,0(sp)
 400f5e8:	90001026 	beq	r18,zero,400f62c <__call_exitprocs+0x78>
 400f5ec:	202b883a 	mov	r21,r4
 400f5f0:	282d883a 	mov	r22,r5
 400f5f4:	05000044 	movi	r20,1
 400f5f8:	94000117 	ldw	r16,4(r18)
 400f5fc:	847fffc4 	addi	r17,r16,-1
 400f600:	88000a16 	blt	r17,zero,400f62c <__call_exitprocs+0x78>
 400f604:	84000044 	addi	r16,r16,1
 400f608:	802090ba 	slli	r16,r16,2
 400f60c:	9421883a 	add	r16,r18,r16
 400f610:	b0001126 	beq	r22,zero,400f658 <__call_exitprocs+0xa4>
 400f614:	80804017 	ldw	r2,256(r16)
 400f618:	15800f26 	beq	r2,r22,400f658 <__call_exitprocs+0xa4>
 400f61c:	8c7fffc4 	addi	r17,r17,-1
 400f620:	88bfffd8 	cmpnei	r2,r17,-1
 400f624:	843fff04 	addi	r16,r16,-4
 400f628:	103ff91e 	bne	r2,zero,400f610 <__call_exitprocs+0x5c>
 400f62c:	dfc00817 	ldw	ra,32(sp)
 400f630:	ddc00717 	ldw	r23,28(sp)
 400f634:	dd800617 	ldw	r22,24(sp)
 400f638:	dd400517 	ldw	r21,20(sp)
 400f63c:	dd000417 	ldw	r20,16(sp)
 400f640:	dcc00317 	ldw	r19,12(sp)
 400f644:	dc800217 	ldw	r18,8(sp)
 400f648:	dc400117 	ldw	r17,4(sp)
 400f64c:	dc000017 	ldw	r16,0(sp)
 400f650:	dec00904 	addi	sp,sp,36
 400f654:	f800283a 	ret
 400f658:	90800117 	ldw	r2,4(r18)
 400f65c:	81800017 	ldw	r6,0(r16)
 400f660:	10bfffc4 	addi	r2,r2,-1
 400f664:	14401726 	beq	r2,r17,400f6c4 <__call_exitprocs+0x110>
 400f668:	80000015 	stw	zero,0(r16)
 400f66c:	303feb26 	beq	r6,zero,400f61c <__call_exitprocs+0x68>
 400f670:	a446983a 	sll	r3,r20,r17
 400f674:	90806217 	ldw	r2,392(r18)
 400f678:	95c00117 	ldw	r23,4(r18)
 400f67c:	1884703a 	and	r2,r3,r2
 400f680:	1000081e 	bne	r2,zero,400f6a4 <__call_exitprocs+0xf0>
 400f684:	303ee83a 	callr	r6
 400f688:	90c00117 	ldw	r3,4(r18)
 400f68c:	98805217 	ldw	r2,328(r19)
 400f690:	1dc0011e 	bne	r3,r23,400f698 <__call_exitprocs+0xe4>
 400f694:	90bfe126 	beq	r18,r2,400f61c <__call_exitprocs+0x68>
 400f698:	103fe426 	beq	r2,zero,400f62c <__call_exitprocs+0x78>
 400f69c:	1025883a 	mov	r18,r2
 400f6a0:	003fd506 	br	400f5f8 <__call_exitprocs+0x44>
 400f6a4:	90806317 	ldw	r2,396(r18)
 400f6a8:	81002017 	ldw	r4,128(r16)
 400f6ac:	1886703a 	and	r3,r3,r2
 400f6b0:	1800061e 	bne	r3,zero,400f6cc <__call_exitprocs+0x118>
 400f6b4:	200b883a 	mov	r5,r4
 400f6b8:	a809883a 	mov	r4,r21
 400f6bc:	303ee83a 	callr	r6
 400f6c0:	003ff106 	br	400f688 <__call_exitprocs+0xd4>
 400f6c4:	94400115 	stw	r17,4(r18)
 400f6c8:	003fe806 	br	400f66c <__call_exitprocs+0xb8>
 400f6cc:	303ee83a 	callr	r6
 400f6d0:	003fed06 	br	400f688 <__call_exitprocs+0xd4>
